const Discord = require('discord.js');
const { delay, randomRange, verify } = require('../util/Util');
const words = ['çikolata', 'vortex', 'odun', 'bomba', 'süt', 'şimşek', 'yıldırım', 'patlat', 'savaş', 'kelime', 'yok et', 'bilmem', 'öldür', 'sonsuzluk', 'gerçek'];

exports.run = async (client, msg, args) => {
  
  this.fighting = new Set();
  
  let opponent = msg.mentions.users.first()
	if (!opponent) return msg.reply("Oynamak istediğin kişiyi etiketlemelisin!")
  
  if (opponent.bot) return msg.reply('Botlar ile oynayamazsın!');
		if (opponent.id === msg.author.id) return msg.reply('Kendin ile kapışamassın!');
		if (this.fighting.has(msg.channel.id)) return msg.reply('Kanal başına sadece bir meydan okuma gelebilir!');
		this.fighting.add(msg.channel.id);
		try {
			await msg.channel.send(`${opponent}, bu meydan okumayı kabul ediyor musun? (\`evet\` veya \`hayır\` olarak cevap veriniz.)`);
			const verification = await verify(msg.channel, opponent);
			if (!verification) {
				this.fighting.delete(msg.channel.id);
				return msg.reply('Meydan okuman reddedildi...');
			}
			await msg.channel.send('Hazırlanın kelime geliyor...').then(m => {m.delete(3000)});
			const word = words[Math.floor(Math.random() * words.length)];
			await msg.channel.send(`ŞİMDİ \`${word.toUpperCase()}\` YAZ!`);
			await msg.channel.send(`_Kelimeyi tamamen küçük harfle yazınız._`);
			const filter = res => [opponent.id, msg.author.id].includes(res.author.id) && res.content.toLowerCase() === word;
			const winner = await msg.channel.awaitMessages(filter, {
				max: 1,
				time: 30000
			});
			this.fighting.delete(msg.channel.id);
			if (!winner.size) return msg.channel.send('Kimse kazanmadı, berabere bitti!');
			return msg.channel.send(`Hızlıymışsın! Tebrikler ${winner.first().author} Kazandın!`);
		} catch (err) {
			this.fighting.delete(msg.channel.id);
			throw err;
		}
  
  }

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['yazı-yarışı', 'ilk-yazan-kazanır','kelime-yarışması'],
  permLevel: 0,
  kategori: "eğlence"
};

exports.help = {
  name: 'yazan-kazanır',
  category: "eğlence",
  description: 'Botun verdiği kelimeyi ilk yazan kazanır oyunu!',
  usage: 'yazan-kazanır [@kullanıcı]'
};
const Discord = require('discord.js');
const fs = require('fs');
const db = require('quick.db');

exports.run = async (client, message, args) => {
  

  let y = await client.emojis.get(client.emojiler.yan);
  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

  var ac = client.emojis.get(client.emojiler.evet);
  var ka = client.emojis.get(client.emojiler.hayır);
const yenilik = client.ayarlar.yenilik;

  

  
  const ayarReis = new Discord.RichEmbed()
  .setColor('RANDOM')
  .setDescription(`${ac}\`Spam koruması eklendi.\`\n${ac}\`anti-raid sistemi eklendi.   \`\n${ac}\`gold üyelere özel mesaj eklendi     \`\``)
  .setTimestamp()
  message.channel.send(ayarReis)

  
  
};

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: [],
    permLevel: 0,
    kategori: "bot",
  };
  
  exports.help = {
    name: 'yenilikler',
    description: 'Bota eklenmiş olan yenilikleri gösterir.',
    usage: 'yenilikler',
  };

const Discord = require('discord.js');
const { stripIndents } = require('common-tags');

exports.run = (client, msg, args) => {


let x;
    let x2;
    let x3;
    let x4;
    let x5;
    let x6;
    let x7;
    let x8;
    let x9;
    let x10;
    let x11;
    
    //yönetici
    if (msg.member.hasPermission("ADMINISTRATOR")) x = `${client.emojis.get(client.emojiler.Yvar)}`
    if (!msg.member.hasPermission("ADMINISTRATOR")) x = `${client.emojis.get(client.emojiler.Yyok)}`
    
    //Denetim kaydı
    if (msg.member.hasPermission("VIEW_AUDIT_LOG")) x2 = `${client.emojis.get(client.emojiler.Yvar)}`
    if (!msg.member.hasPermission("VIEW_AUDIT_LOG")) x2 = `${client.emojis.get(client.emojiler.Yyok)}`
    
    //Sunucuyu yönet
    if (msg.member.hasPermission("MANAGE_GUILD")) x3 = `${client.emojis.get(client.emojiler.Yvar)}`
    if (!msg.member.hasPermission("MANAGE_GUILD")) x3 = `${client.emojis.get(client.emojiler.Yyok)}`
    
    //Rolleri yönet
    if (msg.member.hasPermission("MANAGE_ROLES")) x4 = `${client.emojis.get(client.emojiler.Yvar)}`
    if (!msg.member.hasPermission("MANAGE_ROLES")) x4 = `${client.emojis.get(client.emojiler.Yyok)}`
    
    //Kanalları yönet
    if (msg.member.hasPermission("MANAGE_CHANNELS")) x5 = `${client.emojis.get(client.emojiler.Yvar)}`
    if (!msg.member.hasPermission("MANAGE_CHANNELS")) x5 = `${client.emojis.get(client.emojiler.Yyok)}`
    
    //üyeleri at
    if (msg.member.hasPermission("KICK_MEMBERS")) x6 = `${client.emojis.get(client.emojiler.Yvar)}`
    if (!msg.member.hasPermission("KICK_MEMBERS")) x6 = `${client.emojis.get(client.emojiler.Yyok)}`
    
    //üyeleri yasakla
    if (msg.member.hasPermission("BAN_MEMBERS")) x7 = `${client.emojis.get(client.emojiler.Yvar)}`
    if (!msg.member.hasPermission("BAN_MEMBERS")) x7 = `${client.emojis.get(client.emojiler.Yyok)}`
    
    //mesajları yönet
    if (msg.member.hasPermission("MANAGE_MESSAGES")) x8 = `${client.emojis.get(client.emojiler.Yvar)}`
    if (!msg.member.hasPermission("MANAGE_MESSAGES")) x8 = `${client.emojis.get(client.emojiler.Yyok)}`
    
    //kullanıcı adlarını yönet
    if (msg.member.hasPermission("MANAGE_NICKNAMES")) x9 = `${client.emojis.get(client.emojiler.Yvar)}`
    if (!msg.member.hasPermission("MANAGE_NICKNAMES")) x9 = `${client.emojis.get(client.emojiler.Yyok)}`
    
    //emojileri yönet
    if (msg.member.hasPermission("MANAGE_EMOJIS")) x10 = `${client.emojis.get(client.emojiler.Yvar)}`
    if (!msg.member.hasPermission("MANAGE_EMOJIS")) x10 = `${client.emojis.get(client.emojiler.Yyok)}`
    
    //webhookları yönet
    if (msg.member.hasPermission("MANAGE_WEBHOOKS")) x11 = `${client.emojis.get(client.emojiler.Yvar)}`
    if (!msg.member.hasPermission("MANAGE_WEBHOOKS")) x11 = `${client.emojis.get(client.emojiler.Yyok)}`
    
    const embed = new Discord.RichEmbed()
    .setDescription(`${x} Yönetici\n${x2} Denetim Kaydını Görüntüle\n${x3} Sunucuyu Yönet\n${x4} Rolleri Yönet\n${x5} Kanalları Yönet\n${x6} Üyeleri At\n${x7} Üyeleri Yasakla\n${x8} Mesajları Yönet\n${x9} Kullanıcı Adlarını Yönet\n${x10} Emojileri Yönet\n${x11} Webhook'ları Yönet`)
    msg.channel.send(embed)
 
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['izinlerim'],
  permLevel: 0,
    kategori: "kullanıcı"
};

exports.help = {
  name: 'yetkilerim',
  description: 'Komutu kullandığınız sunucudaki yetkilerinizi/izinlerinizi gösterir.',
  usage: 'yetkilerim'
};
const Discord = require('discord.js');

exports.run = async (client, message) => {
 
  var str = ''
for(var i = 0; i < message.guild.members.size; i++) {
   if(message.guild.members.array()[i].hasPermission("MANAGE_MESSAGES") && message.guild.members.array()[i].presence.status === "dnd" && !message.guild.members.array()[i].user.bot) {
      str += `${client.emojis.get(client.emojiler.rahatsızetme)} ${message.guild.members.array()[i].user.tag}\n`
    }
    else if(message.guild.members.array()[i].hasPermission("MANAGE_MESSAGES") && message.guild.members.array()[i].presence.status === "online" && !message.guild.members.array()[i].user.bot){
      str += `${client.emojis.get(client.emojiler.çevrimiçi)} ${message.guild.members.array()[i].user.tag}\n`
    }
    else if(message.guild.members.array()[i].hasPermission("MANAGE_MESSAGES") && message.guild.members.array()[i].presence.status === "idle" && !message.guild.members.array()[i].user.bot){
      str += `${client.emojis.get(client.emojiler.boşta)} ${message.guild.members.array()[i].user.tag}\n`
    }
      else if (message.guild.members.array()[i].hasPermission("MANAGE_MESSAGES") && message.guild.members.array()[i].presence.status === "offline" && !message.guild.members.array()[i].user.bot){
      str += `${client.emojis.get(client.emojiler.çevrimdışı)} ${message.guild.members.array()[i].user.tag}\n`
    }
}

  var embed = new Discord.RichEmbed()
  .setColor("RANDOM")
  .setAuthor(`${message.guild.name} - Sunucu Yetkilileri`)
  .setDescription(str.replace(message.guild.owner.user.tag, `:crown: **${message.guild.owner.user.tag}**`))
  .setThumbnail(message.guild.iconURL)
  .setFooter("NOT: Bu komut sunucudaki \"Mesajları Yönet\" iznine sahip kullanıcıları listeler.")
message.channel.send(embed)
  
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['yetkili-listesi', 'sunucu-yetkilileri', 'moderatorler', 'modlar', 'moderatörler', 'staffs'],
  permLevel: 0,
  
  kategori: "sunucu"
};

exports.help = {
  name: 'yetkililer',
  category: 'sunucu',
  description: 'Bulunduğunuz sunucudaki yetkilileri çevrimiçi, çevrımdışı/görünmez, rahatsız etmeyin ve boşta modlarında olup olmadıklarını göstererek listeler. \n(Mesajları Yönet yetkisine sahip kullanıcıları yetkili olarak sayar.)',
  usage: 'yetkililer'
};
const Discord = require('discord.js');
const ms = require('parse-ms');

exports.run = async(client, message, args) => {
  let okul = new Date('2020-01-01 00:00:00')
    let zaman = ms(okul - Date.now())

    message.channel.send(`Yılbaşının kutlanmasına **${zaman.days}** gün **${zaman.hours}** saat **${zaman.minutes}** dakika kaldı!`)

}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
    kategori: 'eğlence',
  permLevel: 0
};

exports.help = {
  name: 'yılbaşı',

  description: 'Yılbaşının kutlanmasına kaç gün kaç saat kaç dakika kaç saniye olduğunu gösterir.',
  usage: 'okulsayaç'
};
const Discord = require("discord.js");
var yodasay = require('yodasay');
var db = require('quick.db');
exports.run = (client, msg, args) => {

    let text = args.join(" ");

if (db.has(`üyelikk_${msg.author.id}`)) {
  msg.channel.send("```" + yodasay.say({
        text : text
    }) + "```")
  msg.react('617413726768988160')
 } else
  msg.channel.send('Bu komut gold üyelere özel.')

    
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['yodasay'],
    kategori: 'eğlence',
  permLevel: 0
};

exports.help = {
  name: 'yoda',
  description: 'İstediğiniz Şeyi yoda Söylermiş Gibi Yazar.',
  usage: 'yodasay [yazı]'
};
var Jimp = require('jimp');
const Discord = require('discord.js');
exports.run = function(client, message, args) {
  const snekfetch = require("snekfetch");
  snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
  .set("Authorization", client.ayarlar.dbltoken)
  .then(response => {
  var check = response.body.voted;
  if(check == 1) {
  
  let user = message.mentions.users.first() || message.author
  
      Jimp.read(user.avatarURL, function (err, image){
          image.resize(295, 295)
          if(err) return message.channel.send('Bir hata oluştu: ``'+err+'``\n Lütfen yapımcıya bildirin.');
          image.invert().write('./x/zıt-renk.png');
          setTimeout(() => {
            message.channel.send({file: './x/zıt-renk.png'});
            message.react('617413726768988160')
          }, 500);
      });

    } else {
      let embed = new Discord.RichEmbed()
            .setTitle('HATA')
            .setColor('RANDOM')
            .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
          message.channel.send(embed)
            return }});
    };


exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["invert",'zıt','zıtrenk'],
  permLevel: 0,

  kategori: "efekt"
};

exports.help = {
  name: 'zıt-renk',
  description: 'Avatarınızın rengini tersine çevirir.',
  usage: 'zıt-renk veya zıt-renk <@kullanıcı>'
};
const db = require("quick.db")
const Discord = require('discord.js');

exports.run = function(client, message, args) {
const snekfetch = require("snekfetch");
     var s = 'tr'
  var a = client.commands.get('afk').help.name
    if(db.has(`dil_${message.guild.id}`) === true) {
        var s = 'en'
        var a = client.commands.get('afk').help.enname
    }
    const dil = client[s]
    const o = a
 
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
  var USER = message.author;
  var REASON = args.slice(0).join("  ");
  if(!REASON) return message.channel.send(`${client.emojis.get(client.emojiler.hayır)} ${dil.afk.hata}`).then(message => message.delete(7000));
  
  db.set(`afk_${USER.id}`, REASON);
  db.set(`afk_süre_${USER.id}`, Date.now());
  message.channel.send(`${client.emojis.get(client.emojiler.evet)} ${dil.afk.giris}`).then(message => message.delete(7000));

  } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
  
};
  
 

exports.conf = {
  enabled: true, 
  guildOnly: true, 
  aliases: [],
  kategori: 'kullanıcı',
  permLevel: 0 
};

exports.help = {
  name: 'afk', 
  description: 'Afk moduna girmenizi sağlar.',
  usage: 'afk <sebep>'
};
const Discord = require("discord.js")
exports.run = (bot, message) => {
  const guildArray = bot.guilds.array()
  while (guildArray.length) {
    const embed = new Discord.RichEmbed();
    const guilds = guildArray.splice(0,25);
    for (const guild of guilds) {
      embed.addField(`**${guild.name}** - ÜYE SAYISI : **${guild.memberCount}**`, guild.id);
      embed.setColor('#D97634')
      embed.setTitle('Ailemiz')
      embed.setDescription(`Büyük bir ailedeyiz !. Ailemde **${bot.guilds.size}** kadar sunucu var !`)
      message.delete();
    }
    message.channel.send({embed: embed});
  }
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['ailemiz'],
    kategori: 'yapımcı',
  permLevel: 5
};

exports.help = {
  name: "ailemiz",
  description: "Shows all the servers the bot is in.",
  usage: "ailemiz"
};
var figlet = require('figlet');
const Discord = require('discord.js');

module.exports.run = (client, message, args, tools) => {
 const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {  
  var maxLen = 75 // Kendiniz en yüksek harf sayısını ayarlayabilirsiniz
  
  if(args.join(' ').length > maxLen) return message.channel.send(`Çok karakter yazdınız. En fazla ${maxLen} karakter yazabilirsin!`) 
     if(!args[0]) return message.channel.send('Lütfen geçerli yazı giriniz.');
  
  figlet(`${args.join(' ')}`, function(err, data) {
      if (err) {
          console.log('Bir hata var...');
          console.dir(err);
          return;
      }

      message.channel.send(`${data}`, {code: 'AsciiArt'});

  });

} else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
  
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
    kategori: 'kullanıcı',
  permLevel: 0
};
exports.help = {
  name: 'ascii',
  isim: 'Ascii',
  süre: '5 saniye',
   description: 'Ascii şeklinde yazı yazmanızı sağlar.',
  usage: 'ascii <mesaj>'
};

const Discord = require('discord.js');

exports.run = (client, message, args) => {
      const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
  //if(message.author.id !== "486817385051979786") return message.reply("Bu komut şuanda güncellenmektedir!")
  
  const db = require('quick.db');
  
 
 
        let member = message.guild.member(message.mentions.users.array()[0] || message.guild.members.get(args[0]))
        let member2 = message.guild.member(message.mentions.users.array()[1] || message.guild.members.get(args[1]))
        var s = message.author
        if(member2) {
                var s = member2.user
        }
        if(!member) {
                const embed = new Discord.RichEmbed()
                        .setDescription('Lütfen bir üyeyi etiketleyiniz')
                        .setColor("RANDOM")
                message.channel.send({embed})
                return
        }
 
        var anasonuc = Math.floor(Math.random() * 101)
        var kalp = ''
        var akalp = ''
        if(Math.floor(Math.round(anasonuc / 10) * 10) >= 10) {
                var c = 0
                for(var i = 0; i < Math.floor(Math.round(anasonuc / 10)); i++) {
                        kalp += '❤️'
                        c++
                }
                for(var x = c; x < 10; x++) {
                        akalp += `🖤`
                }
        } else {
                var kalp = '🖤'
                var akalp = '🖤🖤🖤🖤🖤🖤🖤🖤🖤'
        }
  var yorum = "Sizi evlendirelim <3"
        if(anasonuc < 80) {
                var yorum = "Biraz daha uğraşırsan bu iş olacak gibi :)"
        }
        if(anasonuc < 60) {
                var yorum = "Eh biraz biraz bir şeyler var gibi."
        }
        if(anasonuc < 40) {
                var yorum = "Azıcıkta olsa bir şeyler hissediyor sana :)"
        }
        if(anasonuc < 20) {
                var yorum =  "Bu iş olmaz sen bunu unut."
        }
  
        const embed = new Discord.RichEmbed()
                .setAuthor(`${member.user.tag} ve ${s.tag}`)
                .setDescription(`Aşk yüzdesi **%${anasonuc}**! \n${kalp}${akalp} \n\n${yorum}`)
                .setColor("RANDOM")
        message.channel.send({embed})
  
  
    
} else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
};

exports.conf = {
  enabled: true, 
  guildOnly: false, 
  aliases: ["aşk","aşkölçer","aşk-ölçer"],
  permLevel: 0,
    kategori: "eğlence",
  category: "fun"
};

exports.help = {
  name: 'aşk-ölçer',
  description: 'İki kullanıcı arasındaki aşkı ölçer.',
  usage: 'aşk-ölçer <@kullanıcı> veya aşk-ölçer <@kullanıcı> <@kullanıcı>',
};


const Discord = require('discord.js');
exports.run = (client, message, args) => {
  const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {  
    let guild = message.guild
    let reason = args.slice(1).join(' ');
    let user = message.mentions.users.first();
    if (message.mentions.users.size < 1) return message.reply('Kime ateş edeceksen etiketlemelisin.').catch(console.error);
    message.channel.send('Ateş ediliyor....')
        .then(nmsg => nmsg.edit('https://goo.gl/91Y2az'))
        .then(nmsg => nmsg.edit('https://goo.gl/91Y2az'))
        .then(nmsg => nmsg.edit('https://goo.gl/91Y2az'))
        .then(nmsg => nmsg.edit('https://goo.gl/fWHUqt'))
        .then(nmsg => nmsg.edit('https://goo.gl/fWHUqt'))
        .then(nmsg => nmsg.edit('https://goo.gl/fWHUqt'))
        .then(nmsg => nmsg.edit('https://goo.gl/fWHUqt'))
        .then(nmsg => nmsg.edit('https://goo.gl/fWHUqt'))
        .then(nmsg => nmsg.edit('https://goo.gl/91Y2az'))
        .then(nmsg => nmsg.edit('https://goo.gl/91Y2az'))
        .then(nmsg => nmsg.edit(`${Random[kafasınasık]}`));
    var Random = [
    'Reiz sen ne yaptın? Adam öldü.',
    'Cazibene dayanamayıp adam kendini öldürdü.',
    'Adam yoğun bakımda, Kaç.',
        'Iskaladın tekrar dene.',
    ];
    var kafasınasık = Math.floor(Math.random() * Random.length);
  } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
  
};


exports.conf = {
    enabled: true,
    guildOnly: true,
  aliases: ['ateş','ateşet'],
  kategori: 'eğlence',
    permLevel: 0
};

exports.help = {
    name: 'ateş-et',
    description: 'İstediğiniz kişinin kafasına sıkar.',
    usage: 'ateş-et <@kullanıcı>]'
};
const Discord = require('discord.js');

exports.run = (client, message, args) => {
    const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {  

let mention = message.mentions.users.first();
let sender = "";

if (message.channel.guild.member(message.author).nickname == null) {
  sender = message.author.username;
} else {
  sender = message.channel.guild.member(message.author).nickname;
}

if (mention != null || mention != undefined) {
  var name = mention.username + "'s ";
  if (mention.username.endsWith("s")) {
    name = mention.username + "' ";
  }
  const avatarEmbedOther = new Discord.RichEmbed()
  .setAuthor(mention.username, mention.avatarURL)
  .setColor('RED')
  .setImage(mention.avatarURL)
  .setFooter(`${message.author.tag} tarafından istendi.`, message.author.avatarURL)
 // .setDescription(`[Avatarın büyük halini göster!](${message.author.avatarURL})`);
  message.channel.sendEmbed(avatarEmbedOther);
  
  return;
} else {
  const avatarEmbedYou = new Discord.RichEmbed()
  .setAuthor(sender, message.author.avatarURL)
  .setColor('RED')
  .setImage(message.author.avatarURL)
  .setFooter(`${message.author.tag} tarafından istendi.`, message.author.avatarURL)
  //.setDescription(`[Avatarın büyük halini göster!](${message.author.avatarURL})`);
  message.channel.sendEmbed(avatarEmbedYou);

  return;
}
message.channel.sendMessage("Render hatası yada bilinmeyen bir hata oldu.");
} else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
  
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['avatarım'],
    kategori: 'kullanıcı',
  permLevel: 0
};

exports.help = {
  name: 'avatar',
  isim: 'Avatar',
  süre: 'Yok',

  description: 'Avatarınızı gösterir ve ya birini etiketlerseniz o kişinin avatarını gösterir.',
  usage: 'avatar <@kullanıcı>'
};
const Discord = require('discord.js');
const fs = require('fs');
const db = require('quick.db');

exports.run = async (client, message, args) => {
  
     var s = 'tr'
  var a = client.commands.get('ayarlar').help.name
    if(db.has(`dil_${message.guild.id}`) === true) {
        var s = 'en'
        var a = client.commands.get('ayarlar').help.enname
    }
    const dil = client[s]
    const o = a
  let y = "- ";
  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

  var ac = client.emojis.get(client.emojiler.açıkA);
  var ka = client.emojis.get(client.emojiler.kapalıA);



  const sayfa = [`${message.guild.name} | Ayarları

${y}**Sunucu prefixi** ${prefix}
${y}**Mod \ Log ${dil.ayarlar.errors.channel}** ${db.has(`log_${message.guild.id}`) ? ac + message.guild.channels.get(db.fetch(`log_${message.guild.id}`)) : `${ka} ${dil.ayarlar.errors.notset} **${prefix}log-ayarla**`}
${y}**Resimli Giriş-Çıkış ${dil.ayarlar.errors.channel}** ${db.has(`gcc_${message.guild.id}`) ? ac + message.guild.channels.get(db.fetch(`gcc_${message.guild.id}`)) : `${ka} ${dil.ayarlar.errors.notset} **${prefix}resim-kanal #kanal**`}  
${y}**Güvenlik ${dil.ayarlar.errors.channel}** ${db.has(`guvenlik3_${message.guild.id}`) ? ac + message.guild.channels.get(db.fetch(`guvenlik3_${message.guild.id}`)) : `${ka} ${dil.ayarlar.errors.notset} **${prefix}güvenlik #kanal**`} 
${y}**Komut ${dil.ayarlar.errors.channel}** ${db.has(`ktr_${message.guild.id}`) ? ac + message.guild.channels.get(db.fetch(`ktr_${message.guild.id}`)) : `${ka} ${dil.ayarlar.errors.notset} **${prefix}komut-kanal #kanal**`}  
${y}**Link engeli ${dil.ayarlar.errors.system}** ${db.has(`linkE_${message.guild.id}`) ? `${ac} ${dil.ayarlar.errors.acik}` : `${ka} ${dil.ayarlar.errors.notset} **${prefix}link-engelle**`}
${y}**Küfür engeli ${dil.ayarlar.errors.system}** ${db.has(`küfürE_${message.guild.id}`) ? `${ac} ${dil.ayarlar.errors.acik}` : `${ka} ${dil.ayarlar.errors.notset} **${prefix}küfür-engelle**`}
${y}**Selam ${dil.ayarlar.errors.system}** ${db.has(`ss_${message.guild.id}`) ? `${ac} ${dil.ayarlar.errors.acik}` : `${ka} ${dil.ayarlar.errors.notset} **${prefix}sa-as**`}
${y}**Büyük harf engeli ${dil.ayarlar.errors.system}** ${db.has(`capsE_${message.guild.id}`) ? `${ac} ${dil.ayarlar.errors.acik}` : `${ka} ${dil.ayarlar.errors.notset} **${prefix}büyükharf-engelle**` }
${y}**Seviye ${dil.ayarlar.errors.system}** ${db.has(`lvll_${message.guild.id}`) ? `${ac} ${dil.ayarlar.errors.acik}` : `${ka} ${dil.ayarlar.errors.notset} **${prefix}seviye-sistem aç**` }
${y}**Otorol** ${db.has(`otoR_${message.guild.id}`) ? `${ac} \`@${message.guild.roles.get(db.fetch(`otoR_${message.guild.id}`)).name}\`` : `${ka} ${dil.ayarlar.errors.notset} **${prefix}oto-rol**`}
${y}**Otorol Kayıt ${dil.ayarlar.errors.channel}** ${db.has(`otoRK_${message.guild.id}`) ? `${ac} \`${message.guild.channels.get(db.fetch(`otoRK_${message.guild.id}`)).name}\`` : `${ka} ${dil.ayarlar.errors.notset} **${prefix}oto-rol-kanal**`}
${y}**Sayaç ${dil.ayarlar.errors.channel}** ${db.has(`sKanal_${message.guild.id}`) ? `${ac} ${message.guild.channels.get(db.fetch(`sKanal_${message.guild.id}`)).name}`: `${ka} ${dil.ayarlar.errors.notset} **${prefix}sayaç-kanal-ayarla** `}
${y}**Sayaç ${dil.ayarlar.errors.system}** ${db.has(`sayac_${message.guild.id}`) ?`${ac} ${db.fetch(`sayac_${message.guild.id}`)}` : `${ka} ${dil.ayarlar.errors.notset} **${prefix}sayaç-ayarla**`}
${y}**Otomatig tag ${dil.ayarlar.errors.system}** ${db.has(`tagB_${message.guild.id}`) ? ac + db.fetch(`tagB_${message.guild.id}`) : `${ka} ${dil.ayarlar.errors.notset} **${prefix}tag-ayarla**`}
${y}**Otomatig tag ${dil.ayarlar.errors.channel}** ${db.has(`tagKanal_${message.guild.id}`) ? ac + message.guild.channels.get(db.fetch(`tagKanal_${message.guild.id}`)).name : `${ka} ${dil.ayarlar.errors.notset} **${prefix}tag-kanal-ayarla**`}
${y}**Giriş Çıkış ${dil.ayarlar.errors.channel}** ${db.has(`gc_${message.guild.id}`) ? `${ac} ${client.channels.get(db.fetch(`gc_${message.guild.id}`))}` : `${ka} ${dil.ayarlar.errors.notset} **${prefix}giriş-çıkış-ayarla** `}
${y}**Giriş mesajı** ${db.has(`girisM_${message.guild.id}`) ? db.fetch(`girisM_${message.guild.id}`).replace("{kullanıcı}", "**{kullanıcı}**").replace("{user}", "**{user}**") : `${ka} ${dil.ayarlar.errors.notset} **${prefix}giriş-mesaj-ayarla**`}
${y}**Çıkış mesajı** ${db.has(`cikisM_${message.guild.id}`) ? db.fetch(`cikisM_${message.guild.id}`).replace("{kullanıcı}", "**{kullanıcı}**").replace("{user}", "**{user}**") : `${ka} ${dil.ayarlar.errors.notset} **${prefix}çıkış-mesaj-ayarla**`}


  
`] 
  
  const ayarReis = new Discord.RichEmbed()
  .setColor('RANDOM')
  .setDescription(sayfa)
  .setTimestamp()
  message.channel.send(ayarReis)


  
  
};

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ["settings"],
    permLevel: 4,
    kategori: "sunucu",
  };
  
  exports.help = {
    name: 'ayarlar',
    description: 'Sunucu ayarlarını gösterir.',
    usage: 'ayarlar',
  };
   
const Discord = require('discord.js');
const db = require('quick.db')
exports.run = async(client, message, args) => { 
if(message.author.id !== "282453998529806338") return message.channel.send('Bu komutu sadece sahibim kullanabilir :x:')
  
  if(args[0] === "kapalı") {
let veri = await db.fetch(`botbakım`)
if(!veri) return message.channel.send('Anlaşılan bot zaten bakımda değil. :x:')
message.channel.send('Bot bakım modundan çıkarıldı.!')
db.delete(`botbakım`)    
  return
}
 
    
if(args[0] === "açık") {

  
  let codeming = args.slice(1).join(' ');
  let codemings; 
  codemings = 'Vortex'
  if(!codeming) return message.channel.send(':x: Bir bakım sebebi girmelisin.')

  let yasin = new Discord.RichEmbed()
  .setTitle('Bot Bakıma Alındı!')
  .setDescription('Şu andan itibaren botu bakıma aldınız.Sizin dışında hiçbir kullanıcı siz bakımı kapayana kadar hiçbir bot komutunu kullanamayacak. \n\n **kapamak için:** !!bakım kapat \n\n Botu kullanmaya çalışan kişilere `'+codeming+'` sebebi ile bakımda olduğumu belirteceğim.')
  .setColor('RED')
  .setFooter(codemings + ' Bot Bakım Sistemi')
message.channel.send(yasin)
  message.delete()
  db.set(`botbakım`, codeming)
 return
}
message.reply('bir değer belirtmelisin \n\n `açık` / `kapalı`')
};
exports.conf = {
  enabled: true,  
  guildOnly: false, 
  aliases: [], 
  kategori: 'yapımcı',
  permLevel: 5
};

exports.help = {
  name: 'bakım',
  description: 'taslak', 
  usage: 'bakım'
};
const Discord = require('discord.js');
const client = new Discord.Client();

exports.run = (client, message) => {
    const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
   message.channel.send('Sanarım oltana balık düştü.').then(message => {
   var espriler = ['Sazan Tuttun! :fish:' ,'Köpek Balığı Tuttun.' ,'Uskumru Tuttun! :fish:' ,'Mezgit Tuttun! :fish:' ,'Japon Balığı Tuttun Yemeyi Düşünmüyorsun Herhalde?' ,'Hamsi Tuttun! :fish:' ,'Levrek Tuttun! :fish:' ,'Hiçbirşey Tutamadın Maalesef! :wastebasket:' ,'Alabalık Tuttun! :fish:' ,'Maalesef Balık Oltadan Kaçtı! :wastebasket:' ,'İstavrit Tuttun! :fish:'];
      var espri = espriler[Math.floor(Math.random() * espriler.length)];
            message.edit(`${espri}`);
 });
 } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
  
};

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['balık tut', 'balık-tut', 'balık-tut', 'balık tut','balık'],
  permLevel: 0,
  kategori: 'eğlence'
};

exports.help = {
  name: 'balıktut',
  description: 'Balık Tutarsın.',
  usage: 'balıktut'
};
const Discord = require('discord.js');
const fs = require('fs');

exports.run = (client, message, args) => {

  const db = require('quick.db');
  

    
  if (!message.guild.members.get(client.user.id).hasPermission("BAN_MEMBERS")) return message.reply('Gerekli izin yok')
  //if (!message.member.hasPermission("BAN_MEMBERS")) return message.reply(`Bu komutu kullanabilmek için **Üyeleri Yasakla** iznine sahip olmalısın!`);
  
  let user = message.mentions.users.first();
  let reason = args.slice(1).join(' ');
  //let modLog = JSON.parse(fs.readFileSync("./jsonlar/mLog.json", "utf8"));
  if (db.has(`log_${message.guild.id}`) === false) return message.reply('Mod log kanalı ayarlanmamış');
  let modlog = message.guild.channels.get(db.fetch(`log_${message.guild.id}`).replace("<#", "").replace(">", ""));
  if (message.mentions.users.size < 1) return message.reply('Lütfen banlamak istediğiniz üyeyi etiketleyin');
  if (reason.length < 1) return message.reply('Lütfen sebep giriniz');
  if (user.id === message.author.id) return message.reply('Kendinimi banlayacaksın?');
  /*if (user.highestRole.calculatedPosition > message.member.highestRole.calculatedPosition - 1) {
			return message.reply(`Bu kişinin senin rollerinden/rolünden daha yüksek rolleri/rolü var.`);
		}*/
  //if (!message.guild.member(user).bannable) return message.channel.send(`Bu kişiyi sunucudan yasaklayamıyorum çünkü \`benden daha yüksek bir role sahip\` ya da \`bana gerekli yetkileri vermedin\`.`);
  
  const embed = new Discord.RichEmbed()
  .setColor("RANDOM")
  .addField('İşlem', 'Ban')
  .addField('Banlanan üye', `${user.tag} (${user.id})`)
  .addField('Banlayan yetkili', `${message.author.username}#${message.author.discriminator}`)
  .addField('Ban sebebi', "```" + reason + "```")
  modlog.send(embed);
  user.send(`\`${message.guild.name}\` Adlı Sunucuda yaptığınız olumsuz davranışlardan dolayı yasaklandınız\nYetkilinin girdiği sebep: \`${reason}\``)
  
   //if (!message.guild.member(user).bannable) return message.reply('Yetkilileri yasaklayamam!');
  message.guild.ban(user, 2);
  
  const embed2 = new Discord.RichEmbed()
  .setColor("RANDOM")
  .setDescription(`Başarıyla banlandı`)
  message.channel.send(embed2)

  
};

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['ban','yasakla','banla'],
  permLevel: 3,
  kategori: "moderasyon",
};

exports.help = {
  name: 'yasakla',
  description: 'İstediğiniz kişiyi sunucudan yasaklar.',
  usage: 'yasakla <@kullanıcı> <sebep>',
 
};
const Discord = require("discord.js");
const db = require('quick.db');

exports.run = async (client, message, args) => {
  
  let user = client.users.get(args.slice(0).join(' '));
  if (!user) {
    let e = new Discord.RichEmbed()
    .setColor("RANDOM")
    .setDescription("Kara listeden kaldırmak istediğin kullanıcının ID'ini yaz!")
    message.channel.send({embed: e})
    return;
  };
  
  //if (db.has(`karalist_${user.id}`) === false) return message.reply("Bu kullanıcı kara listede değil!")
  
  db.delete(`karalist_${user.id}`)
  
  let embed = new Discord.RichEmbed()
    .setColor("RANDOM")
    .setDescription(`${user.tag} adlı kullanıcı başarıyla kara listeden çıkartıldı!`)
    message.channel.send({embed: embed})
  
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["blacklist", "kara-liste"],
  permLevel: 5,
  kategori: "yapımcı"
};

exports.help = {
  name: "beyazliste",
  description: "Belirtilen kullancıyı kara listeden çıkartır!",
  usage: "beyazliste <kullanıcı ID>"
};
const Discord = require('discord.js');
const Jimp = require('jimp'); 

exports.run = (client, message, args, dil) => {
  const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) { 
    let user = message.mentions.users.first() || message.author;

        Jimp.read(user.avatarURL || user.defaultAvatarURL, function (err, image){
            if(err) return message.channel.send(dil.error + err);
            image.resize(400, 400)
            image.blur(5).write(client.user.id+"-"+user.id+".png");
            setTimeout(() => {
              message.channel.send({file: client.user.id+"-"+user.id+".png"});
                
            }, 500);
        });
  } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
};



exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0,
  kategori: "efekt",
  
};

exports.help = {
  name: 'bulanık',
  description: 'Avatarınızı bulanıklaştırıp gösterir.',
  usage: 'bulanık veya bulanık <@kullanıcı>',
 
};
const Discord = require('discord.js');
const fs = require('fs');

//var ayarlar = require('../ayarlar.json');

exports.run = async (client, message) => {
  
	//if (!message.member.hasPermission("ADMINISTRATOR")) return message.reply(`Bu komutu kullanabilmek için **Yönetici** iznine sahip olmalısın!`);

  const db = require('quick.db');
  

  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
	let args = message.content.split(' ').slice(1);
	const secenekler = args.slice(0).join(' ');

	if(secenekler.length < 1) return message.reply(`**${prefix}caps-engelle aç** veya **${prefix}caps-engelle kapat** yazınz `);
	//if(secenekler === "aç" || "kapat") return message.channel.send(errembed);

  if (secenekler !== "aç" && secenekler !== "kapat" && secenekler !== "on" && secenekler !== "off") return message.reply(`**${prefix}caps-engelle aç** veya **${prefix}caps-engelle kapat** yazınz `)
  
	if (secenekler === "aç" || secenekler === "on") {
    
    var i = db.set(`capsE_${message.guild.id}`, "acik")
    
    
    const embed = new Discord.RichEmbed()
    .setColor('RED')
    .setDescription(`Caps Lock Engeli Başarıyla açıldı, caps lock engelini kapatmak için **${prefix}caps-engelle kapat** yazmanız yeterlidir.`)
    message.channel.send(embed)
		
    /*let kufurEngel = JSON.parse(fs.readFileSync("././jsonlar/kufurEngelle.json", "utf8"));
 if(!kufurEngel[message.guild.id]){
		kufurEngel[message.guild.id] = {
			kufurEngel: "acik"
		  };
  };

		  fs.writeFile("././jsonlar/kufurEngelle.json", JSON.stringify(kufurEngel), (x) => {
        if (x) console.error(x)
      })*/

	};

	if (secenekler === "kapat" || secenekler === "off") {
    
    //var i = db.set(`küfürE_${message.guild.id}`, "kapali")
    
    db.delete(`capsE_${message.guild.id}`)
    
		message.channel.send('Büyük harf engelleyici kapatıldı')
  /*let kufurEngel = JSON.parse(fs.readFileSync("././jsonlar/kufurEngelle.json", "utf8"));
  if(!kufurEngel[message.guild.id]){
		kufurEngel[message.guild.id] = {
			kufurEngel: "kapali"
		  };
  };

		fs.writeFile("././jsonlar/kufurEngelle.json", JSON.stringify(kufurEngel), (x) => {
        if (x) console.error(x)
      })
    
    if (kufurEngel[message.guild.id]) {
    delete kufurEngel[message.guild.id]
    delete kufurEngel[message.guild.id].kufurEngel
    }*/
    
	};
}

	exports.conf = {
		enabled: true,
		guildOnly: false,
		aliases: ['büyük-harf-engelle', 'büyük-harf-engel','büyükharfengelle', 'caps-engelle', 'capsengelle', 'büyükharf-engel','caps-lock','capslock','büyükharf','capsengel','caps-engel'],
		permLevel: 4,
    kategori: "ayarlar",
	};
	  
	exports.help = {
		name: 'büyükharf-engelle',
		description: 'Büyük harf engelleme sistemini açıp kapatmanızı sağlar.',
		usage: 'büyükharf-engelle <aç/kapat>',
    
	};
const Discord = require("discord.js");
var cowsay = require("cowsay");
const db = require('quick.db');
exports.run = (client, msg, args) => {
  const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${msg.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
    let text = args.join(" ");
if (db.has(`üyelikk_${msg.author.id}`)) {
msg.channel.send("```" + cowsay.say({
        text : text
    }) + "```")

 } else
  msg.channel.send('Bu komut gold üyelere özel.')

    
 } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    msg.channel.send(embed)
      return }});
  
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
    kategori: 'eğlence',
  permLevel: 0
};

exports.help = {
  name: 'cowsay',
  description: 'İstediğiniz Şeyi İnek Söylermiş Gibi Yazar.',
  usage: 'cowsay [yazı]'
};
const Discord = require('discord.js');
exports.run = function(client, message, args) {



    const çekiliş = new Discord.RichEmbed()
    .setAuthor(message.author.username, message.author.avatarURL)
    .setTitle("Vortex BOT Çekiliş Sistemi!", true)
    .addField("Çekilişi Yapan:", `<@${message.author.id}>`, true)
    .addField("Çekilişin Yapıldığı Kanal:", message.channel)
    .addField("Çekilişin Yapıldığı Zaman:", message.createdAt)
    .addField(`Çekilişi Kazanan:`, `<@${message.guild.members.random().id}>`, true)
     .addField(`Yedek Çekilişi Kazanan:`, `<@${message.guild.members.random().id}>`, true)
     .addField(`Yedek Çekilişi Kazanan (2):`, `<@${message.guild.members.random().id}>`, true)
    .setColor("RANDOM")
    .setDescription('')
      message.react('617750006862184493')
    return message.channel.sendEmbed(çekiliş);

    
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["çekilişyap","çekiliş-yap","klasik-çekiliş"],
  kategori: 'çekiliş',
  permLevel: 2
};

exports.help = {
  name: 'çekilişyap',
  description: 'Çekiliş yapar. (klasik)',
  usage: 'çekilişyap'
};
const Discord = require('discord.js');
const moment = require('moment');
const ms = require('ms')
exports.run = async (client, message) => {
var time = moment().format('Do MMMM YYYY , hh:mm');
var room;
var title;
var duration;
var currentTime = new Date(),
hours = currentTime.getHours() + 3 ,
minutes = currentTime.getMinutes(),
done = currentTime.getMinutes() + duration,
seconds = currentTime.getSeconds();
if (minutes < 10) {
minutes = "0" + minutes;
}
var suffix = "AM";
if (hours >= 12) {
suffix = "PM";
hours = hours - 12;
}
if (hours == 0) {
hours = 12;
}
var filter = m => m.author.id === message.author.id;
 
  
  
      message.channel.send(`:eight_pointed_black_star:| **Çekilişin yapılacağı kanalın adını yaz**\n Lütfen birleşik değil tek tek yazın.`).then(msg => {
      message.channel.awaitMessages(filter, {
        max: 1,
        time: 20000,
        errors: ['time']
      }).then(collected => {
        let room = message.guild.channels.find('name' , collected.first().content);
        if(!room) return message.channel.send(':heavy_multiplication_x:| **Böyle bir kanal bulamadım lütfen tam bir şekilde etiket atmadan yazınız**');
        room = collected.first().content;
        collected.first().delete();
        msg.edit(':eight_pointed_black_star:| **Çekilişin süresini belirle (1s (saniye) 1s-59s, 1m (dakika) 1m-59m, 1h (saat) 1h-59h, 1d (gün) 1d-6d, 1w (hafta) Örnek: 3h**').then(msg => {
          message.channel.awaitMessages(filter, {
            max: 1,
            time: 20000,
            errors: ['time']
          }).then(collected => {
            if(!collected.first().content.match(/[1-60][s,m,h,d,w]/g)) return message.channel.send(':heavy_multiplication_x:| **Böyle bir süre bilmiyorum :(**');
            duration = collected.first().content
            collected.first().delete();
            msg.edit(':eight_pointed_black_star:| **Şimdi de ödülü yaz bakalım**').then(msg => {
              message.channel.awaitMessages(filter, {
                max: 1,
                time: 20000,
                errors: ['time']
              }).then(collected => {
                title = collected.first().content;
                collected.first().delete();
                msg.delete();
                message.delete();
                try {
                  let giveEmbed = new Discord.RichEmbed()
                  .setColor("#f558c9")
                  .setDescription(`**Ödül: ${title}** \n🎉'a Basarak Katıl \nKalan Süre : ${duration} \n **Başlama Zamanı :** ${hours}:${minutes}:${seconds} ${suffix}`)
                  .setFooter(message.author.username + " (Vortex çekiliş sistemi)", message.author.avatarURL);
                  message.guild.channels.find("name" , room).send(' :heavy_check_mark: **ÇEKİLİŞ BAŞLADI** :heavy_check_mark:' , {embed: giveEmbed}).then(m => {
                     let re = m.react('🎉');
                     setTimeout(() => {
                       let users = m.reactions.get("🎉").users
                       let list = users.array().filter(u => u.id !== m.author.id !== client.user.id);
                       let gFilter = list[Math.floor(Math.random() * list.length) + 0]
                       let endEmbed = new Discord.RichEmbed()
                       .setAuthor(message.author.username, message.author.avatarURL)
                       .setTitle(title)
                       .setColor("#f558c9")
            .setFooter("(Vortex çekiliş sistemi)")
                       .addField('Çekiliş Bitti !🎉',`Kazanan : ${gFilter} \nBitiş zamanı :`)
                       .setTimestamp()
                     m.edit('** 🎉 ÇEKİLİŞ BİTTİ 🎉**' , {embed: endEmbed});
                       
                       var embedLel = new Discord.RichEmbed()
                        .setColor("#f558c9")
                        .setDescription("Ödülünü Moderatörleri Etiketleyerek Alabilirsin!").setFooter("(Vortex çekiliş sistemi)")
                    message.guild.channels.find("name" , room).send(`**Tebrikler ${gFilter}! \`${title}\` kazandın!**` , embedLel)
                }, ms(duration));
            });
                } catch(e) {
                message.channel.send(`:heavy_multiplication_x:| **Maalesef gerekli yetkilerim bulunmamakta**`);
                  console.log(e);
                }
              });
            });
          });
        });
      });
    });
  
  
};
exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['gelişmiş-çekiliş','çekiliş'],
 kategori: 'çekiliş',
  permLevel: 2
};
exports.help = {
  name: 'çekiliş',
  description: 'Çekiliş yapar (gelişmiş)',
  usage: 'çekiliş'
};
const Discord = require('discord.js')
const fs = require('fs');

const db = require('quick.db');

exports.run = async (client, message, args) => {
  
 const db = require('quick.db');
    let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

         if(args[0] === 'kapat') {
      
   if (db.has(`cikisM_${message.guild.id}`) === true) {
   
     db.delete(`cikisM_${message.guild.id}`)
    
     
     message.channel.send('Çıkış mesajı kaldırıldı.')
     return
}
  message.channel.send(`Çıkış mesajı ayarlanmamış.`)
    return
  
  }
  
  
  let cM = args.slice(0).join(' ');
  
    if (!cM) {
        return message.reply("Çıkış mesajı ayarlamak istediğiniz mesajı yazmalısınız! \n**NOT:** Mesajda kişinin geleceği yere **{kullanıcı}**, sunucu isminin geleceği yere **{sunucu}** veya sunucudaki kişi sayısının geleceği yere **{kişisayısı}** yazınız.")
    }
  
    db.set(`cikisM_${message.guild.id}`, cM)
  
    const embed = new Discord.RichEmbed()
    .setTitle(`» Çıkış Mesajı Değiştirildi!`)
    .setDescription(`Ayarlanan Mesaj **${cM}**\nÇıkış mesajını kapatmak isterseniz **${prefix}çıkışmesaj kapat** yazmanız yeterlidir.`)
    .setColor("RANDOM")
    message.channel.send({embed})

}

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['çıkışmesaj','çıkış-mesaj'],
    permLevel: 4,

    kategori: "ayarlar",
 
  };

  exports.help = {
    name: 'çıkış-mesaj-ayarla',
    
    description: 'Çıkış mesajını değiştirmenizi sağlar.',
    usage: 'çıkış-mesaj-ayarla <mesaj> \n**NOT:** Mesajda kişinin geleceği yere **{kullanıcı}** yazınız aksi taktirde kişiyi göstermez.',



  };
  
const Discord = require('discord.js');
const oneLine = require('common-tags').oneLine;
const ascii = require('figlet');

exports.run = function(client, message, args) {

  const db = require('quick.db');
    const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) { 

  
  
  var yazi = args.slice(0).join(' ');
  if (yazi.length < 1) return message.reply("Lütfen **1 ile 8** arasında yazı yaznz")
  if (yazi.length > 8) return message.reply("Lütfen **1 ile 8** arasında yazı yaznz")
  
   ascii(yazi, {
        font: 'Dancing Font',
        horizontalLayout: 'fitted',
        verticalLayout: 'fitted'
      },
      function(err, data) {
        if (err) {
          message.reply(`HATA ${err}`)
          console.error(err)
        }
     
     message.channel.send('```css\n' + data + '\n```');
      

     
      })
    } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
  
};  

exports.conf = {
  enabled: true, 
  guildOnly: true, 
  aliases: ["dans-ascii"],
  permLevel: 0,
    kategori: "eğlence",
};

exports.help = {
  name: 'dans',
  description: 'Yazdığınız yazıyı dans🎉 ascii şekline çevirir.',
  usage: 'dans <yazı>',

};
const Discord = require('discord.js');
const client = new Discord.Client();

exports.run = async (client, message) => {
  
  const db = require('quick.db');
    var s = 'tr'
  var a = client.commands.get('davet').help.name
    if(db.has(`dil_${message.guild.id}`) === true) {
        var s = 'en'
        var a = client.commands.get('davet').help.enname
    }
    const dil = client[s]
    const o = a
    const msg = message

  const davet = new Discord.RichEmbed()
.setColor("RANDOM")
.setAuthor(`${client.user.username}`, client.user.avatarURL)
.setDescription(`[${dil.special.botinvite}](https://discordapp.com/oauth2/authorize?client_id=${client.user.id}&scope=bot&permissions=8)\n[${dil.special.panel}](${client.ayarlar.webpanel})\n[${dil.special.supportserver}](https://discordapp.com/invite/knESwdy) \n[${dil.special.DBLpage}](https://discordbots.org/bot/${client.user.id}) \n[${dil.special.DBLvote}](https://discordbots.org/bot/${client.user.id}/vote)
`)
message.channel.send(davet)

};

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['linkler', 'destek', 'destek-sunucu', 'web', 'site', 'webpanel', 'web-panel', 'dashboard','invite'],
  permLevel: 0,
  kategori: "bot",
};

exports.help = {
  name: 'davet',
  description: 'Botun davet linklerini gösterir.',
  usage: 'davet',

};
const Discord = require("discord.js");

module.exports.run = async (bot, message, args) => {
  
    let invites = await message.guild.fetchInvites().catch(error => {
        return message.channel.send('Davetleri göremiyorum yeterli iznim yok');
    });

    invites = invites.array();

    let possibleinvites = [];
    invites.forEach(function(invites) {
        possibleinvites.push(`${invites.inviter.username} ||  ${invites.uses}`)
    })

    const embed = new Discord.RichEmbed()
        .setTitle(`**DAVET SIRALAMASİ**`)
        .setColor(0xCB5A5E)
        .addField('Invites', `\`\`\`${possibleinvites.join('\n')}\`\`\``)
        .setTimestamp();
    message.channel.send(embed);

}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["davet-sırası"],
  permLevel: 2,
  kategori: "sunucu",

};

exports.help = {
  name: 'davet-sıralaması',
  description: 'Sunucunuza en çok kullanıcı getirenleri sıralar.',
  usage: 'davet-sıralaması',
 
};

const Discord = require('discord.js')
//var ayarlar = require('../ayarlar.json');

exports.run = async (client, message, args) => {
  
  const db = require('quick.db');
  
 
  let kanal = message.mentions.channels.first(); 
  
  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  
    if(args[0] === 'kapat') {
   if (db.has(`destekK_${message.guild.id}`) === true) {
     message.channel.send(`Destek kanalı başarıyla kaldırıldı`)
     db.delete(`destekK_${message.guild.id}`)
     return
}
  message.channel.send(`Destek kanalı ayarlanmamış.`)
    return
  
  }
    
  
    if (!kanal) {
      let e = new Discord.RichEmbed()
      .setDescription('Lütfen bir kanal etiketleyiniz')
      .setColor("RANDOM")
      message.channel.send(e)
      return;
    }
  
    var s = db.set(`destekK_${message.guild.id}`, kanal.id)
  
    const embed = new Discord.RichEmbed()
    .setDescription(`${client.emojis.get(client.emojiler.evet)} Destek kanalı ayarlandı: ${kanal}\nDestek kanalını kapatmak için **${prefix}destek-kanal kapat** yazmanız yeterlidir.`)
    .setColor("RANDOM")
    message.channel.send({embed})
}

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ["destek-kanal","destek-kanal-ayarla"],
    permLevel: 4,
    kategori: "ayarlar",
  };

  exports.help = {
    name: 'destek-kanal-ayarla',
    description: 'Gelişmiş Destek Sistemindeki destek kanalını değiştirmenizi sağlar.',
    usage: 'destek-kanal-ayarla <#kanal>',

  };
const Discord = require('discord.js')
//var ayarlar = require('../ayarlar.json');

exports.run = async (client, message, args) => {
  
  const db = require('quick.db');
  
 
  
    let rol = message.mentions.roles.first() || message.guild.roles.find(r => r.name === args.slice(0).join(' '));
  
  
    let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  
    if(args[0] === 'kapat') {
   if (db.has(`destekR_${message.guild.id}`) === true) {
     message.channel.send(`Destek rolü başarıyla kaldırıldı`)
     db.delete(`destekR_${message.guild.id}`)
     return
}
  message.channel.send(`Destek rolü ayarlanmamış.`)
    return
  
  }
    
  
    if (!rol) {
      let e = new Discord.RichEmbed()
      .setDescription('Lütfen bir rol adı yazınız veya etiketleyiniz')
      .setColor("RANDOM")
      message.channel.send(e)
      return;
    }
  
    var s = db.set(`destekR_${message.guild.id}`, rol.id)
  
    const embed = new Discord.RichEmbed()

    .setDescription(`${client.emojis.get(client.emojiler.evet)} Destek rolü başarıyla ayarlandı: ${rol}\nDestel rolünü silmek için **${prefix}destek-rol kapat** yazmanız yeterlidir.`)
    .setColor("RANDOM")
    message.channel.send({embed})
}

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ["destek-rol","destek-rol-ayarla"],
    permLevel: 4,
    kategori: "ayarlar",
 
  };

  exports.help = {
    name: 'destek-rol-ayarla',
    description: 'Gelişmiş Destek Sistemindeki destek ekibi rolünü değiştirmenizi sağlar.',
    usage: 'destek-rol-ayarla <@rol>',
   
  };
const Discord = require('discord.js');
//var ayarlar = require('../ayarlar.json');
const db = require('quick.db');

exports.run = async (client, message, args) => {
  
  const ayarlar = client.ayarlar
  
  var s = 'tr'
  var a = client.commands.get('dil-değiştir').help.name
    if(db.has(`dil_${message.guild.id}`) === true) {
        var s = 'en'
        var a = client.commands.get('dil-değiştir').help.enname
    }
    const dil = s
    const o = a
  
  var d = args.slice(0).join(' ');
  if (!d) {
    let e = new Discord.RichEmbed()
    .setColor(client.ayarlar.renk)
    .setDescription(client[dil].argerror.replace("{prefix}", ayarlar.prefix).replace("{komut}", o))
    message.channel.send(e)
    return;
  }
  
  if (d !== "en" && d !== "tr" && d !== "sıfırla" && d !== "reset") {
    let e = new Discord.RichEmbed()
    .setColor(client.ayarlar.renk)
    .setDescription(client[dil].argerror.replace("{prefix}", ayarlar.prefix).replace("{komut}", o))
    message.channel.send(e)
    return;
  }
  
  if (d === "en") {
    
    var w = db.set(`dil_${message.guild.id}`, "en")
    
    if (dil === "tr") w = "İngilizce"
    if (dil === "en") w = "English"
    
    let e = new Discord.RichEmbed()
    .setColor("RANDOM")
    .setDescription(client[dil].dil.setd.replace("{dil}", w))
    message.channel.send(e)
    return;
    
  }
  
  if (d === "tr") {
    db.delete(`dil_${message.guild.id}`)
    
    let b = "tr"
    
    if (dil === "tr") b = "Türkçe"
    if (dil === "en") b = "Turkish"
    
    let e = new Discord.RichEmbed()
    .setColor("RANDOM")
    .setDescription(client[dil].dil.setd.replace("{dil}", b))
    message.channel.send(e)
    return;
    
  }
  
  if (d === "sıfırla" || d === "reset") {
    
    db.delete(`dil_${message.guild.id}`)
    
    let e = new Discord.RichEmbed()
    .setColor("RANDOM")
    .setDescription(client[dil].dil.resetd)
    message.channel.send(e)
    return;
    
  }
  
};

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['dil', 'language'],
    permLevel: 4,
  kategori: "sunucu",
  category: "server"
  };
  
  exports.help = {
    name: 'dil-değiştir',
    description: 'Botun dilini değiştirir.',
    usage: 'dil-değiştir <en/tr/sıfırla>',
    enname: 'set-language',
    endescription: 'Bot changes the language.',
    enusage: 'set-language <en/tr/reset>'
  };
const Discord = require('discord.js');
const fs = require('fs');

//var ayarlar = require('../ayarlar.json');

exports.run = async (client, msg, args) => {
    const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${msg.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) { 
  if(args[0].length > 4) return msg.channel.send('Discrimler 4 basamaklı olur')
  const s = [`asd1`, `asd2`, `asd3`]
  	const discrim = args[0] || msg.author.discriminator;
        const users = client.users.filter(user => user.discriminator === discrim).map(user => user.tag);
        if (users < 1) {
            let embed = {
                color: 'RANDOM',
                description: `${discrim} bulunamadı!`,
              };
            return msg.channel.send({embed});
          
        } else {
       
           msg.channel.send(`

${users.join('\n')}


`, {split: true, code: "md"})

          
}
 } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    msg.channel.send(embed)
      return }});
}

	exports.conf = {
		enabled: true,
		guildOnly: false,
		aliases: ['tag-ara'],
		permLevel: 0,
    kategori: "kullanıcı",
	};
	  
	exports.help = {
		name: 'discrim',
		description: 'İstediğiniz bir discrimi botun ekli olduğu sunucularda arar',
		usage: 'discrim',
    
	};
const Discord = require('discord.js');
const { stripIndents } = require('common-tags');
const { randomRange, verify } = require('../util/Util.js');

exports.run = async (client, message, args) => {
  




  this.fighting = new Set();
  
        let opponent = message.mentions.users.first()
        if (!opponent) return message.reply("<:ak:617145990742278144> Oynamak istediğin kişiyi etiketlemelisiniz.")
  
  if (opponent.bot) return message.reply('<:ak:617145990742278144> Botlar ile düello yapamazsın dostum.');
  if (opponent.id === message.author.id) return message.reply('<:ak:617145990742278144> Kendin ile düello atamazsın dostum.');
                if (this.fighting.has(message.channel.id)) return message.reply('Kanal sayısına göre savaş yapabilirsin.');
                this.fighting.add(message.channel.id);
                try {
                        if (!opponent.bot) {
                await message.channel.send(`${opponent}, düello isteği geldi. Düello'yu kabul ediyor musun? (\`evet\` veya \`hayır\` olarak cevap veriniz.)`);
                                const verification = await verify(message.channel, opponent);
                                if (!verification) {
                                        this.fighting.delete(message.channel.id);
                                        return message.channel.send(`<:ak:617145990742278144> Düello kabul edilmedi...`);
                                }
                        }
                        let userHP = 500;
                        let oppoHP = 500;
                        let userTurn = false;
                        let guard = false;
                        const reset = (changeGuard = true) => {
                                userTurn = !userTurn;
                                if (changeGuard && guard) guard = false;
                        };
                        const dealDamage = damage => {
                                if (userTurn) oppoHP -= damage;
                                else userHP -= damage;
                        };
                        const forfeit = () => {
                                if (userTurn) userHP = 0;
                                else oppoHP = 0;
                        };
                        while (userHP > 0 && oppoHP > 0) { // eslint-disable-line no-unmodified-loop-condition
                                const user = userTurn ? message.author : opponent;
                                let choice;
                                if (!opponent.bot || (opponent.bot && userTurn)) {
                                        await message.channel.send(stripIndents`
                                                ${user}, ne yapmak istersin? \`saldır\`, \`savun\`, \`ultra güç\`, veya \`kaç\`?
                                                **${message.author.username}**: ${userHP} :heartpulse:
                                                **${opponent.username}**: ${oppoHP} :heartpulse:
                                        `);
                                        const filter = res =>
                                                res.author.id === user.id && ['saldır', 'savun', 'ultra güç', 'kaç'].includes(res.content.toLowerCase());
                                        const turn = await message.channel.awaitMessages(filter, {
                                                max: 1,
                                                time: 30000
                                        });
                                        if (!turn.size) {
                                                await message.reply(`Üzgünüm ama, süre doldu!`);
                                                reset();
                                                continue;
                                        }
                                        choice = turn.first().content.toLowerCase();
                                } else {
                                        const choices = ['saldır', 'savun', 'ultra güç'];
                                        choice = choices[Math.floor(Math.random() * choices.length)];
                                }
                                if (choice === 'saldır') {
                                        const damage = Math.floor(Math.random() * (guard ? 10 : 100)) + 1;
                                        await message.channel.send(`${user}, **${damage}** hasar vurdu!`);
                                        dealDamage(damage);
                                        reset();
                                } else if (choice === 'savun') {
                                        await message.channel.send(`${user}, kendisini süper kalkan ile savundu!`);
                                        guard = true;
                                        reset(false);
                                } else if (choice === 'ultra güç') {
                                        const miss = Math.floor(Math.random() * 4);
                                        if (!miss) {
                                                const damage = randomRange(100, guard ? 150 : 300);
                                                await message.channel.send(`${user}, Çoook uzak galaksilerden gelen ultra sonik enerjiyi yeterki miktarda topladın ve **${damage}** hasar vurdun!!`);
                                                dealDamage(damage);
                                        } else {
                                                await message.channel.send(`${user}, Çoook uzak galaksilerden gelen ultra sonik enerjiyi yeterli miktarda toplayamadığın için ulta güç kullanamadın!`);
                                        }
                                        reset();
                                } else if (choice === 'kaç') {
                                        await message.channel.send(`${user}, kaçtı! Korkak!`);
                                        forfeit();
                                        break;
                                } else {
                                        await message.reply('Ne yapmak istediğini anlamadım.');
                                }
                        }
                        this.fighting.delete(message.channel.id);
            const winner = userHP > oppoHP ? message.author : opponent;
                        return message.channel.send(`Oyun bitti! Tebrikler, **${winner}** kazandı! \n**${message.author.username}**: ${userHP} :heartpulse: \n**${opponent.username}**: ${oppoHP} :heartpulse:`);
                } catch (err) {
                        this.fighting.delete(message.channel.id);
                        throw err;
                }
  }

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['1vs1', '1v1', 'savaş'],
	permLevel: 0,
 kategori: "eğlence"
};

exports.help = {
  name: 'düello',
  description: 'İstediğiniz bir kişi ile düello atarsınız!',
  usage: 'düello <@kullanıcı>'
};
    const Discord = require('discord.js');
const Jimp = require('jimp');

exports.run = (bot, message, args) => {

     const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${bot.user.id}/check?userId=${message.author.id}`)
.set("Authorization", bot.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {

  
    let x = /(-)/
    
    var user = message.mentions.users.first();  
  if (!message.guild) return message.reply(`Bu komutu sunucularda kullanabilirsin.`);

  if (!user) return message.reply('Lütfen kendini veya başkasını etiketle');

  

  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Lütfen **1 ila 9** arasında rakam yazınız');
  if (mesaj.match(x)) return message.reply('Sadece rakam giriniz.');

  
  
  if (isNaN(args[1])) return message.channel.send("Lütfen **1 ila 9** arasında rakam yazınız")

  if(mesaj > 9) {
    message.channel.send("Lütfen **1 ila 9** arasında rakam yazınız")
  } else if (mesaj < 9) {

    message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
          //  image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/balance/balance${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });

    } else if (mesaj = 9) {

        message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));

          Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
           // image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/balance/balance${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });


    }
  
  } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${bot.emojis.get(bot.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${bot.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
  
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["balance"],
  permLevel: 0,
  kategori: "efekt"
};

exports.help = {
  name: 'hsbalance',
  description: 'Avatarınıza HypeSquad Balance efekti verir.',
  usage: 'hsbalance <@kullanıcı> <sayı>'
};

const Discord = require('discord.js');
const Jimp = require('jimp');

exports.run = (bot, message, args) => {

    
     const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${bot.user.id}/check?userId=${message.author.id}`)
.set("Authorization", bot.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
  
    let x = /(-)/
    
    var user = message.mentions.users.first();  
  if (!message.guild) return message.reply(`Bu komutu sunucularda kullanabilirsin.`);

  if (!user) return message.reply('Lütfen kendini veya başkasını etiketle');

  

  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Lütfen **1 ila 8** arasında rakam yazınız');
  if (mesaj.match(x)) return message.reply('Lütfen **1 ila 8** arasında rakam yazınız');

  
  
  if (isNaN(args[1])) return message.channel.send("Lütfen bir sayı gir.")

  if(mesaj > 8) {
    message.channel.send("Lütfen **1 ila 8** arasında rakam yazınız")
  } else if (mesaj < 8) {

    message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
         //   image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/bravery/bravery${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });

    } else if (mesaj = 8) {

        message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));


          Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
         //   image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/bravery/bravery${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });


    }
  
    } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${bot.emojis.get(bot.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${bot.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["bravery"],
  permLevel: 0,
  kategori: "efekt"
};

exports.help = {
  name: 'hsbravery',
  description: 'Avatarınıza HypeSquad bravery efekti verir.',
  usage: 'hsbravery <@kullanıcı> <sayı>'
};

const Discord = require('discord.js');
const Jimp = require('jimp');

exports.run = (bot, message, args) => {

  
     const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${bot.user.id}/check?userId=${message.author.id}`)
.set("Authorization", bot.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
    
    let x = /(-)/
    
    var user = message.mentions.users.first();  
  if (!message.guild) return message.reply(`Bu komutu sunucularda kullanabilirsin.`);

  if (!user) return message.reply('Lütfen kendini veya başkasını etiketle');

  

  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Lütfen **1 ila 9** arasında rakam yazınız');
  if (mesaj.match(x)) return message.reply('Sadece rakam giriniz.');

  
  
  if (isNaN(args[1])) return message.channel.send("Lütfen **1 ila 9** arasında rakam yazınız")

  if(mesaj > 9) {
    message.channel.send("Lütfen **1 ila 9** arasında rakam yazınız")
  } else if (mesaj < 9) {

    message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
         //   image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/brilliance/brilliance${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });

    } else if (mesaj = 9) {

        message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));


          Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
          //  image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/brilliance/brilliance${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });


    }
  
    } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${bot.emojis.get(bot.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${bot.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["brilliance"],
  permLevel: 0,
  kategori: "efekt"
};

exports.help = {
  name: 'hsbrilliance',
  description: 'Avatarınıza HypeSquad brilliance efekti verir.',
  usage: 'hsbrilliance <@kullanıcı> <sayı>'
};

const Discord = require('discord.js');
const Jimp = require('jimp');

exports.run = (bot, message, args) => {

    
     const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${bot.user.id}/check?userId=${message.author.id}`)
.set("Authorization", bot.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
  
    let x = /(-)/
    
    var user = message.mentions.users.first();  
  if (!message.guild) return message.reply(`Bu komutu sunucularda kullanabilirsin.`);

  if (!user) return message.reply('Lütfen kendini veya başkasını etiketle');

  

  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Lütfen **1 ila 2** arasında rakam yazınız');
  if (mesaj.match(x)) return message.reply('Sadece rakam giriniz.');

  
  
  if (isNaN(args[1])) return message.channel.send("Lütfen **1 ila 2** arasında rakam yazınız")

  if(mesaj > 2) {
    message.channel.send("Lütfen **1 ila 2** arasında rakam yazınız")
  } else if (mesaj < 2) {

    message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
         //   image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/discord/bughunter${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });

    } else if (mesaj = 2) {

        message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));


          Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
          //  image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/discord/bughunter${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });


    }
  
    } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${bot.emojis.get(bot.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${bot.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["bughunter", "bug-hunter", "hunter-bug"," hunterbug"],
  permLevel: 0,
  kategori: "efekt"
};

exports.help = {
  name: 'dcbughunter',
  description: 'Avatarınıza bug hunter efekti verir.',
  usage: 'dcbughunter <@kullanıcı> <sayı>'
};

const Discord = require('discord.js');
const Jimp = require('jimp');

exports.run = (bot, message, args) => {

    
     const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${bot.user.id}/check?userId=${message.author.id}`)
.set("Authorization", bot.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
  
  
    let x = /(-)/
    
    var user = message.mentions.users.first();  
  if (!message.guild) return message.reply(`Bu komutu sunucularda kullanabilirsin.`);

  if (!user) return message.reply('Lütfen kendini veya başkasını etiketle');

  

  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Lütfen **1 ila 3** arasında rakam yazınız');
  if (mesaj.match(x)) return message.reply('Lütfen **1 ila 3** arasında rakam yazınız');

  
  
  if (isNaN(args[1])) return message.channel.send("Lütfen **1 ila 3** arasında rakam yazınız")

  if(mesaj > 3) {
    message.channel.send("Lütfen **1 ila 3** arasında rakam yazınız")
  } else if (mesaj < 3) {

    message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
         //   image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/discord/event${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });

    } else if (mesaj = 3) {

        message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));


          Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
          //  image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/discord/event${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });


  
    }

  } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${bot.emojis.get(bot.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${bot.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["event"],
  permLevel: 0,
  kategori: "efekt"
};

exports.help = {
  name: 'dcevent',
  description: 'Avatarınıza event efekti verir.',
  usage: 'dcevent <@kullanıcı> <sayı>'
};

const Discord = require('discord.js');
const Jimp = require('jimp');

exports.run = (bot, message, args) => {

     const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${bot.user.id}/check?userId=${message.author.id}`)
.set("Authorization", bot.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {  
  
  
    let x = /(-)/
    
    var user = message.mentions.users.first();  
  if (!message.guild) return message.reply(`Bu komutu sunucularda kullanabilirsin.`);

  if (!user) return message.reply('Lütfen kendini veya başkasını etiketle');

  

  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Lütfen **1 ila 2** arasında rakam yazınız');
  if (mesaj.match(x)) return message.reply('Sadece rakam giriniz.');

  
  
  if (isNaN(args[1])) return message.channel.send("Lütfen **1 ila 2** arasında rakam yazınız")

  if(mesaj > 2) {
    message.channel.send("Lütfen **1 ila 2** arasında rakam yazınız")
  } else if (mesaj < 2) {

    message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
         //   image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/discord/nitro${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });

    } else if (mesaj = 2) {

        message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));


          Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
          //  image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/discord/nitro${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });


    }
  
    } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${bot.emojis.get(bot.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${bot.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["nitro"],
  permLevel: 0,
  kategori: "efekt"
};

exports.help = {
  name: 'dcnitro',
  description: 'Avatarınıza nitro efekti verir.',
  usage: 'dcnitro <@kullanıcı> <sayı>'
};

const Discord = require('discord.js');
const Jimp = require('jimp');

exports.run = (bot, message, args) => {

    
    let x = /(-)/
    
    var user = message.mentions.users.first();  
  if (!message.guild) return message.reply(`Bu komutu sunucularda kullanabilirsin.`);

  if (!user) return message.reply('Lütfen kendini veya başkasını etiketle');

  

  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Lütfen **1 ila 2** arasında rakam yazınız');
  if (mesaj.match(x)) return message.reply('Lütfen **1 ila 2** arasında rakam yazınız');

  
  
  if (isNaN(args[1])) return message.channel.send("Lütfen **1 ila 2** arasında rakam yazınız")

  if(mesaj > 2) {
    message.channel.send("Lütfen **1 ila 2** arasında rakam yazınız")
  } else if (mesaj < 2) {

    message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
         //   image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/discord/partner${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });

    } else if (mesaj = 2) {

        message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));


          Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
          //  image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/discord/partner${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });


    }
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["partner"],
  permLevel: 0,
  kategori: "efekt"
};

exports.help = {
  name: 'dcpartner',
  description: 'Avatarınıza partner efekti verir.',
  usage: 'dcpartner <@kullanıcı> <sayı>'
};

const Discord = require('discord.js');
const Jimp = require('jimp');

exports.run = (bot, message, args) => {

  
     const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${bot.user.id}/check?userId=${message.author.id}`)
.set("Authorization", bot.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
    
    let x = /(-)/
    
    var user = message.mentions.users.first();  
  if (!message.guild) return message.reply(`Bu komutu sunucularda kullanabilirsin.`);

  if (!user) return message.reply('Lütfen kendini veya başkasını etiketle');

  

  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Lütfen **1 ila 2** arasında rakam yazınız');
  if (mesaj.match(x)) return message.reply('Lütfen **1 ila 2** arasında rakam yazınız');

  
  
  if (isNaN(args[1])) return message.channel.send("Lütfen **1 ila 2** arasında rakam yazınız")

  if(mesaj > 2) {
    message.channel.send("Lütfen **1 ila 2** arasında rakam yazınız")
  } else if (mesaj < 2) {

    message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
         //   image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/discord/staff${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });

    } else if (mesaj = 2) {

        message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));


          Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
          //  image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/discord/staff${mesaj}.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });


    }
  } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${bot.emojis.get(bot.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${bot.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});

};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["staff"],
  permLevel: 0,
  kategori: "efekt"
};

exports.help = {
  name: 'dcstaff',
  description: 'Avatarınıza staff efekti verir.',
  usage: 'dcstaff <@kullanıcı> <sayı>'
};

const Discord = require('discord.js');
const Jimp = require('jimp');

exports.run = (bot, message, args) => {

     const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${bot.user.id}/check?userId=${message.author.id}`)
.set("Authorization", bot.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {  
  
  
    let x = /(-)/
    
    var user = message.mentions.users.first();  
  if (!message.guild) return message.reply(`Bu komutu sunucularda kullanabilirsin.`);

  if (!user) return message.reply('Lütfen kendini veya başkasını etiketle');

    message.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(3000));

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(400, 400)  
            //image.greyscale()
           //image.gaussian(1)
            Jimp.read(`https://raw.githubusercontent.com/batuhan121/botumuzg-zelbroo-/master/efektler/discord/trinity.png`, (err, avatar) => {
                avatar.resize(400, 400)
                image.composite(avatar, 0, 0).write(`./img/efektler/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/efektler/${user.id}.png`));
                }, 1000);
            });

        });

    } else {
      
      let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${bot.emojis.get(bot.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${bot.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return 
}});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["trinity"],
  permLevel: 0,
  kategori: "efekt"
};

exports.help = {
  name: 'dctrinity',
  description: 'Avatarınıza trinity efekti verir.',
  usage: 'dctrinity <@kullanıcı>'
};

const Discord = require('discord.js')


exports.run = async (client, message, args) => {
  
  const db = require('quick.db');
  
 if(!args[0]) return message.channel.send('Lütfen aranacak emojinin adını giriniz.')
    const emojii = client.emojis.find(e => e.name == args[0])

 if(emojii === null) return message.channel.send('Böyle bir emoji bulunamadı. Unutmayın emojiler sadece botun **ekli** olduğu sunucularda aramaktadır.')

  const emoji = client.emojis.find(e => e.name == args[0]).id

  
  message.channel.send(`${client.emojis.get(emoji)}`)
 
}

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ["emoji-bul", "emojiara","emojibul"],
    permLevel: 0,
    kategori: "kullanıcı",
 
  };

  exports.help = {
    name: 'emoji-ara',
    description: 'İstediğiniz bir emojiyi botun ekli olduğu sunucularda aramanıza yarar.',
    usage: 'emoji-ara <emoji-adı>',
   
  };
const Discord = require('discord.js')
const ayarlar = require('../ayarlar.json')

exports.run = (client, message, args) => {
         let mesaj = args.slice(0).join(' ')



  if(mesaj === "id") {
     const emojiList = message.guild.emojis.map((e, x) => (x + ' | ' + e)).join('\n');
  	var emojis = message.guild.emojis.array();
  const embed2 = new Discord.RichEmbed()
.setColor("RED")
  .setFooter(`Sadece emojileri görmek için !!emojiler`)
.setDescription(`\`\`\`js

Sunucuda Bulunan Emojiler (${emojis.length} adet)

${emojiList}
\`\`\``)
             .setTimestamp() 
 message.channel.send(embed2);
        return
  }
      try {
        const embed = new Discord.RichEmbed()
            .addField(`Sunucuda Bulunan Emojiler`, message.guild.emojis.map(emoji => emoji).join(' | '))
            .setColor('RED')
            .setTimestamp()
          .setFooter(`Emojileri IDleri ile birlikte görmek için; !!emojiler id`)
        message.channel.send(embed)
    } catch (err) {
        const embed = new Discord.RichEmbed()
            .addField(`Sunucuda Bulunan Emojiler`, 'Üzgünüm ama sunucunuzda ya çok fazla emoji bulunuyor ya da hiç emoji bulunmuyor. Bunları gösteremiyorum. Discord buna izin vermiyor.')
            .setColor('RED')
          .setFooter(`Emojileri IDleri ile birlikte görmek için !!emojiler id`)
            .setTimestamp()
        message.channel.send(embed)
    }
  }


exports.conf = {
    enabled: true,
    guildOnly: true,
  aliases: ["emoji"],
  permLevel: 0,
   
    kategori: 'kullanıcı'
}

exports.help = {
    name: 'emojiler',
    description: 'Sunucuda bulunan emojileri gösterir.',
    usage: 'emojiler'
}
const Discord = require('discord.js');

const mapping = {
    ' ': '   ',
    '0': ':zero:',
    '1': ':one:',
    '2': ':two:',
    '3': ':three:',
    '4': ':four:',
    '5': ':five:',
    '6': ':six:',
    '7': ':seven:',
    '8': ':eight:',
    '9': ':nine:',
    '!': ':grey_exclamation:',
    '?': ':grey_question:',
    '#': ':hash:',
    '*': ':asterisk:'
};

'abcdefghijklmnopqrstuvwxyz'.split('').forEach(c => {
	mapping[c] = mapping[c.toUpperCase()] = `:regional_indicator_${c}:`;
});


exports.run = function(client, message, args) {
  const snekfetch = require("snekfetch");
  snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
  .set("Authorization", client.ayarlar.dbltoken)
  .then(response => {
  var check = response.body.voted;
  if(check == 1) {
	if (args.length < 1) return message.reply('<a:h_:591907035553988638> **|**  Lütfen bir mesaj belirt. **Doğru Kullanım**: c!emojiyazı <mesaj>')
		
	message.channel.send(args.join(' ').split('').map(c => mapping[c] || c).join(' '));
message.react('617413726768988160')
} else {
  let embed = new Discord.RichEmbed()
        .setTitle('HATA')
        .setColor('RANDOM')
        .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
      message.channel.send(embed)
        return }});
};

exports.conf = {
  enabled: true, 
  guildOnly: true, 
  aliases: ['emojiy'],
  permLevel: 0 ,
    kategori: 'eğlence'
};

exports.help = {
  name: 'emojiyazı', 
  description: 'Mesajınızı emoji haline getirir',
  usage: 'emojiyazı <mesaj>'
};

const Discord = require('discord.js');

exports.run = function(client, message, args) {
  
 // if (!message.member.hasPermission("ADMINISTRATOR")) return message.channel.send(`Bu komutu kullanabilmek için "**Yönetici**" yetkisine sahip olmalısın.`);
  let guild = message.guild
  let link = args[0]
  let ad = args[1]
  if (!link) return message.channel.send(`Bir emoji linki belirtmelisin.`)
  if (!ad) return message.channel.send(`Bir emoji ismi yazmalısın.`)
  
  guild.createEmoji(link, ad)
    .then(emoji => message.channel.send(`${emoji.name} adında emoji oluşturuldu. (${emoji})`))
   
  
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['emoji-ekle','emojiekle','emoji-yükle'],
  permLevel: 4,
  kategori: "moderasyon"
};

exports.help = {
  name: 'emojiyükle',
  description: 'Belirttiğiniz link ve isimde emoji yükler.',
  usage: 'emojiyükle <link> - <isim>'
};
const Discord = require('discord.js');
const client = new Discord.Client();

exports.run = (client, message, args) => {
  const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
   message.channel.send('Espri Yükleniyor..').then(message => {
   var espriler = ['Facebook hesabın var, niye durum güncellemiyorsun dedim. Abi durumum yok dedi, sarıldık ağlaştık.','Şimdi ben Mevlüt adında bir çocuğu okula göndersem Mevlüt mü okutmuş olacağım.','Sen bana bir adım gel, ben sana bir değil, iki değil, üç değil, tam dört kavanoz bal 100 TL.','Dedem eskiden sevgilisine kızınca güvercini duvara fırlatmış, tabi o zamanlar telefon yok.','Bu mesaj özel bir frekansla gönderilmiştir. Zekilerde hafıza kaybı, aptallarda kısa sureli körlük ibnelerde de bir anlık gülümseme yapar.','İçme aşk şarabından acıdır aman dikkat et kızım babası hocadır.','Okul madem kapandın bir daha açılma çok günah valla.','Babam takdir getir bilgisayarını yenileyeceğim dedi, bende getirdim. Geldi F5′e basıp gitti.','Rock yapmayan kişiye ne denir? -Yaprock ' ,'Ben Yedigün içiyorum sen Onbeşgün iç. :D' ,'Sinemada on dakika ara dedi, aradım aradım açmadı.' ,'Yeni yapılmış resimlere ne denir? -Nevresim' ,'Tebrikler kazandınız, şimdi tencere oldunuz! ' ,'İshal olmuş böceğe ne denir? -Cırcır Böceği' ,'keklik askere giderse nolur? -Erkeklik' ,'Bizim CD sürücümüz ehliyeti nerden almış acaba ?! ' ,'Yılanlardan korkma, yılmayanlardan kork.' ,'Kırmızı giyen erkeğe ne denir? -Albay  ' ,'Ben kahve içiyorum, Nurgül Yeşilçay.'  ,'Bak şu karışıdaki uçak PİSTİ , ama bir türlü temizlemediler.'   ,'Top ağlarda, ben ağlamaz mıyım ?'  ,'Burger King, bende vezir  '];
      var espri = espriler[Math.floor(Math.random() * espriler.length)];
            message.edit(`${espri}`);
   
 });
} else {
  let embed = new Discord.RichEmbed()
        .setTitle('HATA')
        .setColor('RANDOM')
        .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
      message.channel.send(embed)
        return }});
  } 

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['espri', 'espriyap', 'yapespri', 'yapbiespri','espiri','espiriyap'],
    kategori: 'eğlence',
  permLevel: 0
};

exports.help = {
  name: 'espri',
  description: 'Espri Yapar',
  usage: 'espri'
};
const Discord = require("discord.js");
const db = require('quick.db');
const fs = require('fs');
const hastebin = require('hastebin-gen');
const util = require('util');
const Jimp = require('jimp');
const dbs = require("db-system");
const up = require("useful-package");
const uptest = require("../test.js");
const şarkı = require("discord.js-music-v11");
exports.run = async (client, message, args) => {
  
  const tokenuyari = 'TOKENİMİ ÇALACAN HAİN!'
  
  const ayarlar = client.ayarlar
  
  let bot = client;
  
  var x = client.emojis.get("482877599308185600");
  var x2 = client.emojis.get("482884610985033749");
  
	if(!args[0]) {
		const embed = new Discord.RichEmbed()
			.setDescription("kod giriniz", message.content.slice(2))
			.setColor("RANDOM")
		message.channel.send(embed)
		return
	}
	const code = args.join(' ');
	function clean(text) {
		if (typeof text !== 'string')
			text = require('util').inspect(text, { depth: 0 })
		text = text
			.replace(/`/g, '`' + String.fromCharCode(8203))
			.replace(/@/g, '@' + String.fromCharCode(8203))
		return text;
	};
	async function send(embed) {
		message.channel.send(embed);
	}

	const evalEmbed = new Discord.RichEmbed()
  .setColor("RANDOM")
	try {
		var evaled = clean(await eval(code));
    
    
    if(evaled.length >= 1024) {
    
    
     message.channel.send(evaled, {split: true, code: "js"})

    return
    }
    
    if (code === "2+2" || code === "2 + 2" || code === "Math.floor(2+2)" || code === "Math.floor(2 + 2)") { 
      var evaled = "5"
    };
    
    if(evaled.match(new RegExp(`${client.token}`, 'g'))) evaled.replace(client.token, tokenuyari).replace(process.env.PROJECT_INVITE_TOKEN, tokenuyari);
		if (evaled.constructor.name === 'Promise') evalEmbed.setDescription(`\`\`\`js\n${evaled.replace(client.token, tokenuyari).replace(process.env.PROJECT_INVITE_TOKEN, tokenuyari)}\n\`\`\``)
		else evalEmbed.setDescription(`\`\`\`xl\n${evaled.replace(client.token, tokenuyari).replace(process.env.PROJECT_INVITE_TOKEN, tokenuyari)}\n\`\`\``)
		const newEmbed = new Discord.RichEmbed()
			.addField(`📥 GİRİŞ`, `\`\`\`js\n${code}\n\`\`\``)
			.addField(`📤 ÇIKIŞ`, `\`\`\`js\n${evaled.replace(client.token, tokenuyari).replace(process.env.PROJECT_INVITE_TOKEN, tokenuyari)}\n\`\`\``)
			.setColor("RANDOM")
		message.channel.send(newEmbed,);
	}
	catch (err) {
		evalEmbed.addField(`${x} HATA`, `\`\`\`js\n${err}\n\`\`\``);
		evalEmbed.setColor('RANDOM');
		message.channel.send(evalEmbed);
	}
}

exports.conf = {
	enabled: true,
	guildOnly: true,
	aliases: ["kod", "kod-çalıştır"],
	permLevel: 5,
	kategori: 'yapımcı'
}

exports.help = {
	name: 'eval',
	description: 'Yazılan kodu çalıştırır.',
	usage: 'eval <kod>',
 
}
const Discord = require('discord.js');
const fortnite = require('fortnitetracker-7days-stats');

exports.run = (client, message, args) => {
  
  const db = require('quick.db');
  let prefix = db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
    const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) { 
  
    if(args.length < 1){
        message.reply(`kullanımı ${prefix}fortnite pc <kullanıcı> `);
        return;
    }

  var name = args.slice(0).join(' ');
  
    var url = "https://fortnitetracker.com/profile/pc"
                                + encodeURIComponent(name);
    message.channel.startTyping();

    fortnite.getStats(name, "pc", (err, result) => {
        if(err){
            message.reply(`kullanımı ${prefix}fortnite pc <kullanıcı> `);
            message.channel.stopTyping();
            return;
        }
      
        var embed = new Discord.RichEmbed()
            .setAuthor(result.accountName, "", url)
            .setDescription('')
            .addField('Maçlar', result.wins)
            .addField('Toplam oyun', result.matches)
            .addField('Oran', ~~result.wr + "%")
            .addField('Toplam kill', + result.kills)
            .addField('kd', + result.kd)
            .setColor("RANDOM")
            .setURL(url)
            .setThumbnail(result.skinUrl);

        message.channel.stopTyping();
        message.channel.send(embed);
    });
    } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['fortnite-istatistik'],
  permLevel: 0,
  kategori: "oyun",
};

exports.help = {
  name: 'fortnite',
  description: 'İstediğiniz bir fortnite kullanıcısının istatistiklerini gösterir.',
  usage: 'fortnite pc <kullanıcı adı>',
 
};

const Discord = require('discord.js')
const fs = require('fs');
//var ayarlar = require('../ayarlar.json');

exports.run = async (client, message, args) => {
//if (!message.member.hasPermission("ADMINISTRATOR")) return message.reply(`Bu komutu kullanabilmek için **Yönetici** iznine sahip olmalısın!`);
  
  const db = require('quick.db');
  
 let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  let channel = message.mentions.channels.first()
  
    if (!channel) {
        return message.reply(`Lütfen ayarlamak istediğiniz kanalı etiketleyiniz. Örnek: **${prefix}girişçıkışayarla #kanal**`)
    }

  
 
      if(args[0] === 'kapat') {
   if (db.has(`girisM_${message.guild.id}`) === true) {
     message.channel.send(`Giriş çıkış kanalı başarıyla kaldırıldı`)
     db.delete(`gc_${message.guild.id}`)
     return
}
  message.channel.send(`Giriş çıkış kanalı ayarlanmamış.`)
    return
  
  }
    /*if(!kanal[message.guild.id]){
        kanal[message.guild.id] = {
            gkanal: channel.id
        };
    }
  
    fs.writeFile("././jsonlar/gc.json", JSON.stringify(kanal), (x) => {
        if (x) console.error(x)
      })*/
  
    var s = db.set(`gc_${message.guild.id}`, channel.id)
  
    const embed = new Discord.RichEmbed()
    
    .setDescription(`${client.emojis.get(client.emojiler.evet)} Giriş çıkış kanalı ayarlandı: ${channel}\nGiriş çıkış kanalını kaldırmak isterseniz **${prefix}giriş-çıkış-kanal kapat** yazmanız yeterlidir.`)
    .setColor("RANDOM")
    message.channel.send({embed})
}
    
exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['hoş-geldin-ayarla', 'giriş-çıkış-belirle', 'girişçıkışayarla', 'giriş-çıkış-kanal'],
    permLevel: 4,
    kategori: "ayarlar"
  
}

exports.help = {
    name: 'giriş-çıkış-ayarla',
    description: 'Giriş çıkış kanalını ayarlar.',
    usage: 'giriş-çıkış-ayarla <#kanal>',

}
const Discord = require('discord.js')
const fs = require('fs');
//var ayarlar = require('../ayarlar.json');

exports.run = async (client, message, args) => {
  
  const db = require('quick.db');
  

    let prefix = db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  
//if (!message.member.hasPermission("ADMINISTRATOR")) return message.reply(`Bu komutu kullanabilmek için **Yönetici** iznine sahip olmalısın!`);
  
  let gM = args.slice(0).join(' ');
  
  if (!gM) {
        return message.reply("Giriş mesajı ayarlamak istediğiniz mesajı yazmalısınız! \n**NOT:** Mesajda kişinin geleceği yere **{kullanıcı}**, sunucu isminin geleceği yere **{sunucu}** veya sunucudaki kişi sayısının geleceği yere **{kişisayısı}** yazınız.")
    }
  

    /*if(!gMesaj[message.guild.id]){
        gMesaj[message.guild.id] = {
            gm: gM
        };
    }
    fs.writeFile("././jsonlar/girisM.json", JSON.stringify(gMesaj), (x) => {
        if (x) console.error(x)
      })*/
  
  
 

    if(args[0] === 'kapat') {
   if (db.has(`girisM_${message.guild.id}`) === true) {
     message.channel.send(`Giriş mesajı başarıyla kaldırıldı`)
     db.delete(`girisM_${message.guild.id}`)
     return
}
  message.channel.send(`Giriş mesajı ayarlanmamış.`)
    return
  
  }
    
  
    var s = db.set(`girisM_${message.guild.id}`, gM)
  
    const embed = new Discord.RichEmbed()
    
    .setDescription(`${client.emojis.get(client.emojiler.evet)} Giriş mesajı başarıyla ayarlandı ${gM}\nGiriş mesajını kapatmak için **${prefix}giriş-mesaj kapat** yazmanız yeterlidir.`)
    .setColor("RANDOM")
    message.channel.send({embed})
}

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['giriş-mesaj'],
    permLevel: 4,
    kategori: "ayarlar",
  };

  exports.help = {
    name: 'giriş-mesaj-ayarla',
    description: 'Giriş mesajını değiştirmenizi sağlar.',
    usage: 'giriş-mesaj-ayarla <mesaj> \n**NOT:** Mesajda kişinin geleceği yere **{kullanıcı}** yazınız aksi taktirde kişiyi göstermez.',
    
  };
const Discord = require('discord.js');
const db = require('quick.db');


exports.run = async (client, message, params, args) => {
   
  if (!message.member.hasPermission('ADMINISTRATOR')) return message.channel.send('<:ak:617145990742278144> Hoşgeldin kanalı ayarlamak için `Yönetici` yetkisine sahip olman gerek.')
  let hgkanali = message.mentions.channels.first();
  if (!hgkanali) return message.channel.send('<:ak:617145990742278144> Hoşgeldin kanalı ayarlamak için bir kanal etiketlemeniz gerekli. `!!gkanal #kanal`')
    db.set(`gcc_${message.guild.id}`, message.mentions.channels.first().id)
  let i = await db.fetch(`gcc_${message.guild.id}`)
 
  message.channel.send(`<:akA:617144473641680906> Hoşgeldin kanalı, <#${i}> olarak ayarlandı.\nKapatmak !!gkanal-kapat demeniz gerekir.`)   
  message.react('617413726768988160')

};

exports.conf = {
  kategori: 'ayarlar',
 aliases: ['resim-kanal','hg-bb','rgk','rgç','resimli-hoşgeldin-kanal','hoşgeldin-ayarla', 'welcome-set','gelen-giden','resim'],
 permLevel: 3
};

exports.help = {
 name: 'gkanal',
 description: 'Resimli hoşgeldeldin güle güle kanalı ayarlar.',
 usage: 'gkanal'
};
const Discord = require('discord.js');
const db = require('quick.db');


exports.run = async (client, message, params, args) => {
   
  if (!message.member.hasPermission('ADMINISTRATOR')) return message.channel.send('<:ak:617145990742278144> Hoşgeldin kanalı silmek için `Yönetici` yetkisine sahip olman gerek.')

    db.delete(`gcc_${message.guild.id}`)

 
  message.channel.send(`<:akA:617144473641680906> Hoşgeldin kanalı silindi.`)   
  message.react('617413726768988160')

};

exports.conf = {
  kategori: 'ayarlar',
 aliases: ['resim-kanal-sil','gkanal-kapat','gkanal-sil'],
 permLevel: 3
};

exports.help = {
 name: 'gkanal-sil',
 description: 'Resimli hoşgeldeldin güle güle kanalı ayarlar.',
 usage: 'gkanal'
};
const db = require('quick.db')
const Discord = require('discord.js')

exports.run = async (bot, message, args) => {
    if(message.guild.id !== '627204002676736031') return message.channel.send('Bu komut sadece \`DESTEK\` sunucumda çalışmaktadır.')
 
    if(message.member.roles.has('632479296463831060') === true) return message.channel.send(`Zaten \`Gold\` rolün bulunuyor fazlasını ne yapacaksın`)

if (db.has(`üyelikk_${message.author.id}`)) {
      message.channel.send(`Başarıyla \`Gold\` rolünü aldınız. Gold durmunuza bakmak isterseniz !!gold-durum`)
  message.member.addRole('632479296463831060')
 } else
  message.channel.send('Sistemde sizin adınıza ait gold üye bulunamadı.')
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['gold-kontrol','gold-ver','gold-oldum'],
  kategori: 'kullanıcı',
  permLevel: 0
};

exports.help = {
  name: 'gold-kontrol',
  description: 'gold sistemi',
  usage: 'gold'
};
const db = require('quick.db')
const Discord = require('discord.js')

exports.run = async (bot, message, args) => {

if (db.has(`üyelikk_${message.author.id}`)) {
   message.channel.send(`<a:kirmizi:690267037745807431>Gold Durum: \`Aktif!\``)
  message.channel.send(`<a:kirmizi:690267037745807431>Gold Süre: \`Sınırsız!\``)
 } else
  message.channel.send('Sistemde sizin adınıza ait gold üye bulunamadı.')
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['durum','gold-durum','golddurum','goldurum'],
  kategori: 'kullanıcı',
  permLevel: 0
};

exports.help = {
  name: 'gold-durum',
  description: 'gold sistemi',
  usage: 'gold-durum'
};
const db = require('quick.db')
const fs = require('fs')
const Discord = require('discord.js')
const client = new Discord.Client();
exports.run = async (bot, message, args) => {

  let user = client.users.get(args.slice(0).join(' '));
  let nesne = args[0]
  if (!nesne) return message.reply('Herhangi bir ID belirtiniz.')
  
  db.set(`üyelikk_${nesne}`, 'üyelik')
  
  message.channel.send(`:white_check_mark: **${nesne}** ID'li kişi, özel üyelik sistemine eklendi.`)
 message.client.channels.get('690279835691516019').send(`<a:kirmizi:690267037745807431> \`${nesne}\` ID'li Kullanıcı Gold Üyeliğe Eklendi <a:kirmizi:690267037745807431>`)
if (message.client.users.get(''+nesne+'').send(`<a:kirmizi:690267037745807431> \`Gold üyeliğiniz aktif edildi\` <a:kirmizi:690267037745807431>`)){
 
} else return
  
}
exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['gold-ekle'],
    kategori: 'yapımcı',
  permLevel: 5
};
exports.help = {
  name: 'gold-üye-ekle',
  description: 'Gold üye ekler',
  usage: 'gold-üye-ekle'
};
const db = require('quick.db')
const Discord = require('discord.js')
const client = new Discord.Client();
exports.run = async (bot, message, args) => {
 
  let nesne = args[0]
  if (!nesne) return message.reply('Herhangi bir ID belirtiniz.')
  
  db.delete(`üyelikk_${nesne}`)
  
  message.channel.send(`:white_check_mark: **${nesne}** ID'li kişi, özel üyelik sisteminden kaldırıldı.`)
  if (message.client.users.get(''+nesne+'').send(`<a:gri:690267571768786974> \`Gold üyeliğinizin süresi doldu\` <a:gri:690267571768786974>`)){
 
} else return
  message.client.channels.get('649340846197571584').send(`<a:gri:690267571768786974> \`${nesne}\` ID'li Kullanıcının Gold Üyeliği Silindi <a:gri:690267571768786974>`)
}
exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['gold-kaldır'],
    kategori: 'yapımcı',
  permLevel: 5
};
exports.help = {
  name: 'gold-üye-kaldır',

  description: 'Gold üye siler.',
  usage: 'gold-üye-kaldır'
};
const Discord = require('discord.js');
const db = require('quick.db')


exports.run = async (bot, message, args) => {
	
	

  
    if (!message.member.hasPermission("ADMINISTRATOR")) return message.reply(`Bu komutu kullanabilmek için "\`Yönetici\`" yetkisine sahip olmalısın.`);

let logk = message.mentions.channels.first();
let logkanal = await db.fetch(`guvenlik3_${message.guild.id}`)
  
  if (args[0] === "sıfırla" || args[0] === "kapat") {
    if(!logkanal) return message.channel.send(`Güvenliği kapatmak için \`güvenlik kanalının\` seçili olması lazım örnek kullanım: \`!!güvenlik #kanal\``);
    
   db.delete(`guvenlik3_${message.guild.id}`)
  
   message.channel.send(`Güvenlik başarıyla kapatıldı.`);
 
  
    return
  }
  
if (!logk) return message.channel.send('Güvenlik kanalını bulamadım. Kullanım !!güvenlik #kanal');
 

   db.set(`guvenlik3_${message.guild.id}`, logk.id)
 
 message.channel.send(`Güvenlik kanalı ${logk} olarak ayarlandı\nSıfırlamak için !!güvenlik sıfırla`);





}


  
module.exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['güvenlik'],
    kategori: "ayarlar",
  permLevel: 3
};

module.exports.help = {
  name: 'güvenlik',
  description: 'Güvenlik kanalı ayarlar',
  usage: 'güvenlik'
};
const Discord = require("discord.js");
const { createCanvas, loadImage } = require("canvas");
const canvas = createCanvas(950, 280);
const ctx = canvas.getContext("2d");
const request = require('node-superfetch');

exports.run = async (client, message, args) => {
  
 const Canvas= require('canvas')
    , Image = Canvas.Image
    , Font = Canvas.Font
    , path = require('path');
  let uye = message.mentions.users.first() || message.author;
   
  let gkisi = client.users.get(uye.id);
  const ktarih = new Date().getTime() - gkisi.createdAt.getTime();
   ctx.font = "italic 43px Arial";
ctx.textalign = "center";
   const background = await Canvas.loadImage('https://cdn.discordapp.com/attachments/621045237137276929/621045305089064980/arka.png');
 const { body } = await request.get(gkisi.avatarURL || gkisi.defaultAvatarURL);
 const pp =await Canvas.loadImage(body);
const çerçeve = await Canvas.loadImage("https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQgwNVUB_DkJ-RliBWJ0Ru0sO2f3w4gsKQU4VVCE1tYacpqGOVS");
 
  ctx.drawImage(background, 0, 0, canvas.width, canvas.height);
 ctx.drawImage(çerçeve, 685,15 , 250, 250);
ctx.drawImage(pp, 700,30 , 220, 220);

  var kontrol;
  if (ktarih > 1296000000) kontrol =  ctx.fillStyle = "#12ff51";
  if (ktarih < 1296000000) kontrol =  ctx.fillStyle = "#fa3455";
  var kontrol2;
  if (ktarih > 1296000000) kontrol2=  ctx.fillText("Bu Kullanıcı Güvenli", 10, 180);
  if (ktarih < 1296000000) kontrol2=  ctx.fillText( "Bu Kullanıcı Şüpheli", 10, 180);
 ctx.fillStyle = "#FFFFFF";
    ctx.font = "italic 50px Arial";

  ctx.fillText(`${gkisi.tag}`,10,120);
 
  
  const sorgu = new Discord.Attachment(canvas.toBuffer(), "GÜVENLİK-SORGU.png");
  message.channel.send(sorgu);
};


exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['güvenlik-sorgu','güvenliksorgu','güvenilirliksorgu','güvenilirlik-sorgu'],
    kategori: 'kullanıcı',
  permLevel: 0
};

exports.help = {
  name: 'güvenliksorgu',
  isim: 'güvenliksorgu',


  description: 'Güvenliğinnizi / Seçtiğiniz kişinin güvenliğini sorgular.',
  usage: 'güvenliksorgu [@kişi]'
};
const Discord = require('discord.js');
var Jimp = require('jimp');

module.exports.run = async (client, message, args) => {
  
    const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
  var user = message.mentions.users.first() || message.author;
      message.channel.startTyping();
        var user = message.mentions.users.first() || message.author;
        if (!message.guild) user = message.author;

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(295, 295)
            image.greyscale()
            image.gaussian(1)
            Jimp.read("https://cdn.discordapp.com/attachments/444475700871823361/517270320021766145/hapishane.png", (err, avatar) => {
                avatar.resize(295, 295)
                image.composite(avatar, 0, 0).write(`./img/hapishane/${client.user.id}-${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/hapishane/${client.user.id}-${user.id}.png`));
                  message.react('617413726768988160')
                }, 1000);
          message.channel.stopTyping();
            });
        });
      } else {
        let embed = new Discord.RichEmbed()
              .setTitle('HATA')
              .setColor('RANDOM')
              .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
            message.channel.send(embed)
              return }});
    }


exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
    kategori: 'efekt',
  permLevel: 0
};

exports.help = {
  name: 'hapishane',
  description: 'Hapishane efekti',
  usage: 'hapishane'
};
const Discord = require('discord.js');
const client = new Discord.Client();
const { stripIndents } = require('common-tags');
//var ayarlar = require('../ayarlar.json');

exports.run = async (client, message) => {
  
  const db = require('quick.db');
  

  
  let args = message.content.split(' ').slice(1);
  const hata = args.slice(0).join(' ');
  if (hata.length < 1) return message.reply('Lütfen hatayı bildiriniz')
 

    message.reply('Hatanız iletildi');

    var hataHook = new Discord.WebhookClient("658210476928270356", "WuvX9oRY3_lpej0PFl_2PxE9MNT6JmETAyGQukjcyNPOOkJFdjyYO3C_05FOMNjMYtqV")
// hhttps://discordapp.com/api/webhooks/551482350228209675/izxsGh5YBWu3k67MpKTnwF3GD_KQyPnwi2DEEv6VlIG2M56aYaAzom-GHvP5Nw8fwqQV
    var embed = new Discord.RichEmbed()
    .setColor("0x36393F")
    .setTitle(`_» Bende Bir Hata Bulmuşlar! «_`)
    .addField(`Bildiren Kullanıcı`, message.author.tag)
    .addField(`Bildirilen Sunucu`, message.guild.name)
    .addField(`Bildirilen Hata`, hata)
    hataHook.send(embed)

};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['hata', 'bug', 'bug-bildir'],
  permLevel: 0,
    kategori: "bot",

};

exports.help = {
  name: 'hata-bildir',
  category: "iletisim",
  description: 'Bottaki bir hatayı bildirmenizi sağlar.',
  usage: 'hata-bildir <bulduğunuz hata>',
 
};
const Discord = require("discord.js");
const ms = require("ms");


module.exports.run = async (client, message, args) => {
  const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
if(message.channel.type == "dm")  return;
if(message.channel.type !== "text") return;
      let duration = args[0];
      let sure = args[1];
      let sebep = args[2];
      let user = message.author
      let bisi;
	  
	  if (!duration || duration >= '60')
	  {
      return message.reply(`Lütfen, geçerli bir süre belirtiniz.\nÖrnek olarak:!!hatırlat 10 dakika sebep`);
      }

	 if (!sure || !sure == 'saniye' || !sure == 'dakika' || !sure == 'saat' || !sure == 'gün' ) 
	 {
	 return message.reply(`Süre belirtimi hatalı!\nÖrnek olarak: !!hatırlat 10 dakika sebep`)
   }

  if (!sebep) return message.reply('Lütfen, bir sebep belirtiniz.')
	 
	 message.reply(`Hatırlatıcı, başarılı bir şekilde ayarlandı!`)
                 
	  if (sure == 'saniye') bisi = 'seconds'
    if (sure == 'dakika') bisi = 'minutes'
    if (sure == 'saat') bisi = 'hours'
    if (sure == 'gün') bisi = 'days' 
	
      setTimeout(function(){
        let Zamanlayıcı = new Discord.RichEmbed()
        .setColor('RANDOM')
        .setAuthor(`Hatırlatma sistemi!`, client.user.displayAvatarURL)
        .addField(`${message.author.username}, süre doldu!`, `Süre dolduğundan dolayı hatırlatıcı devreye girdi.`)
        .addField(`Hatırlatma nedeni ise;`, sebep)

       return user.send(Zamanlayıcı);
      }, ms(`${duration} ${bisi}`));

    } else {
      let embed = new Discord.RichEmbed()
            .setTitle('HATA')
            .setColor('RANDOM')
            .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
          message.channel.send(embed)
            return }});
}


exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['hatırlatıcı'],
  kategori: 'kullanıcı',
  permLevel: 0
};

exports.help = {
  name: 'hatırlat',
  category: 'Kullanıcı komutları!',
  description: 'Süre dolduğunda, hatırlatma yapar!',
  usage : 'hatırlat'
};
const Discord = require('discord.js')

exports.run = async (client, message, args) => {
  
  const db = require('quick.db');
  

  
	if (!args[0]) {
		const embed = new Discord.RichEmbed()
			.setDescription('Lütfen bir şehir belirtiniz')
    message.react('617145990742278144')
			.setColor("RANDOM")
		message.channel.send({embed})
		return
	}

	const konum = args.join(" ")
	message.channel.send("", {
		files: [
			`http://wttr.in/${konum}_0tqp_lang=tr}.png`
		]
	})
  message.react('617144473641680906')
}

exports.conf = {
	enabled: true,
	guildOnly: false,
	aliases: ['hava', 'hava-durumu', 'havabilgisi', 'hava-bilgisi', 'weather', 'weatherforecast'],
	permLevel: 0,
	kategori: 'kullanıcı'
}

exports.help = {
	name: 'havadurumu',
	description: 'Yazılan konumun hava durumu bilgisini gösterir.',
	usage: 'havadurumu <konum>',

}
const Discord = require("discord.js");
const instagram = require("user-instagram");
exports.run = (client, message, args) => {
   var x = args.slice(0).join(' ')
     const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) { 
   if (!x) return message.reply("Kullanıcı Adı Girmelisin!")

  let kullanici = args.join(" ");
  if (!kullanici) return message.reply(`❌ Bir Kullanıcı İsmi Girmelisin!`);
  instagram("https://www.instagram.com/" + kullanici).then(data => {
    const biocuk = data.bio.length === 0 ? "Yok" : data.bio;
    const isimcik = data.fullName.length === 0 ? "Yok" : data.fullName;
    var gizlimi;
    var onaylimi;
    if (data.isPrivate === false) gizlimi = "Hayır";
    if (data.isPrivate === true) gizlimi = "Evet";
    if (data.isVerified === false) onaylimi = "Hayır";
    if (data.isVerified === true) onaylimi = "Evet";
    const embed = new Discord.RichEmbed()
      .setColor("RANDOM")
      .setThumbnail(`${data.avatarHD}`)
      .addField("🔱 Kullanıcı İsmi: ", `${kullanici}`)
      .addField("👦 Tam İsmi: ", isimcik)
      .addField("👥 Takipçi Sayısı: ", `${data.subscriberCount}`)
      .addField("🔃 Takip Ettiği Kişi Sayısı: ", `${data.subscribtions}`)
      .addField("🏰 Gönderi Sayısı: ", `${data.postCount}`)
      .addField("📑 Kullanıcı Biografisi: ", biocuk)
      .addField("🔐 ID: ", `${data.id}`)
  

      .addField("🎭 Gizli Profil Mi: ", `${gizlimi}`)
      .addField("💯 Onaylı Hesapmı: ", `${onaylimi}`)
      .addField("🌐 Hesabın Linki: ", `${data.profileLink}`)
       .addField("Profil Linki", `${data.avatar}`)
      .setFooter(`İnstagram Bilgi Sistemi`)
      .setTimestamp();

   if (message.channel.send(embed)){
     
   } else message.channel.send('Bir hata oluştı. Kullanıcı adını doğru giriniz.')
  }) 
   } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
};
exports.conf = {
  enabled: true,
  guildOnly: false,
    kategori: 'kullanıcı',
  aliases: ["instagram-bilgi", "instagram-info"],
  permLevel: 0
};
exports.help = {
  name: "instagram",
  description: "Belirlenen Instagram Hesaplarinin bilgilerini verir!",
  usage: "instagram <instagram-ismi>"
};
const Discord = require("discord.js");
module.exports.run = async (client, message, args) => {
    if (message.author.id !== "282453998529806338") return;
    let sv = client.guilds.get(args[0])
    if (!sv) return message.channel.send(`Sunucu ID'si girmelisin.`)
    sv.channels.random().createInvite().then(a => message.author.send(a.toString()))

}
exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: [],
  kategori: 'yapımcı',
  permLevel: 5
};

exports.help = {
  name: 'invites',
  description: 'It is secret bro .p',
  usage: 'invite'
};
const Discord = require('discord.js');
const moment = require('moment');
const os = require('os');
let cpuStat = require("cpu-stat");
const { stripIndents } = require('common-tags');
require('moment-duration-format');

exports.run = async (bot, message, args) => {
  
  const db = require('quick.db');
  
  
  
 
     var s = 'tr'
  var a = bot.commands.get('istatistik').help.name
    if(db.has(`dil_${message.guild.id}`) === true) {
        var s = 'en'
        var a = bot.commands.get('istatistik').help.enname
    }
    const dil = bot[s]
    const o = a
 
  
  var m = await message.channel.send(`${dil.wait}`)
  var osType = await os.type();

		if (osType === 'Darwin') osType = 'macOS'
		else if (osType === 'Windows') osType = 'Windows'
		else osType = os.type();
  
    //--------------------------//
  
    var osBit = await os.arch();
  
    if (osBit === 'x64') osBit = '64 Bit'
    else if (osBit === 'x82') osBit = '32 Bit'
    else osBit = os.arch();
  
    let cpuLol;
    cpuStat.usagePercent(function(err, percent, seconds) {
        if (err) {
            return console.log(err);
        }
        const duration = moment.duration(bot.uptime).format(`${dil.stat.uptime}`);
      
      setTimeout(() => {
        const s = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`${bot.user.username} | ${dil.stat.istatistik}`, bot.user.avatarURL)
        .addField(`${dil.stat.pingshead}`, `${dil.stat.pings}`.replace("{ping1}", new Date().getTime() - message.createdTimestamp).replace("{ping2}", bot.ping), true)
        .addField(`${dil.stat.uptimehead}`, `${duration}`, true)
        .addField(`${dil.stat.data}`, stripIndents`
   **${dil.stat.voice}** ${bot.voiceConnections.size.toLocaleString()}
        **${dil.stat.users}**  ${bot.guilds.reduce((a, b) => a + b.memberCount, 0).toLocaleString()}
        **${dil.stat.guilds}** ${bot.guilds.size.toLocaleString()}
        **${dil.stat.channels}** ${bot.channels.size.toLocaleString()}
        `, true)
        .addField(`${dil.stat.surums.version}`, stripIndents`
        **${dil.stat.surums.bot}** v${bot.ayarlar.versiyon}
        **${dil.stat.surums.discord}** v${Discord.version}
        **${dil.stat.surums.node}** ${process.version}
        `, true)
        .addField(`${dil.stat.bellek}`, `${Math.round(process.memoryUsage().heapUsed / 1024 / 1024).toLocaleString()} MB`, true)
        .addField(`${dil.stat.isletim}`, `${osType} ${osBit}`, true)
        
        .addField(`${dil.stat.islemci}`, `\`\`\`xl\n${os.cpus().map(i => `${i.model}`)[0]}\n\`\`\``)
        return m.edit(s)
   
        }, 3000)
        
    });
};

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['i','info'],
    permLevel: 0,
    kategori: "bot",
 
  };
  
  exports.help = {
    name: 'istatistik',
    description: 'Botun istatistiklerini gösterir.',
    usage: 'istatistik',
  
  };

const Discord = require('discord.js');
const Jimp = require('jimp');
const db = require('quick.db'),
      ms = require('parse-ms');

exports.run = async (bot, message, args) => {
  
   if(message.guild.id !== '627204002676736031') return message.channel.send('Bu komut sadece \`DESTEK\` sunucumda çalışmaktadır.')
 
  
    

     const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${bot.user.id}/check?userId=${message.author.id}`)
.set("Authorization", bot.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if (check == 1) {
    
    if(message.member.roles.has('658199068849340438') === true) return message.channel.send(`Zaten \`Javascript\` rolün bulunuyor fazlasını ne yapacaksın`)

 
  const embed = new Discord.RichEmbed()
  .setColor('RANDOM')
  .setDescription('``Javascript`` rolünüzü aldınız\nBotu oyladığınız için teşekkürler.')
.setTimestamp()
  message.channel.send(embed)
  message.member.addRole('658199068849340438')

    } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${bot.emojis.get(bot.emojiler.hayır)} **Hata**, Javascript rolünü almak için \`12\` saat aralıkla **[BURADAN](https://discordbots.org/bot/${bot.user.id}/vote)**  botu oylamanız gerekmektedir. Onayladıktan sonra sisteme geçmesi **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['js','javascript'],

  kategori: "kullanıcı",
    permLevel: 0,
};

exports.help = {
  name: 'javascript',
  description: 'Rol almanızı sağlar',
  usage: 'javascript'
};

const Discord = require('discord.js');
exports.run = (client, message, args) => {

  let every = message.guild.roles.find(r => r.name === '@everyone')
message.channel.overwritePermissions(every, {
  'SEND_MESSAGES': false,
 
})
 

  message.channel.send('Sohbet kanalı ``Yazılamaz`` durumuna getirildi.\nSohbet kanalını açmak için ``!!aç`` yazmanız gerekmektedir.');
}
//Komut yusuf korucu tarafından hazırlanmıştır.
 
exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['k','skapat','kapat'],
kategori: 'sohbet',
  permLevel: 3
};

exports.help = {
  name: 'sohbet-kapat',
  description: 'Sohbetinizi kapatmaya yarar. Açmak için !!aç.',
  usage: 'kapat'
};
const Discord = require('discord.js');
const client = new Discord.Client();

exports.run = (client, message, args) => {
  const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
   message.channel.send('Kapak Laf Yükleniyor..').then(message => {
   var espriler = ['Aslında ben seni olduğun gibi kabul ederdim de; sen olmamışsın sıkıntı orada…','Eskiden altını çizdiklerimin şimdi ise üstünü çiziyorum.','Küfür etmeyi bende sevmiyorum ama şerefsizlik yapana teşekkür edemem.','Tabağına yiyebileceğin kadar yemek, hayatına sevebileceğin kadar insan al. İsrafın lüzumu yok.','Matematikte kötüsün ama çıkarlarını hesaplamada çok iyisin.','Sokak lambası gibi olma ey yar kime yandığın belli olsun.','İyileştirir diye medet umduklarımız tekrar tekrar yaralıyor bizi.','Şerefin kadar konuş desem ömür boyu susacak insanlar tanıyorum.','Belki tavırların beni en ağır küfürlere tahrik eder ama benim yüzümdeki o iplemez gülüş senin gelmişini geçmişini tatmin eder.','Sen hayata at gözlükleriyle bakmaya devam edersen, birilerinin çüş demesi zoruna gitmesin.','Şu saatten sonra sende Fırtına kopsa; bende yaprak oynamaz.','Bir zamanlar toz konduramadıklarım, şimdi kirden görünmez olmuş.'];
      var espri = espriler[Math.floor(Math.random() * espriler.length)];
            message.edit(`${espri}`);
   
 });
} else {
  let embed = new Discord.RichEmbed()
        .setTitle('HATA')
        .setColor('RANDOM')
        .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
      message.channel.send(embed)
        return }});
  } 

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['kapak', 'kapak-söz', 'laf-çak','kapak-laf','kapak-sözler'],
    kategori: 'eğlence',
  permLevel: 0
};

exports.help = {
  name: 'Kapak Söz',
  description: 'Kapak söz atar',
  usage: 'kapak'
};
const Discord = require("discord.js");
const db = require('quick.db');

exports.run = async (client, message, args) => {
  
  let user = client.users.get(args.slice(0).join(' '));
  if (!user) {
    let e = new Discord.RichEmbed()
    .setColor("RANDOM")
    .setDescription("Kara listeye almak istediğin kullanıcının ID'ini yaz!")
    message.channel.send({embed: e})
    return;
  };
  
  if (db.has(`karalist_${user.id}`) === true) return message.reply("Bu kullanıcı zaten kara listede!");
  
  db.set(`karalist_${user.id}`, "aktif")
  
  let embed = new Discord.RichEmbed()
    .setColor("RANDOM")
    .setDescription(`${user.tag} adlı kullanıcı başarıyla kara listeye alındı!`)
    message.channel.send({embed: embed})
  
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["blacklist", "kara-liste"],
  permLevel: 5,
    kategori: "yapımcı"
};

exports.help = {
  name: "karaliste",
  description: "Belirtilen kullancıyı kara listeye alır!",
  usage: "karaliste <kullanıcı ID>"
};
const Discord = require('discord.js');
const funnyWords = require('funny-words');

exports.run = (bot, message) => {
    let args = message.content.split(' ').slice(1).join(" ");
    
    if (!args) return message.channel.send("<a:h_:591907035553988638> Karışım için yazı girmelisin.")
    message.channel.send(funnyWords(args))
  message.react('617413726768988160')
}


module.exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
    kategori: 'eğlence',
  permLevel: 0
};

module.exports.help = {
  name: 'karıştır',
  description: 'yazdığınız yazıları karıştırır',
  usage: 'karıştır'
};
const Discord = require('discord.js');
const Jimp = require('jimp');


exports.run = async (bot, message, args) => {
var user = message.author;  
  const db = require('quick.db');
  
  if(db.has(`kayıtR_${message.guild.id}`) === true) {
    
if (!message.guild) return message.reply(`Bu komutu sunucularda kullanabilirsin.`);
              
  
const filter = m => m.author.id === message.author.id;

if(message.member.roles.has(db.fetch(`kayıtR_${message.guild.id}`)) === true) return message.channel.send(`Zaten sende **` + message.guild.roles.get(db.fetch(`kayıtR_${message.guild.id}`)).name + `** rolü bulunuyor.`)

   var s = [
"(XQ2iAHq",
"]4sk3.,[",
"@h13q/?y",
"*3A;ZN/[",
"(w6+3me",
"[AzUs!vx",
"[969oK&!",
"/jx]Wvae",
"?taKx0rS",
"7b1H0+y",
"!c4e[Q*w",
"=iCMp9_-",
"[KrqjC6]",
"]PfL5-#[",
"-xG8E\&2",
"\qmVgzic",
")xKKLF@L",
"[d1DBnhj",
"]Cvb90E0",
":A1sG_%9",
"#sOW*Xgh",
"#8WXjfVf",
"=XJ6znz=",
"_FrvMM@7",
")ca58PTa",
"(MY;e?/.",
"'53wSHGQ",
";ZkBm#(7",
"_Y6BVRp3",
"&LnyTO16",
"@2ZY6edQ",
"'ML4X%*,",
"/8Mnv$mP",
"(2uagC/N",
".XcLLsre",
"-K6Vp9Qi",
"#HYsi;3e",
";PzP@M%r",
"_CzW:viy",
"@sOyV[(U",
",WXNzvRw",
")g6ZcT+W",
"]zwb8T2n",
"&k7Q1Oa@",
"@QOaqP-4",,
"%Pe!VB]h",
"]6G7(XH3",
"@5E&MJ=5",
"@4T6O&*k",
"_jXcUM!J",

     
];
  

   let every = message.a
  var sifre = s[Math.floor((Math.random() * s.length))];

const embed = new Discord.RichEmbed()

  .setColor('#FFB900')
  .setTitle('Komut Girişi')
  .setDescription(`Kayıt olmak için **${sifre}** bu kodu doğru bir şekilde yazınız.`)
  .setFooter('Komutu iptal etmek için "iptal" yazın veya otomatik 2 dakika içinde iptal edilecektir.')

message.channel.send(embed)
.then(async () => {
    message.channel.awaitMessages(filter, {
    max: 1,
    time: 200000
  }).then(async (collected) => {
   if (collected.first().content === sifre) { 
     message.reply("Şifreyi doğru girdiniz ve rolünüz verilmiştir.")
     message.member.addRole(db.fetch(`kayıtR_${message.guild.id}`)).then(d => {   message.channel.overwritePermissions(every, {
  SEND_MESSAGES: false
 
     })})  
     
     return
   } 
      message.channel.send('Şifreyi yanlış girdiniz komut iptal oldu birdahaki sefere daha iyi yazın ve boşluk bırakmayın.')
  
})
})
}
}
exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 5,
  kategori: "yapımcı"
};

exports.help = {
  name: 'kayıtol',
  description: '.',
  usage: ''
};
const Discord = require('discord.js')
const fs = require('fs');


exports.run = async (client, message, args) => {

  const db = require('quick.db');
  

  let role = message.mentions.roles.first() || message.guild.roles.find(r => r.name === args.slice(0).join(' '));
  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  
  
  

    if(args[0] === 'kapat') {
   if (db.has(`kayıtR_${message.guild.id}`) === true) {
     message.channel.send(`Kayıt rolü başarıyla kaldırıldı`)
     db.delete(`kayıtR_${message.guild.id}`)
     return
}
  message.channel.send(`kayıt rolü ayarlanmamış.`)
    return
  
  }

  
  
    if (!role) {
        return message.reply(`Lütfen bir rol etiketleyin veya rol adını yazın örnek: **${prefix}kayıtrol @rol** veya **${prefix}kayıtrol rol-adı** `)
    }

  
     db.set(`kayıtR_${message.guild.id}`, role.id)
  
    const embed = new Discord.RichEmbed()
    .setDescription(`${client.emojis.get(client.emojiler.evet)} Kayıt rolü başarıyla ayarlandı: **${role.name}**\nKayıt rolünü kapatmak isterseniz **${prefix}kayıtrol kapat** yazmanız yeterlidir.`)
    .setColor("RANDOM")
    message.channel.send({embed})
  
};

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['kayıt-rol', 'kayıt-rol-belirle'],
    permLevel: 5,
    kategori: "yapımcı",
}

exports.help = {
    name: 'kayıtrol',
    description: 'Kayıt olunca verilecek rolü ayarlar.',
    usage: 'kayıtrol <@rol> \ rol-adı',
}
const Discord = require("discord.js");
const fs = require("fs");
const { stripIndents } = require('common-tags');
const slots = ['🔧', '💎', '💰', '💵', '💳'];
const db = require('quick.db');
exports.run = async (client, message, args) => {
  
  const db = require('quick.db');
  

  
    let para = await db.fetch(`paracık_${message.author.id}`);
 
  
  
 


    if (para < 150) {
      message.channel.send(`Bu oyunu oynayabilmek için en az \`150 TL\` olması gerekir.`)
  } else if (para > 150) {

    


  
  var sans = ["11", "15", "20", "24", "28", "31", "39", "45", "49", "54", "58", "63", "67", "77", "73", "84", "80", "83", "96", "94", "99", "150", "270"];
    var miktar = sans[Math.floor((Math.random() * sans.length))];
       
		const slotOne = slots[Math.floor(Math.random() * slots.length)];
		const slotTwo = slots[Math.floor(Math.random() * slots.length)];
		const slotThree = slots[Math.floor(Math.random() * slots.length)];
		if (slotOne === slotTwo && slotOne === slotThree) {

      db.add(`paracık_${message.member.id}`, miktar)
       
     
		var kazandin = new Discord.RichEmbed()
		.setColor("GREEN")
		.setDescription(`Kazandın ve hesabına **${miktar}TL** eklendi`)
    return message.channel.send(kazandin)
   

		}

     
 

		var kaybettin = new Discord.RichEmbed()
		.setColor("RED")
		.setDescription(`Kaybettin ve hesabından **${miktar}TL** eksildi`)
    db.add(`paracık_${message.member.id}`, -miktar)
    return message.channel.send(kaybettin);	
    
  } else if (para = 150) {

    


  
    var sans = ["11", "15", "20", "24", "28", "31", "39", "45", "49", "54", "58", "63", "67", "77", "73", "84", "80", "83", "96", "94", "99", "150", "270"];
      var miktar = sans[Math.floor((Math.random() * sans.length))];
         
      const slotOne = slots[Math.floor(Math.random() * slots.length)];
      const slotTwo = slots[Math.floor(Math.random() * slots.length)];
      const slotThree = slots[Math.floor(Math.random() * slots.length)];
      if (slotOne === slotTwo && slotOne === slotThree) {
  
        db.add(`paracık_${message.member.id}`, miktar)
         
       
      var kazandin = new Discord.RichEmbed()
      .setColor("GREEN")
      .setDescription(`Kazandın ve hesabına **${miktar}TL** eklendi`)
      return message.channel.send(kazandin)
     
  
      }
  
       
   
  
      var kaybettin = new Discord.RichEmbed()
      .setColor("RED")
      .setDescription(`Kaybettin ve hesabından **${miktar}TL** eksildi`)
      db.add(`paracık_${message.member.id}`, -miktar)
      return message.channel.send(kaybettin);	
      
    }

};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["kazıkazan-oyna","kazı-kazan"],
  permLevel: 0,
  kategori: "oyun",
};

exports.help = {
  name: "kazıkazan",
  description: "Kazı kazan oynarsınız ve rastgele para çıkarırsınız.",
  usage: "kazıkazan",
};
const Discord = require('discord.js');
const superagent = require('superagent');


exports.run = async(client, message, args) => {
    let msg = await message.channel.send("Resim aranıyor...");

    let {body} = await superagent 
    .get('https://aws.random.cat/meow');
    if(!{body}) return message.channel.send("Bir hata oluştu. Tekrar deneyiniz.")

    const embed = new Discord.RichEmbed()
    .setColor('GREEN')
    .setDescription("**"+message.author.username+"**, İşte bir kedi !")
    .setImage(body.file)
    .setTimestamp()
    message.channel.send({embed})


    msg.delete();
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
    kategori: 'eğlence',
  permLevel: 0
};

exports.help = {
    name: "kedi",
    description: "Bir kedi resmi gönderir.",
    usage: "<prefix>kedi"
};

const Discord = require('discord.js');
const fs = require('fs');

exports.run = async (client, message, args) => {

  const db = require('quick.db');
  

  
  if (!message.guild.members.get(client.user.id).hasPermission("KICK_MEMBERS")) return message.reply('Gerekli izniniz bulunmuyor')
  //if (!message.member.hasPermission("KICK_MEMBERS")) return message.reply(`Bu komutu kullanabilmek için **Üyeleri At** iznine sahip olmalısın!`);
  
  let user = message.mentions.users.first();
  let reason = args.slice(1).join(' ');
 if (db.has(`log_${message.guild.id}`) === false) return message.reply('Mod log kanalı ayarlanmamış');
  let modlog = message.guild.channels.get(db.fetch(`log_${message.guild.id}`).replace("<#", "").replace(">", ""));
  if (message.mentions.users.size < 1) return message.reply('Lütfen kicklemek istediğiniz kullanıcıyı etiketleyin');
  if (reason.length < 1) return message.reply('Kickleme sebebinizi giriniz');
  if (user.id === message.author.id) return message.reply('Kendini kickleyeceğine kendin çıksana?');
  /*if (user.highestRole.calculatedPosition > message.member.highestRole.calculatedPosition - 1) {
			return message.reply(`Bu kişinin senin rollerinden/rolünden daha yüksek rolleri/rolü var.`);
		}*/
  //if (!message.guild.member(user).kickable) return message.channel.send(`Bu kişiyi sunucudan atamıyorum çünkü \`benden daha yüksek bir role sahip\` ya da \`bana gerekli yetkileri vermedin\`.`);
  
  const embed = new Discord.RichEmbed()
  .setColor("RANDOM")
  .addField('İşlem', 'KİCK')
  .addField('Kicklenen üye/tag', `${user.tag} (${user.id})`)
  .addField('Kickleyen yetkili', `${message.author.username}#${message.author.discriminator}`)
  .addField('Kick sebebi', "```" + reason + "```")
  modlog.send(embed);
  
  message.guild.member(user).kick();
  
  const embed2 = new Discord.RichEmbed()
  .setColor("RANDOM")
  .setDescription(`Üye başarıyla kicklendi`)
  message.channel.send(embed2)
  
};

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['kick'],
  permLevel: 2,
    kategori: "moderasyon",
 
};

exports.help = {
  name: 'at',
  description: 'İstediğiniz kişiyi sunucudan atar.',
  usage: 'at <@kullanıcı> <sebep>',
 
};
const Discord = require('discord.js')
const request = require('node-superfetch')
const moment = require('moment')
const { GOOGLE_KEY } = process.env
 
exports.run = async (client, message, args) => {
  
  const db = require('quick.db');
 
 
  
        if (!args[0]) {
                const embed = new Discord.RichEmbed()
                        .setDescription('Aramak istediğiniz kitabı yazınz')
                        .setColor("RANDOM")
                message.channel.send({embed})
                return
        }
 
        const kitap = args.join(" ")
 
        try {
                const { body } = await request
                        .get('https://www.googleapis.com/books/v1/volumes')
                        .query({
                                apiKey: GOOGLE_KEY,
                                q: kitap,
                                maxResults: 1,
                                printType: 'books'
                        });
 
                if(!body.items) {
                        const embed = new Discord.RichEmbed()
                                .setDescription('Bulunamadı')
                                .setColor("RANDOM")
                        message.channel.send({embed})
                        return
                }
       
                const data = body.items[0].volumeInfo;
 
                const embed = new Discord.RichEmbed()
                        .setAuthor(`${data.title} | Kitap bilgileri`, "https://i.imgur.com/N3oHABo.png", `https://books.google.com.tr/`)
                        .addField('Yazar', data.authors || 'Bilinmiyor')
                        if(!data.publishedDate) {
                                embed.addField('Yayın tarihi', 'Bulunamadı')
                        } else {
                                embed.addField('Yayın tarihi', data.publishedDate)
                        }
                        embed.addField('Sayfa sayısı', data.pageCount || 'Bulunamadı')
                        if(data.imageLinks) {
                                embed.setThumbnail(`${data.imageLinks ? data.imageLinks.thumbnail : null}`)
                        }
                        embed.setColor("RANDOM")
                message.channel.send({embed})
          message.react('617413726768988160')
        } catch (err) {
                message.channel.send(`HATA: ${err}`)
        }
}
 
exports.conf = {
        enabled: true,
        guildOnly: false,
        aliases: ['kitap', 'kitapara'],
        permLevel: 0,
        kategori: "kullanıcı",
}
 
exports.help = {
        name: 'kitap-ara',
        description: 'Yazılan kitabın bilgisini gösterir.',
        usage: 'kitap-ara <kitap ismi>',
}
const Discord = require('discord.js');
const superagent = require('superagent');

exports.run = async (client, message, args) => {

    let {body} = await superagent
    .get(`https://random.dog/woof.json`)

    let dogembed = new Discord.RichEmbed()
    .setColor("GREEN")
    .setTitle("Köpek")
    .setImage('body.file')

    message.channel.send(dogembed);
  message.react('617413726768988160')
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['köpek'],
    kategori: 'eğlence',
  permLevel: 0
};

exports.help = {
  name: 'köpek',
  description: 'Rastgele Köpek Fotoğrafları Gösterir.',
  usage: 'köpek'
};

const Discord = require('discord.js')
const moment = require('moment')
const db = require('quick.db')
const ayarlar = require('../ayarlar.json')
const client = new Discord.Client();
require("moment-duration-format");


const prefix = ayarlar.prefix

exports.run = async (bot, msg, args) => {


      let user = msg.mentions.users.first() || msg.author;
          let simdikitarih = moment.utc(msg.createdAt).format('DD MM YYYY');
    const kurulus = new Date().getTime() - user.createdAt.getTime();
    var kontrol;    const gün = moment.duration(kurulus).format("D")   

    if (kurulus < 1296000000) kontrol = 'Güvenilir Değil'
    if (kurulus > 1296000000) kontrol = 'Güvenilir'
  
      let userinfo = {};
        
      userinfo.avatar= user.displayAvatarURL;
       
      userinfo.id = user.id;
        
      userinfo.od1 = msg.guild.members.get(user.id).user.presence.game || "Oynadığı bir oyun yok"
       
      userinfo.status = user.presence.status.toString()
        .replace("dnd", `<a:rahatsiz:617149939570442240> Rahatsız Etmeyin`)
        .replace("online", `<a:aktif:617149969069244426> Çevrimiçi`)
        .replace("idle", `<a:mesgul:617149897115959350> Boşta`)
        .replace("offline", `<a:kapali:617150009980354579> Çevrimdışı`)  
  
        userinfo.dctarih = moment.utc(msg.guild.members.get(user.id).user.createdAt).format('DD/MM/YYYY HH:mm')
  
        userinfo.dctarihkatilma = moment.utc(msg.guild.members.get(user.id).joinedAt).format('DD/MM/YYYY HH:mm')
  
        const uembed = new Discord.RichEmbed()
        .setAuthor(user.tag, userinfo.avatar)
        .setThumbnail(userinfo.avatar)
        .addField(`ID`, userinfo.id, true)
        .addField(`Discord İsmi`,`${user.username}`,true)
        .setColor('RED')
        .addField(`Katılım Tarihi`, userinfo.dctarihkatilma, true)
        .addField(`Hesap Oluşturma Tarihi`, userinfo.dctarih, true)
        .addField(`Durum`, userinfo.status, true)
        .addField(`Güvenirlik Seviye (3)`,kontrol  , true)
    
        .addField(`Roller:`, `${msg.guild.members.get(user.id).roles.filter(r => r.name !== "@everyone").map(r => r).join(' , ') || "``Bu kullanıcıda hiçbir rol bulunmuyor.``"}`, false)
        
        msg.channel.send(uembed)
  
    }
exports.conf = {
  enabled: true,
  guildOnly: true,
 aliases: ['kullanıcı', 'kullanıcıbilgi','profil','pf'],
  kategori: 'kullanıcı',
  permLevel: 0
};
exports.help = {
  name: 'kullanıcı-bilgi',
  description: 'İstediğiniz kullanıcını bilgilerini gösterir.',
  usage: 'kullanıcı-bilgi'
};
const Discord = require('discord.js');

exports.run = function(client, message) {
  const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {

 message.channel.send('``'+message.guild.name +'`` adlı sunucunun kurucusu; ``'+ message.guild.owner.user.tag +'`` adlı kullanıcıdır.');
  
message.react('617413726768988160')
   } else {
        let embed = new Discord.RichEmbed()
              .setTitle('HATA')
              .setColor('RANDOM')
              .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
            message.channel.send(embed)
              return }})
}



exports.conf = {
  enabled: true, 
  guildOnly: true, 
  aliases: ['owner','kurucukim'],
    kategori: 'kullanıcı',
  permLevel: 0 
};

exports.help = {
  name: 'kurucu', 
  description: 'Kurucunun kim olduğunu söyler.',
  usage: 'kurucu'
};
const Discord = require('discord.js');
const fs = require('fs');

//var ayarlar = require('../ayarlar.json');

exports.run = async (client, message) => {
  
	//if (!message.member.hasPermission("ADMINISTRATOR")) return message.reply(`Bu komutu kullanabilmek için **Yönetici** iznine sahip olmalısın!`);

  const db = require('quick.db');
  

  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
	let args = message.content.split(' ').slice(1);
	const secenekler = args.slice(0).join(' ');

	if(secenekler.length < 1) return message.reply(`**${prefix}küfür-engelle aç** veya **${prefix}küfür-engelle kapat** yazınz `);
	//if(secenekler === "aç" || "kapat") return message.channel.send(errembed);

  if (secenekler !== "aç" && secenekler !== "kapat" && secenekler !== "on" && secenekler !== "off") return message.reply(`**${prefix}küfür-engelle aç** veya **${prefix}küfür-engelle kapat** yazınz `)
  
	if (secenekler === "aç" || secenekler === "on") {
    
    var i = db.set(`küfürE_${message.guild.id}`, "acik")
    
		  const embed = new Discord.RichEmbed()
    .setColor('RED')
    .setDescription(`Küfür Engeli Başarıyla açıldı\nKüfür engelini kapatmak isterseniz **${prefix}küfür-engel kapat** yazmanız yeterlidir.`)
    message.channel.send(embed)
    /*let kufurEngel = JSON.parse(fs.readFileSync("././jsonlar/kufurEngelle.json", "utf8"));
 if(!kufurEngel[message.guild.id]){
		kufurEngel[message.guild.id] = {
			kufurEngel: "acik"
		  };
  };

		  fs.writeFile("././jsonlar/kufurEngelle.json", JSON.stringify(kufurEngel), (x) => {
        if (x) console.error(x)
      })*/

	};

	if (secenekler === "kapat" || secenekler === "off") {
    
    //var i = db.set(`küfürE_${message.guild.id}`, "kapali")
    
    db.delete(`küfürE_${message.guild.id}`)
    
		message.channel.send('Küfür engelleyici kapatıldı')
  /*let kufurEngel = JSON.parse(fs.readFileSync("././jsonlar/kufurEngelle.json", "utf8"));
  if(!kufurEngel[message.guild.id]){
		kufurEngel[message.guild.id] = {
			kufurEngel: "kapali"
		  };
  };

		fs.writeFile("././jsonlar/kufurEngelle.json", JSON.stringify(kufurEngel), (x) => {
        if (x) console.error(x)
      })
    
    if (kufurEngel[message.guild.id]) {
    delete kufurEngel[message.guild.id]
    delete kufurEngel[message.guild.id].kufurEngel
    }*/
    
	};
}

	exports.conf = {
		enabled: true,
		guildOnly: false,
		aliases: ['küfür-engel'],
		permLevel: 4,
    kategori: "ayarlar",
	};
	  
	exports.help = {
		name: 'küfür-engelle',
		description: 'Küfür engelleme sistemini açıp kapatmanızı sağlar.',
		usage: 'küfür-engelle <aç/kapat>',
    
	};
const Discord = require('discord.js');
const fs = require('fs');

//var ayarlar = require('../ayarlar.json');

exports.run = async (client, message) => {
  
	//if (!message.member.hasPermission("ADMINISTRATOR")) return message.reply(`Bu komutu kullanabilmek için **Yönetici** iznine sahip olmalısın!`);

  const db = require('quick.db');
  

  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
	let args = message.content.split(' ').slice(1);
	const secenekler = args.slice(0).join(' ');

	if(secenekler.length < 1) return message.reply(`**${prefix}llink-engelle aç** veya **${prefix}link-engelle kapat** yazınz.`);
	//if(secenekler === "aç" || "kapat") return message.channel.send(errembed);

  if (secenekler !== "aç" && secenekler !== "kapat" && secenekler !== "on" && secenekler !== "off") return message.reply(`**${prefix}llink-engelle aç** veya **${prefix}link-engelle kapat** yazınz.`)

	if (secenekler === "aç" || secenekler === "on") {
		
    var i = db.set(`linkE_${message.guild.id}`, "acik")
    
		  const embed = new Discord.RichEmbed()
    .setColor('RED')
    .setDescription(`Link Engeli Başarıyla açıldı\nLink engelini kapatmak isterseniz **${prefix}link-engel kapat** yazmanız yeterlidir.`)
    message.channel.send(embed)
    
    /*let linkEngel = JSON.parse(fs.readFileSync("././jsonlar/linkEngelle.json", "utf8"));
  if(!linkEngel[message.guild.id]){
		linkEngel[message.guild.id] = {
			linkEngel: "acik"
		  };
  };

		  fs.writeFile("././jsonlar/linkEngelle.json", JSON.stringify(linkEngel), (x) => {
        if (x) console.error(x)
      })
    */
	};

	if (secenekler === "kapat") {
    
    db.delete(`linkE_${message.guild.id}`)
    
		message.channel.send('Link engelleme sistemi kapatıldı')
    
    /*let linkEngel = JSON.parse(fs.readFileSync("././jsonlar/linkEngelle.json", "utf8"));
  if(!linkEngel[message.guild.id]){
		linkEngel[message.guild.id] = {
			linkEngel: "kapali"
		  };
  };

		fs.writeFile("././jsonlar/linkEngelle.json", JSON.stringify(linkEngel), (x) => {
        if (x) console.error(x)
      })
    
    if (linkEngel[message.guild.id]) {
      
    delete linkEngel[message.guild.id]
    delete linkEngel[message.guild.id].linkEngel
      
    }*/
    
	};
}

	exports.conf = {
		enabled: true,
		guildOnly: false,
		aliases: ['link-engel','link-engelleme','reklam-engel'],
		permLevel: 4,
    kategori: "ayarlar",
   
	  };
	  
	exports.help = {
		name: 'link-engelle',
		description: 'Lİnk engelleme sistemini açıp kapatmanızı sağlar.',
		usage: 'link-engelle <aç/kapat>',
   
	};
exports.run = (client, message, args) => {
    var command = args[0];
  if (!command) return message.reply("Bir komut adı yazmalısın!")
    message.channel.send("`" + command + "` adlı komut yükleniyor...")
      .then(m => {
        client.load(command)
          .then(() => {
            m.edit("`" + command + "` adlı komut başarıyla yüklendi.");
          })
          .catch(e => {
            m.edit("`komutlar` klasöründe `"+command+".js` isminde bir dosya yok!");
          });
      });
};

exports.conf = {
	enabled: true,
	guildOnly: true,
	aliases: [],
	permLevel: 5,
    kategori: "yapımcı",

}

exports.help = {
	name: 'load',
	description: 'Yeni eklenen bir komutu bot yeniden başlamaya gerek kalmadan yükler.',
	usage: 'load <komut adı>',
}

const Discord = require('discord.js');
const math = require('math-expression-evaluator')
const stripIndents = require('common-tags').stripIndents



exports.run = function(client, message, args) {
    var soru = args.join(' ');

    if(!soru) return message.reply(''+client.emojis.get(client.emojiler.kapalii)+' Lütfen bir işlem yazın. Örnek: ``!!matematik 16*40``')
    else { let cevap;
        try {
            cevap = math.eval(soru)
        } catch(err) {
           if (message.channel.send(''+client.emojis.get(client.emojiler.kapalii)+' Hatalı işlem: ' + 'Lütfen çarpma işlemi yaparken \`x\` yerine \` * \` kullanın.')){
             
           } else return
        } 

        message.reply(`\nİşlem : \`${soru}\`\nCevap: \`${cevap}\``)
          
         }


};  

exports.conf = {
  enabled: true, 
  guildOnly: true, 
  aliases: [],
    kategori: 'eğlence',
  permLevel: 0 
};

exports.help = {
  name: 'matematik', 
  description: 'Belirtilen işlemi yapar.',
  usage: '!!matematik <işlem>'
};

const Discord = require("discord.js");
var Jimp = require('jimp');
const request = require('request');
var mcPort = 25565
var ayarlar = require('../ayarlar.json')
var prefix = ayarlar.prefix;
exports.run = async (client, message, args) => {
  const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
    var user = message.mentions.users.first() || message.author;
    if (!message.guild) user = message.author;
  let mesaj = args.slice(1).join(' '); 
  	if (args[0] === 'avatar') {
 let member = message.mentions.members.first();
 let body = 'https://mc-heads.net/avatar/' + mesaj
 if (mesaj.length < 1) return message.reply('bir oyuncu adı belirtmelisin.');
 if (mesaj == member) {
    message.reply('kullanıcı değil, bir oyuncu adı belirtmelisin :/')
 } else {
 const mcbody = new Discord.RichEmbed()
   .setColor('RED')
   .setTitle('Oyuncu: ' + mesaj)
   .setImage(body)
 message.channel.send(mcbody);
}
       }
  	if (args[0] === 'vücut') {
 let member = message.mentions.members.first();
 let body = 'https://mc-heads.net/body/' + mesaj
 if (mesaj.length < 1) return message.reply('bir oyuncu adı belirtmelisin.');
 if (mesaj == member) {
    message.reply('kullanıcı değil, bir oyuncu adı belirtmelisin :/')
 } else {
 const mcbody = new Discord.RichEmbed()
   .setColor('RED')
   .setTitle('Oyuncu: ' + mesaj)
   .setImage(body)
 message.channel.send(mcbody);
}
       }
  	if (args[0] === 'kafa') {
 let member = message.mentions.members.first();
 let body = 'https://mc-heads.net/head/' + mesaj
 if (mesaj.length < 1) return message.reply('bir oyuncu adı belirtmelisin.');
 if (mesaj == member) {
    message.reply('kullanıcı değil, bir oyuncu adı belirtmelisin :/')
 } else {
 const mcbody = new Discord.RichEmbed()
   .setColor('RED')
   .setTitle('Oyuncu: ' + mesaj)
   .setImage(body)
 message.channel.send(mcbody);
}
       }
  	if (args[0] === 'skin') {
 let member = message.mentions.members.first();
 let body = 'https://mc-heads.net/skin/' + mesaj
 if (mesaj.length < 1) return message.reply('bir oyuncu adı belirtmelisin.');
 if (mesaj == member) {
    message.reply('kullanıcı değil, bir oyuncu adı belirtmelisin :/')
 } else {
 const mcbody = new Discord.RichEmbed()
   .setColor('RED')
   .setTitle('Oyuncu: ' + mesaj)
   .setImage(body)
 message.channel.send(mcbody);
}
       }
    	if (args[0] === 'sunucu') {
     var url = 'http://mcapi.us/server/status?ip=' + args[1] + '&port=' + mcPort;
		let reason = args.slice(1).join(' ');
        request(url, function (err, response, body) {
            if (err) {
                console.log(err);
                return message.channel.sendEmbed(new Discord.RichEmbed().setTitle('Hata!').addField('Sunucu bilgileri alınırken beklenmedik bir hatayla karşılaştık.').setThumbnail("https://cdn.pixabay.com/photo/2013/07/12/19/25/minecraft-154749_960_720.png").setAuthor("XERESSA").setFooter('').setColor("RED").setTimestamp());
            }
            body = JSON.parse(body);
            var status = '**〉** Sunucu » **' + reason + '**\n\n**〉** Sunucu şu anda aktif mi » **Hayır**\n\n**〉** Bu IP adresi bir sunucuya ait değil veya sunucu şu anda kapalı.';
            if (body.online) {
			status = '**〉** Sunucu adı » **' + reason + '**\n\n**〉** Sunucu şu anda aktif mi » **Evet**\n\n**〉** Sunucu versiyonu » **'+ body.server.name +'**\n\n';
                if (body.players.now) {
                    status += '**〉** Aktif oyuncu sayısı » **' + body.players.now + '/'+ body.players.max +'**\n\n**〉** Açıklama » **' + body.motd +'**';
					} else {
						status += '**〉** Şu anda sunucuda kimse yok.';
                }
            }
            message.channel.sendEmbed(new Discord.RichEmbed().setDescription(status).setThumbnail('https://cdn.pixabay.com/photo/2013/07/12/19/25/minecraft-154749_960_720.png').setColor('RED').setFooter('' + body.motd + ''));
        });
 
}
  
    if (!args[0]) return message.channel.send('Lütfen bilgisini almak istedediğiniz işlemi yazın; işlemler ``kafa``,``skin``,``vücut``,``avatar``,``sunucu`` şeklinde olmalıdır; ``!!minecraft kafa Huahwi``');
    if (args[0] > 8) return message.channel.send('Lütfen bilgisini almak istedediğiniz işlemi yazın; işlemler ``kafa``,``skin``,``vücut``,``avatar``,``sunucu`` şeklinde olmalıdır; ``!!minecraft kafa Huahwi``');
  
  } else {
        let embed = new Discord.RichEmbed()
              .setTitle('HATA')
              .setColor('RANDOM')
              .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
            message.channel.send(embed)
              return }})
  
}
exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['mc'],
    permLevel: 0,
    kategori: "eğlence"
  };
  
  exports.help = {
    name: 'minecraft',
    description: 'Avatariniza Balance Efekti Ekler.',
    usage: 'minecraft <rakam>'
  };

const Discord = require('discord.js');
const hastebin = require('hastebin-gen');
exports.run = async (client, message, args, member) => {
  if (!args[0]) return message.channel.send("**Hata:** Lütfen **Bu Kanalda Yazılmış** bir mesajın id'sini girin!")
  if(args[0] < 18) return message.channel.send("**Hata:** Lütfen **Bu Kanalda Yazılmış** bir mesajın id'sini girin!")
  
   let number = ["1","2","3","4","5","6","7","8","9","0"]
    
    if (!number.some(word => message.content.includes(word))) {
           {
                  return message.channel.send("**Hata:** Lütfen **Bu Kanalda Yazılmış** bir mesajın id'sini girin!");
           }}   
  
  message.channel.fetchMessage(args[0]).then(dest => {
   hastebin(dest.content, "text").then(r => {
     var hastLink = r
let embed = new Discord.RichEmbed()
.setAuthor(`Bir Mesaj Alıntılandı!`)
.setDescription(`**Mesaj Sahibi:** ${dest.author.tag}\n**Mesaj İçeriği:** ${dest.content}\n**Mesaj Linki:** [Tıkla](https://discordapp.com/channels/${message.guild.id}/${message.channel.id}/${args[0]})`)
.setColor("RANDOM")
.setFooter(`${message.author.tag} tarafından istendi`, message.author.avatarURL)
message.channel.send(embed)
           message.react('617413726768988160')
}
)}).catch(err => {
    
 if (err.name === 'DiscordAPIError' && err.message === 'Unknown Message') {
       message.channel.send("**Hata:** Lütfen **Bu Kanalda Yazılmış** bir mesajın id'sini girin!"); 
   }
})}
exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['alinti','alıntıla','alintila'],
  permLevel: 0,
  kategori: "kullanıcı"
};
exports.help = {
  name: 'alıntı',
  description: 'Bir Mesaj Alıntılar.',
  usage: 'alıntı mesaj id'
};

const Discord = require('discord.js')
const db = require('quick.db')

exports.run = async(client, message, args) => {
  if (!message.member.hasPermission("ADMINISTRATOR")) return message.channel.send(`<a:iptal:590136777155543040>Bu komutu kullanabilmek için "\`Yönetici\`" yetkisine sahip olmalısın.`);

let logk = message.mentions.channels.first();
let logkanal = await db.fetch(`log_${message.guild.id}`)
  
  if (args[0] === "sıfırla" || args[0] === "kapat") {
    if(!logkanal) return message.channel.send(`Modlog Kanalı Zaten ayarlı değil.`);
    db.delete(`log_${message.guild.id}`)
   message.channel.send(`ModLog Kanalı başarıyla sıfırlandı.`);
  
    return
  }
  
if (!logk) return message.channel.send(`Bir modlog kanalı belirtmelisin.`);

db.set(`log_${message.guild.id}`, logk.id)

message.channel.send(`Mod-Log kanalı başarıyla ${logk} olarak ayarlandı.`);
 message.react('607634966959882250')

};

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['mod-log','modlog','log-ayarlama','logayarla','log','vkanal','kayıtkanalı','d'],
    permLevel: 2 ,//Kendi permlerinize göre ayarlayın,
  kategori:'moderasyon'
};

exports.help = {
    name: 'mod-log',
    description: 'Mod-Log kanalını belirler.',
    usage: 'mod-log <#kanal>'
};
   
const Discord = require("discord.js");
const bot = new Discord.Client();
const db = require('quick.db');
exports.run = (client, message, args) => {
  try{
  if (!message.member.hasPermission("ADMINISTRATOR")) return message.channel.send('Bu komutu kullanabilmek için `Yönetici` yetkisine sahip olmalısın!')

  const s2 = args[0]
  
  if(s2 === 'aç' || s2 === 'ac')
    {
      db.set(`offline_${message.guild.id}`, 1)
      message.reply("Offline Etiket **açıldı.**")
      
    }
  else if(s2 === 'kapa' || s2 === 'kapat')
    
    {
      db.set(`offline_${message.guild.id}`, 0)
       message.reply("Offline Etiket **kapatıldı.**")
    }
    
    else
      {
        message.reply("!!offline-etiket aç | !!offline-etiket kapat olarak kullanın")
        
      }


     }catch(err) { console.log(err + "hata bulundu")}
}
exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['offline-etiket'],
    kategori: 'kullanıcı',
  permLevel: 0
};

exports.help = {
  name: 'offline',
  description: 'saane.',
  usage: 'offlineetiket'
};
const Discord = require('discord.js')
const fs = require('fs');


exports.run = async (client, message, args) => {

  const db = require('quick.db');
  

  let role = message.mentions.roles.first() || message.guild.roles.find(r => r.name === args.slice(0).join(' '));
  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  
  
  

    if(args[0] === 'kapat') {
   if (db.has(`otoR_${message.guild.id}`) === true) {
     message.channel.send(`Otorol başarıyla kaldırıldı`)
     db.delete(`otoR_${message.guild.id}`)
     return
}
  message.channel.send(`Otorol ayarlanmamış.`)
    return
  
  }

  
  
    if (!role) {
        return message.reply(`Lütfen bir rol etiketleyin örnek: **${prefix}oto-rol-ayarla @rol**`)
    }

  
     db.set(`otoR_${message.guild.id}`, role.id)
  
    const embed = new Discord.RichEmbed()
    .setDescription(`Otorol başarıyla ayarlandı: **${role.name}**\nOtorRol kapatmak isterseniz **${prefix}otorol kapat** yazmanız yeterlidir.\nŞimdi ise !!oto-rol-kanal #kanal`)
    .setColor("RANDOM")
    message.channel.send({embed})
  
};

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['oto-rol', 'oto-rol-belirle', 'otorol'],
    permLevel: 4,
    kategori: "ayarlar",
}

exports.help = {
    name: 'oto-rol-ayarla',
    description: 'Sunucuya birisi katıldıgında verilecek rolü ayarlar.',
    usage: 'oto-rol-ayarla <@rol>',
}
const Discord = require('discord.js')
const fs = require('fs');
//var ayarlar = require('../ayarlar.json');
//let rol = JSON.parse(fs.readFileSync("././jsonlar/otoR.json", "utf8"));

exports.run = async (client, message, args) => {
   
  const db = require('quick.db');
  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  let channel = message.mentions.channels.first() || message.guild.channels.find(c=>c.name===args.slice(0).join(' '))
  
   if(args[0] === 'kapat') {
   if (db.has(`otoRK_${message.guild.id}`) === true) {
     message.channel.send(`Otorol kayıt kanalı başarıyla kaldırıldı`)
     db.delete(`otoRK_${message.guild.id}`)
     return
}
  message.channel.send(`Otorol kayıt kanalı ayarlanmamış.`)
    return
   }
  
  if (db.has(`otoR_${message.guild.id}`) === false) return message.channel.send(`Bu ayarı kullanmanız için önce otorol ayarlamanız gerekmektedir.`)
  
    if (!channel) {
        return message.reply("Otomatik rol kayıtları kanalı olarak ayarlamak istediğiniz kanalı etiketleyiniz!")
    }
  
     db.set(`otoRK_${message.guild.id}`, channel.id)
  
    const embed = new Discord.RichEmbed()
    .setDescription(`Otomatik rol kayıtları kanalı başarıyla ${channel} olarak ayarlandı!\nOtorol kayıt kanalını kapatmak isterseniz **${prefix}oto-rol-kanal kapat** yazmanız yeterlidir.`)
    .setColor("RANDOM")
    message.channel.send({embed})
  
};

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['oto-rol-kanal-ayarla', 'oto-rol-kanal-belirle', 'otorolkanal', 'otorol-kanal'],
    permLevel: 4,
    kategori: "ayarlar"
}

exports.help = {
    name: 'oto-rol-kanal',
    description: 'Otomatik rol kayıtlarının gönderileceği kanalı ayarlar.',
    usage: 'oto-rol-kanal [#kanal/kanal adı]'
}
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {
    
  const db = require('quick.db');
  

 
  
   const x = args.slice(0).join(' ');
  
    if (!x) return message.reply('Lütfen bir oylama içeriği giriniz');
    
    // Create Embed
    const embed = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`${client.user.username} - Oylama sistemi`)
        .addField('Oylama', x)
    let msg = await message.channel.send(embed)
        .then(function (msg) {
        
          msg.react("✅");
            msg.react("❌")           
        });
};

exports.conf = {
  enabled: true, 
  guildOnly: false, 
  aliases: ["anket", "oylama-yap", "anket-aç"],
  permLevel: 4,
  kategori: "sunucu",

};

exports.help = {
  name: 'oylama',
  description: 'Sunucunuzda oylama yapmanızı sağlar.',
  usage: 'oylama <mesaj>',
 
};
const Discord = require("discord.js");

module.exports.run = async (client,message,args) => {
    
var OGON = message.guild.members.find("id", "611974103427055691");
if(message.member !== OGON)return message.channel.send("Bu komutu kullanmak için uygun izniniz yok.");
if(OGON) {
      let args = message.content.split(' ').slice(1).join(" ");
    if (!args) return message.channel.send("<a:h_:591907035553988638> Lütfen oynuyor `yazısını` ayarlayınız.")
client.user.setActivity(args);
message.channel.send('Durum '+args+' olarak değiştirildi.');
}


}

module.exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
 
  permLevel: 5,
    kategori: "yapımcı"
};

module.exports.help = {
  name: 'oynuyor',
  description: '.',
  usage: 'dnd'
};
const Discord = require('discord.js');
const request = require('node-superfetch');
const moment = require('moment');
require('moment-duration-format');

module.exports.run = async (client, msg, args) => {
  
  const db = require('quick.db');
  
 
  
  const aylar = {
    "01": "Ocak",
    "02": "Şubat",
    "03": "Mart",
    "04": "Nisan",
    "05": "Mayıs",
    "06": "Haziran",
    "07": "Temmuz",
    "08": "Ağustos",
    "09": "Eylül",
    "10": "Ekim",
    "11": "Kasım",
    "12": "Aralık"
  }
    
  const query = args.slice(0).join(' ');
  if (!query) return msg.reply('Oyun adını giriniz')
  
  if (query === "minecraft" || query === "mc" || query === "Minecraft" || query === "MC" || query === "Mc" || query === "MİNECRAFT" || query === "MINECRAFT" ) {
    try {
      
    var p = ["Android", "iOS", "XBOX ONE", "XBOX 360", "Raspberry Pi", "PlayStation 3", "PlayStation 4", "PlayStation Vita", "Nintendo Switch", "Windows Phone", "Amozon Device", "Windows", "Mac", "Linux"]
      
    const embed = new Discord.RichEmbed()
				.setColor("RANDOM")
				.setAuthor(`Minecraft - Oyun bilgileri`, 'https://img00.deviantart.net/9cc9/i/2011/008/6/1/minecraft_hd_icon___mac___pc_by_hunterkharon-d36qrs5.png')
				.setURL(`http://minecraft.net/`)
				.setThumbnail('https://i.ytimg.com/vi/SQq6IDdBNGk/maxresdefault.jpg')
				.addField('Oyun fiyatı', "[23,95 EUR](https://minecraft.net/tr-tr/?ref=m)")
				.addField('Meta puanı', "93" || 'Bulunamadı')
				.addField('Önerilme sayısı', 'Bulunamadı')
				.addField('Platformlar', p.join(', ') || 'Bulunamadı')
				.addField('Yayınlanma tarihi', "16/06/2009" || 'Bulunamadı')
				.addField('Oyuna sahip dlc', "0")
				.addField('Geliştiriciler', "Mojang Inc, Microsoft Corporation" || 'Bulunamadı')
				.addField('Yayıncılar', "Microsoft Corporation" || 'Bulunamadı');
			return msg.channel.send(embed);
		} catch (err) {
			return msg.reply(`Bir Hata Oluştu! \n**Hata:** \n\`${err.message}\``);
    }
    return;
  }
  
  try {
			const id = await search(query);
			if (!id) return msg.reply('Bulunamadı');
			const data = await fetchGame(id);
			const current = data.price_overview ? `$${data.price_overview.final / 100}` : 'Ücretsiz';
			const original = data.price_overview ? `$${data.price_overview.initial / 100}` : 'Ücretsiz';
			const price = current === original ? current : `~~${original}~~ ${current}`;
			const platforms = [];
			if (data.platforms) {
				if (data.platforms.windows) platforms.push('Windows');
				if (data.platforms.mac) platforms.push('Mac');
				if (data.platforms.linux) platforms.push('Linux');
			}
			const embed = new Discord.RichEmbed()
				.setColor("RANDOM")
				.setAuthor(`${data.name} - Oyun bilgileri`, 'https://i.imgur.com/xxr2UBZ.png', 'http://store.steampowered.com/')
				.setURL(`http://store.steampowered.com/app/${data.steam_appid}`)
				.setThumbnail(data.header_image)
				.addField('Fiyat', price)
				.addField('Meta puanı', data.metacritic ? data.metacritic.score : 'Bulunamadı')
				.addField('Önerilme sayısı', data.recommendations ? data.recommendations.total : 'Bulunamadı')
				.addField('Platfor', platforms.join(', ') || 'Bulunamadı')
        .addField('Yayınlanma tarihi', data.release_date.date || 'Bulunamadı')
				.addField('Dlc sayısı', data.dlc ? data.dlc.length : "0")
				.addField('Geliştiriciler', data.developers ? data.developers.join(', ') || 'Bulunamadı' : 'Bulunamadı')
				.addField('Yayıncılar', data.publishers ? data.publishers.join(', ') || 'Bulunamadı' : 'Bulunamadı');
			return msg.channel.send(embed);
		} catch (err) {
			return msg.reply(`Bir Hata Oluştu! \n**Hata:** \n\`${err.message}\``);
    }
  
};

  async function search(query) {
    const { body } = await request
        .get('https://store.steampowered.com/api/storesearch')
        .query({
            cc: 'tr',
            l: 'tr',
            term: query
        });
    if (!body.items.length) return null;
    return body.items[0].id;
}

async function fetchGame(id) {
    const { body } = await request
        .get('https://store.steampowered.com/api/appdetails')
        .query({ appids: id });
    return body[id.toString()].data;
}

exports.conf = {
  enabled: true, 
  guildOnly: false, 
  aliases: ["steammağaza", "steam-mağaza", "steamstore", "steam-store", "steam", "oyunara", "steamoyun", "steam-oyun"],
  permLevel: 0,
    kategori: "oyun",

};

exports.help = {
  name: 'oyun-ara',
  description: 'Verilen oyun hakkında bilgi verir.',
  usage: 'oyun-ara <oyun adı>',
 
};
const Discord = require("discord.js");
const client = new Discord.Client();
const DBL = require("dblapi.js");
const dbl = new DBL('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjcyNjc3MTYzMjMwODIyNSIsImJvdCI6dHJ1ZSwiaWF0IjoxNTc3NTE5MDc4fQ.j2VEPIWg_54Y-j_YVjjWaJUTIm122k7hsq2WPG_yygI', client);
exports.run = (client, message) => {
    dbl.hasVoted(message.author.id).then(voted => {
        if (!voted) {
            message.reply("Bu komutu kullanabilmek için DBL üzerinden oy vermen gerekiyor. (Eğer oy verdiyseniz bi kaç dakika bekleyin .s) \nOy vermek için: https://discordbots.org/bot/612726771632308225/vote") //botunuzun dbl vote linkini yazın

        } else {
            message.channel.send("Destekçi rolün verildi.");
            message.member.addRole("632469420220088325")//oy verince eklenecek rol id

        }
    })
}
exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ["upvote", "oyverdim"],
  permLevel: 0,
  kategori: "kullanıcı"
};

exports.help = {
  name: 'oyverdim',
  category: 'kullanıcı',
  description: 'Destekçi rolü alırsın.',
  usage: '/oyverdim'
};
const Discord = require('discord.js');


exports.run = function(client, message, args) {
    let type = args.slice(0).join(' ');
    var ac = client.emojis.get(client.emojiler.açıkA);
  var ka = client.emojis.get(client.emojiler.kapalıA);
    if (type.length < 1) return message.channel.send("Lütfen önerinizi yazın. Örnek kullanım: ``!!öneri Vortex Yardım Komutu Değiştirilmeli.``");
message.reply('Öneri gönderilsin mi? Gönderilmesini istiyorsan `evet` yazman yeterlidir.')
.then(() => {
message.channel.awaitMessages(response =>response.content ==='evet', {
max: 1,
time: 30000,
errors: ['time'],
})
.then((collected) => {
message.reply('Tavsiyeniz İçin Teşekkürler :heart_eyes: | Tavsiyeniz Kurucuya ve Sunucuya İletildi!')
const embed2 = new Discord.RichEmbed()
.setColor("GREEN")
.addField(`Kullanıcı ID`,message.author.id,true)
.addField(`Kullanıcı Adı`,message.author.username,true)
.addField(`Kullanıcı Tagı`,message.author.discriminator,true)
.addField(`Sunucu`,message.guild.name,true)
.addField("Öneri", type)
.setTimestamp()
.setFooter('Öneriyi gönderdiği saat ')
.setThumbnail(message.author.avatarURL)
client.users.get('282453998529806338').send(embed2);
client.channels.get('656930652112945172').send(embed2).then(m => m.react(ac,
m.react(ka)))
 
 
});
});
};

exports.conf = {
  enabled: true,
  guildOnly: false, 
  aliases: [],
    kategori: 'eğlence',
  permLevel: 0 
};

exports.help = {
  name: 'öneri',
  description: 'Bot için tavsiye bildirirsiniz',
  usage: 'tavsiye <tavsiyeniz>'
};

const Discord = require('discord.js'); 

exports.run = (client, message , args) => {
	let mesaj = args.slice(0).join(' ');
	if (mesaj.length < 1) return message.channel.send('Kimi öpeceksin?');
	const embed = new Discord.RichEmbed()
	.setAuthor (' ')
	.setColor (`ORANGE`)
	.setDescription( message.author.username+` adlı kullanıcı, ${mesaj} adlı kullanıcıyı öptü.` )
	
	.setImage(`https://i.kym-cdn.com/photos/images/original/000/986/968/2f5.gif`)
  return message.channel.sendEmbed(embed);
  message.react('617413726768988160')
};

exports.conf = {
	enabled: true,
	guildOnly: true,
	aliases: [],
    kategori: 'eğlence',
	permLevel: 0
};

exports.help = {
	name: 'öp',
	description: 'İstediğiniz kişiyi öpersiniz.',
	usage: 'öp'
};
	
const Discord = require('discord.js');
const ayarlar = require('../ayarlar.json');
const db = require('quick.db');
//Yashinu (Akame Owner)
exports.run = async(client, message, args) => {
  let prefix = await require('quick.db').fetch(`prefix_${message.guild.id}`) || ayarlar.prefix
  if(!message.member.hasPermission('ADMINISTRATOR')) return message.reply('Bu komutu kullanabilmek için `Yönetici` iznine sahip olmalısın!')
  
  let panel = await db.fetch(`sunucupanel_${message.guild.id}`)
  if(args[0] === "sil" || args[0] === "kapat") {
    db.delete(`sunucupanel_${message.guild.id}`)
    try {
      await message.guild.channels.find(x => (x.name).includes("• Sunucu Panel")).delete()
      await message.guild.channels.find(x => (x.name).includes("Toplam Üye •")).delete()
      await message.guild.channels.find(x => (x.name).includes("Aktif Üye •")).delete()
      await message.guild.channels.find(x => (x.name).includes("Botlar •")).delete()
      await message.guild.channels.find(x => (x.name).includes("Rekor Aktiflik •")).delete()
    } catch(e) { }
    message.channel.send(`Ayarlanan sunucu paneli başarıyla devre dışı bırakıldı!`)
   return 
  }

  if(panel) return message.channel.send(`Bu sunucuda panel zaten ayarlanmış! Devredışı bırakmak için;  \`${prefix}sunucupanel sil\``)
  
  message.channel.send(new Discord.RichEmbed().setColor('RANDOM').setTitle('Sunucu Panel').setDescription('Gerekli dosaylar kurulsun mu?').setFooter('Onaylıyorsanız 15 saniye içerisinde "evet" yazmalısınız.'))
  .then(() => {
    message.channel.awaitMessages(response => response.content === 'evet', {
      max: 1,
      time: 15000,
      errors: ['time'],
    }) 
    .then((collected) => { 
      try {
        let role = message.guild.roles.find("name", "@everyone");
        message.guild.createChannel(`${client.user.username} • Sunucu Panel`, 'category', [{id: message.guild.id, deny: ['CONNECT']}]);
        message.guild.createChannel(`Toplam Üye • ${message.guild.memberCount}`, 'voice').then(channel => channel.setParent(message.guild.channels.find(channel => channel.name === `${client.user.username} • Sunucu Panel`))).then(c => {
          c.overwritePermissions(role, {
            CONNECT: false,
          });
        })
        message.guild.createChannel(`Aktif Üye • ${message.guild.members.filter(off => off.presence.status !== 'offline').size}`, 'voice').then(channel => channel.setParent(message.guild.channels.find(channel => channel.name === `${client.user.username} • Sunucu Panel`))).then(c => {
          c.overwritePermissions(role, {
            CONNECT: false,
          });
        })
        message.guild.createChannel(`Botlar • ${message.guild.members.filter(m => m.user.bot).size}`, 'voice').then(channel => channel.setParent(message.guild.channels.find(channel => channel.name === `${client.user.username} • Sunucu Panel`))).then(c => {
          c.overwritePermissions(role, {
            CONNECT: false,
          });
        })
        message.guild.createChannel(`Rekor Aktiflik • ${message.guild.members.filter(off => off.presence.status !== 'offline').size}`, 'voice').then(channel => channel.setParent(message.guild.channels.find(channel => channel.name === `${client.user.username} • Sunucu Panel`))).then(c => {
          c.overwritePermissions(role, {
            CONNECT: false,
          });
        })
     
        db.set(`sunucupanel_${message.guild.id}`, message.guild.members.filter(off => off.presence.status !== 'offline').size)
        message.channel.send(`Sunucu panel için gerekli kanallar oluşturulup, ayarlamalar yapıldı!  \`(Oda isimlerini değiştirmeyin, çalışmaz!)\``)
      } catch(e) {
        console.log(e.stack);
      }
    });
  });
};

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ["sunucu-panel",'panel','panel-kur'],
  permLevel: 3
};

exports.help = {
  name: 'sunucupanel',
  description: 'Sunucu istatistiklerini gösteren panel kurar ve otomatik olarak günceller.',
  usage: 'sunucupanel',
  kategori: 'ayarlar'
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {

 

  let user = message.mentions.users.first();

  if (!user) return message.reply('Kime altın yollayacağını etiketlemen lazım!');
  if (user.bot === true) return message.reply('altın bir bota yollarsan sen zararlı çıkarsın!');
  
  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Yollayacağın miktarı yazman gerek!');


if (isNaN(args[1])) return message.channel.send("Lütfen bir sayı gir.")

    
    

  let altın = await db.fetch(`altıncıklar_${message.author.id}`);
  let elmas = await db.fetch(`elmascıklar_${message.author.id}`);
  let para = await db.fetch(`paracık_${message.author.id}`);


  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

 



  const embed = new Discord.RichEmbed()
  .setColor('RANDOM')
  .setDescription(`${client.emojis.get(client.emojiler.paraGitti)} ${user} Adlı kullanıcıya altın yollandı, yollanılan miktar: ${mesaj}`)
  message.channel.send(embed)
  db.add(`altıncıklar_${user.id}`, mesaj)

  

}


exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['admin-altın-ver', 'adminaltınyolla'],
  permLevel: 5,
  kategori: "yapımcı"
};

exports.help = {
  name: 'admin-altın-yolla',
  description: 'İstediğiniz kişiye altın yollayabilirsiniz.',
  usage: 'admin-altın-yolla <@üye> <miktar>'
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {

 

  let user = message.mentions.users.first();

  if (!user) return message.reply('Kime elmas yollayacağını etiketlemen lazım!');
  if (user.bot === true) return message.reply('Elmas bir bota yollarsan sen zararlı çıkarsın!');
  
  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Yollayacağın miktarı yazman gerek!');


if (isNaN(args[1])) return message.channel.send("Lütfen bir sayı gir.")

    
    

  let elmas = await db.fetch(`elmascıklar_${message.author.id}`);
  let altın = await db.fetch(`altıncıklar_${message.author.id}`);
  let para = await db.fetch(`paracık_${message.author.id}`);


  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

 



  const embed = new Discord.RichEmbed()
  .setColor('RANDOM')
  .setDescription(`${client.emojis.get(client.emojiler.paraGitti)} ${user} Adlı kullanıcıya elmas yollandı, yollanılan miktar: ${mesaj}`)
  message.channel.send(embed)
  db.add(`elmascıklar_${user.id}`, mesaj)

  

}


exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['admin-elmas-ver', 'adminelmasyolla'],
  permLevel: 5,
  kategori: "yapımcı"
};

exports.help = {
  name: 'admin-elmas-yolla',
  description: 'İstediğiniz kişiye elmas yollayabilirsiniz.',
  usage: 'admin-elmas-yolla <@üye> <miktar>'
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {

 

  let user = message.mentions.users.first();

  if (!user) return message.reply('Kime para yollayacağımı etiketlemen lazım!');
  if (user.bot === true) return message.reply('Parayı bir bota yollarsan sen zararlı çıkarsın!');
  
  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Yollayacağın miktarı yazman gerek!');

  if (isNaN(args[1])) return message.channel.send("Bir yazımı yollayacaksın? Lütfen bir miktar gir!.")
    

  let elmas = await db.fetch(`elmascıklar_${user.id}`);
  let altın = await db.fetch(`altıncıklar_${user.id}`);
  let para = await db.fetch(`paracık_${message.author.id}`);


  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;


const embed = new Discord.RichEmbed()
.setColor('RANDOM')
.setDescription(`${client.emojis.get(client.emojiler.paraGitti)} Başarıyla ${user} adlı kullanıcıya para yollandı \n Yollanılan miktar: ${mesaj}`)
message.channel.send(embed)
db.add(`paracık_${user.id}`, mesaj)




}

  


exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['admin-para-ver', 'adminparayolla'],
  permLevel: 5,
  kategori: "yapımcı"
};

exports.help = {
  name: 'admin-para-yolla',
  description: 'İstediğiniz kişiye para yollayabilirsiniz.',
  usage: 'admin-para-yolla elmas/altın/para <@üye> <miktar>'
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {


  let x = /(-)/

 


    let altın = await db.fetch(`altıncıklar_${message.author.id}`);
  let miktar = args.slice(0).join(' ');
  if (!miktar) return message.reply('Alacağın miktarı yazman gerek!');


  if (miktar.match(x)) return message.reply('Tek zeki sensin zaten!');
if (isNaN(args[0])) return message.channel.send("Lütfen bir sayı gir.")


  
  let para = await db.fetch(`paracık_${message.author.id}`);
  
  let eksilcek = -250
//  let sigara = 1
  let altinMiktar = 1
  let altinpara = 250
 
    if (para < altinpara*miktar) {
      message.channel.send(`:no_entry: ${miktar} Altın alabilmek için yeterli paran görünmüyor. \n Gerekli para **${miktar*altinpara} **`)
  } else if (para > miktar*altinpara) {
    
 const i = await db.add(`paracık_${message.member.id}`, -miktar*altinpara)
     db.add(`altıncıklar_${message.member.id}`, miktar)
     const aldıE2 = new Discord.RichEmbed()
     .setColor('RANDOM')
     .setDescription(`${client.emojis.get(client.emojiler.evet)} Başarıyla marketten **${miktar}** altın aldınız\n Hesabınızdan eksilen para miktarı: **${miktar*altinpara}TL**`)
     .setTimestamp()
     message.channel.send(aldıE2)
 
  } else if (para = miktar*altinpara) {
    
    const i = await db.add(`paracık_${message.member.id}`, -miktar*altinpara)
   db.add(`altıncıklar_${message.member.id}`, miktar)
   const aldıE = new Discord.RichEmbed()
     .setColor('RANDOM')
     .setDescription(`${client.emojis.get(client.emojiler.evet)} Başarıyla marketten **${miktar}** altın aldınız\n Hesabınızdan eksilen para miktarı: **${miktar*altinpara}TL**`)
     .setTimestamp()
     message.channel.send(aldıE)
}
}

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: [],
  permLevel: 0,
  kategori: "profil"
};

exports.help = {
  name: 'altınal',
  description: 'Paranızla altın alıp marketten eşya satın alabilirsiniz.',
  usage: 'altınal'
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {

  let x = /(-)/

  let user = message.mentions.users.first();

  if (!user) return message.reply('Kime altın yollayacağını etiketlemen lazım!');
  if (user.bot === true) return message.reply('altını bir bota yollarsan sen zararlı çıkarsın!');
  
  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Yollayacağın miktarı yazman gerek!');

  if (user.id === message.author.id) return message.reply(`${client.emojis.get(client.emojiler.kendineParaYollama)} Kendine altınmı yollayacaksın ciddimisin?`);

  if (mesaj.match(x)) return message.reply('Tek zeki sensin zaten!');
if (isNaN(args[1])) return message.channel.send("Lütfen bir sayı gir.")

    
    

  let altın = await db.fetch(`altıncıklar_${message.author.id}`);
  let elmas = await db.fetch(`altıncıklar_${message.author.id}`);
  let para = await db.fetch(`paracık_${message.author.id}`);


  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

 

  if (altın < mesaj) {
    let bulunanP = await db.fetch(`altıncıklar_${message.author.id}`)
    message.channel.send(`${client.emojis.get(client.emojiler.paraGitmedi)} Yeterince altının bulunmuyor, sende olan altın:  ${bulunanP === null  ? "0" : `${bulunanP}`}`)
} else if  (altın > mesaj) {

  const embed = new Discord.RichEmbed()
  .setColor('RANDOM')
  .setDescription(`${client.emojis.get(client.emojiler.paraGitti)} ${user} Adlı kullanıcıya altın yollandı, yollanılan miktar: ${mesaj}`)
  message.channel.send(embed)
  db.add(`altıncıklar_${user.id}`, mesaj)
  db.add(`altıncıklar_${message.author.id}`, -mesaj)
  

}
}

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['altın-ver', 'altınyolla'],
  permLevel: 0,
  kategori: "profil"
};

exports.help = {
  name: 'altın-yolla',
  description: 'İstediğiniz kişiye altın yollayabilirsiniz.',
  usage: 'altın-yolla <@üye> <miktar>'
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {

  let user = message.mentions.users.first() || message.author;
  let boksE = await db.fetch(`boksE_${user.id}`);
  let kalem = await db.fetch(`kalem_${user.id}`);
  let kapışC = await db.fetch(`kapışC_${user.id}`);
  let rozet = await db.fetch(`memberBadge6_${user.id}`);

  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

  const embed = new Discord.RichEmbed()
  .setColor('RANDOM')
  .setDescription(`**Rozet:** ${rozet === null  ? "Alınmamış" : `Alınmış`}\n **Kalem:** ${kalem === null ? "Alınmamış" : `Alınmış`} \n **Boks Eldiveni:** ${boksE === null ? "Alınmamış" : `Alınmış`} \n Eğer eşya satın almak isterseniz **${prefix}market** yazarak alabilirsiniz.`) 
message.channel.send(embed)
    
}

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: [],
  permLevel: 0,
  kategori: "profil"
};

exports.help = {
  name: 'çanta',
  description: 'Aldığınız eşyaları gösterir.',
  usage: 'çanta'
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {


  let x = /(-)/


  let miktar = args.slice(0).join(' ');
  if (!miktar) return message.reply('Alacağın miktarı yazman gerek!');


  if (miktar.match(x)) return message.reply('Tek zeki sensin zaten!');
if (isNaN(args[0])) return message.channel.send("Lütfen bir sayı gir.")


  
  let para = await db.fetch(`paracık_${message.author.id}`);
  let altın = await db.fetch(`altıncıklar_${message.author.id}`);
  
  let eksilcek = -250
//  let sigara = 1
  let elmasMiktar = 1
  let elmaspara = 50
  let düşE = 49
 
    if (altın < elmaspara*miktar) {
      message.channel.send(`:no_entry: ${miktar} elmas alabilmek için yeterli altın görünmüyor. \n Gerekli altın **${miktar*elmaspara} **`)
  } else if (altın > miktar*elmaspara) {
    
      const i = await db.add(`altıncıklar_${message.member.id}`, -miktar*elmaspara)
     db.add(`elmascıklar_${message.member.id}`, miktar)
     const aldıE2 = new Discord.RichEmbed()
     .setColor('RANDOM')
     .setDescription(`${client.emojis.get(client.emojiler.evet)} Başarıyla marketten **${miktar}** elmas aldınız\n Hesabınızdan eksilen altın miktarı: **${miktar*elmaspara}**`)
     .setTimestamp()
     message.channel.send(aldıE2)

} else if (altın = miktar*elmaspara) {
    
       const i = await db.add(`altıncıklar_${message.member.id}`, -miktar*elmaspara)
      db.add(`elmascıklar_${message.member.id}`, miktar)
     const aldıE = new Discord.RichEmbed()
     .setColor('RANDOM')
     .setDescription(`${client.emojis.get(client.emojiler.evet)} Başarıyla marketten **${miktar}** elmas aldınız\n Hesabınızdan eksilen altın miktarı: **${miktar*elmaspara}**`)
     .setTimestamp()
     message.channel.send(aldıE)
 }

}

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: [],
  permLevel: 0,
  kategori: "profil"
};

exports.help = {
  name: 'elmasal',
  description: 'Altınınızla elmas alıp marketten eşya satın alabilirsiniz.',
  usage: 'elmasal'
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {

 
  let x = /(-)/
  let user = message.mentions.users.first();

  if (!user) return message.reply('Kime elmas yollayacağını etiketlemen lazım!');
  if (user.bot === true) return message.reply('Elmas bir bota yollarsan sen zararlı çıkarsın!');
  
  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Yollayacağın miktarı yazman gerek!');

  if (user.id === message.author.id) return message.reply(`${client.emojis.get(client.emojiler.kendineParaYollama)} Kendine elmasmı yollayacaksın ciddimisin?`);

  if (mesaj.match(x)) return message.reply('Tek zeki sensin zaten!');
if (isNaN(args[1])) return message.channel.send("Lütfen bir sayı gir.")

    
    

  let elmas = await db.fetch(`elmascıklar_${message.author.id}`);
  let altın = await db.fetch(`altıncıklar_${message.author.id}`);
  let para = await db.fetch(`paracık_${message.author.id}`);


  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

 

  if (elmas < mesaj) {
    let bulunanP = await db.fetch(`elmascıklar_${message.author.id}`)
    message.channel.send(`${client.emojis.get(client.emojiler.paraGitmedi)} Yeterince elmasın bulunmuyor, sende olan elmas:  ${bulunanP === null  ? "0" : `${bulunanP}`}`)
} else if  (elmas > mesaj) {

  const embed = new Discord.RichEmbed()
  .setColor('RANDOM')
  .setDescription(`${client.emojis.get(client.emojiler.paraGitti)} ${user} Adlı kullanıcıya elmas yollandı, yollanılan miktar: ${mesaj}`)
  message.channel.send(embed)
  db.add(`elmascıklar_${user.id}`, mesaj)
  db.add(`elmascıklar_${message.author.id}`, -mesaj)
  

}
}

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['elmas-ver', 'elmasyolla'],
  permLevel: 0,
  kategori: "profil"
};

exports.help = {
  name: 'elmas-yolla',
  description: 'İstediğiniz kişiye elmas yollayabilirsiniz.',
  usage: 'elmas-yolla <@üye> <miktar>'
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {
  let u = message.mentions.users.first() || message.author;

    let balance = await db.fetch(`paracık_${u.id}`);

  let altin = await db.fetch(`altıncıklar_${u.id}`);
  let altinim;
  if (altin == null) altinim = '0'
  else altinim = ''+ altin +''

let elmas = await db.fetch(`elmascıklar_${u.id}`);
let maaş = await db.fetch(`meslek_${u.id}`);
let meslekA = await db.fetch(`meslekA_${u.id}`);
let pref = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

  const embed = new Discord.RichEmbed()



  .addField(':gem: Elmasın:', `${elmas === null ? "0" : `${elmas}`}`, true)
  .addField(`${client.emojis.get(`${client.emojiler.gold}`)} Altının:`, altinim, true)
  .addField(':dollar: Paran:', `${balance === null ? "0" : `${balance} TL`}`, true)
  .addField(`Meslek`, `Çalıştığı meslek: **${meslekA === null  ? "Bir meslekte çalışmıyorsunuz" : `${meslekA}`}**\nMaaş: **${maaş === null  ? "0" : `${maaş}`}** `)
  
  .setFooter(`Para ve meslek sahibi: ${u.tag} Komutu kullanan: ${message.author.tag}`)
  .setColor('RANDOM')

  message.channel.send(embed)

  const embed2 = new Discord.RichEmbed()
  .setDescription(`Aldığın eşyaları görmek istersen ${pref}çanta yazarak görebilirsin.`)
  .setColor('RANDOM')
  message.channel.send(embed2)
  }

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['param', 'paracıklarım', 'altınlarım', 'altınım', 'altıncıklarım', 'elmaslarım', 'elmasım', 'mesleğim', 'maaşım', 'işim', 'meslekim'],
  permLevel: 0,
  kategori: "profil"
};

exports.help = {
  name: 'paralarım',
  description: 'Olan paranızı, altınlarınızı ve elmaslarınızı gösterir',
  usage: 'paralarım'
};
const Discord = require('discord.js'),
      db = require('quick.db'),
      ms = require('parse-ms');

exports.run = async (bot, message, args) => {
    let cooldown = 1.728e+8, // 24 Часа
        amount = Math.floor(Math.random() * 10) + 200;      

    let lastDaily = await db.fetch(`lastDaily_${message.author.id}`);
    if (lastDaily !== null && cooldown - (Date.now() - lastDaily) > 0) {
        let timeObj = ms(cooldown - (Date.now() - lastDaily));
        

        const embed = new Discord.RichEmbed()
        .setTitle('Günlük Ödül!')
        .setColor('#FFBA4A')
        .setDescription(`Bunu zaten topladın lütfen bekleyin **${timeObj.hours} saat ${timeObj.minutes} dakika**!`)
        message.channel.send(embed);
        return
    } else {
  
 
  
        let meslekA = await db.fetch(`meslekA_${message.author.id}`);
        let meslek = await db.fetch(`meslek_${message.author.id}`);
        
      
   
        const Durum = await db.fetch(`bonus_${message.author.id}`);
      
        var tbns = ''
     
    //   if (tplnB == '1' || tplnB == '2' || tplnB == '3' || tplnB == '4' || tplnB === null || tplnB == '0') { var tbns = `0` }
      
  
        const embed = new Discord.RichEmbed()
        .addField('Topladın!', `Günlük Ödül: **${amount}TL**`)
        .addField(`Meslek`, `Çalıştığı meslek: **${meslek === null  ? "Meslek sahibi değil" : `${meslekA}`}**\nMaaş: **${meslek === null  ? "0" : `${meslek}`}**`)

        .setColor('#59FF4A')
        message.channel.send(embed);

        db.set(`lastDaily_${message.author.id}`, Date.now());

        db.add(`paracık_${message.author.id}`, amount);
  
        db.add(`paracık_${message.author.id}`, meslek === null  ? "0" : meslek);
      
    }
     

    
    
    
    
    
  
  
}
exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['paraçek','para-çek', 'günlüködül', 'günlük-ödül','hediye','günlük-hediye'],
  permLevel: 0,
  kategori: "profil"
};

exports.help = {
  name: 'günlük',
  description: 'Günlük maaşınızı verir.',
  usage: 'günlük',
   
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {

  let x = args[0]

  let user = message.mentions.users.first() || message.author;
  let boksE = await db.fetch(`boksE_${message.author.id}`);
  let kalem = await db.fetch(`kalem_${message.author.id}`);
  let kapışC = await db.fetch(`kapışC_${message.author.id}`);
  let rozet = await db.fetch(`rozet_${message.author.id}`);
  let para = await db.fetch(`paracık_${message.author.id}`);
  let elmas = await db.fetch(`elmascıklar_${message.author.id}`);
  let altın = await db.fetch(`altıncıklar_${message.author.id}`);

  //ROZET 
  let rozetA = await db.fetch(`elmascıklar_${message.author.id}`);
  let RozetS = -50;
  let rozetF = 50;

  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;


  try {
    
    if (!x) {
 
const e = new Discord.RichEmbed()
.setColor('RANDOM')
.setDescription(`${client.emojis.get(client.emojiler.paraROZET)} Rozeti: **50 ELMAS** (Satın Almak İçin: **${prefix}market rozet**)`)
message.channel.send(e)
      return
    }
    
    if (x === 'rozet') {

      if (rozet > 1) {
      const embed = new Discord.RichEmbed()
        .setDescription(`${client.emojis.get(client.emojiler.hayır)}Zaten sende rozet bulunuyor fazlasını ne yapacaksın?`)
    .setColor('RED')
      .setTimestamp()
      message.channel.send({embed})
    
    
  } else if (rozetA < rozetF) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Rozet satın almak için yeterli elmasın bulunuyor. \n Gerekli olan elmas: **${rozetF} ELMAS**.`)
    } else if  (rozetA > rozetF) {
message.channel.send(`${client.emojis.get(client.emojiler.paraROZET)} Rozetini başarıyla aldınız`)
db.set(`memberBadge6_${message.author.id}`, "https://cdn.discordapp.com/attachments/531535859594297364/533260601162465280/paraR.png")
db.add(`rozet_${message.author.id}`, 2)
db.add(`elmascıklar_${message.member.id}`, -50)
    
} else if  (rozetA = rozetF) {
  message.channel.send(`${client.emojis.get(client.emojiler.paraROZET)} Rozetini başarıyla aldınız`)
  db.set(`memberBadge6_${message.author.id}`, "https://cdn.discordapp.com/attachments/531535859594297364/533260601162465280/paraR.png")
  db.add(`rozet_${message.author.id}`, 2)
  db.add(`elmascıklar_${message.member.id}`, -50)
      }
      return
    }

    if (x === 'kalem') {

      if (kalem > 0) {
      const embed = new Discord.RichEmbed()
      .setDescription(`${client.emojis.get(client.emojiler.hayır)} Zaten sende kalem eldiveni bulunuyor fazlasını ne yapacaksın?`)
      .setColor('RED')
      .setTimestamp()
      message.channel.send({embed})
    
    
  } else if (para < 200) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Kalem satın almak için yeterli paran bulunuyor. \n Gerekli olan para: **250TL**.`)
    } else if  (para > 200) {
message.channel.send(`${client.emojis.get(client.emojiler.evet)} :pencil2: Kalem başarıyla aldınız`)
db.add(`kalem_${message.author.id}`, 2)
db.add(`paracık_${message.member.id}`, -200)

  } else if  (para = 200) {
    message.channel.send(`${client.emojis.get(client.emojiler.evet)} :pencil2: Kalem başarıyla aldınız`)
    db.add(`kalem_${message.author.id}`, 2)
    db.add(`paracık_${message.member.id}`, -200)
        }
      return
    }
      
    } catch(err) {
      
    }

    
}

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: [],
  permLevel: 0,
  kategori: "profil"
};

exports.help = {
  name: 'market',
  description: 'eşya satın alabilirsiniz gösterir.',
  usage: 'market'
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {

  let x = args[0]

  // let user = message.mentions.users.first();

  let elmas = await db.fetch(`elmascıklar_${message.author.id}`);
  let altın = await db.fetch(`altıncıklar_${message.author.id}`);
  let para = await db.fetch(`paracık_${message.author.id}`);

  let meslek = await db.fetch(`meslek_${message.author.id}`);
  let meslekA = await db.fetch(`meslekA_${message.author.id}`);
  
  let madenciA = ('Madenci'); 
  let çiftçiA = ('Çiftçi'); 
  let tamirciA = ('Tamirci'); 
  let emlakçıA = ('Emlakçı'); 
  let mimarA = ('Mimar'); 
  let doktorA = ('Doktor'); 

  let çiftçiP = ('500')

  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

  try {
    
    if (!x) {
 
const e = new Discord.RichEmbed()
.setColor('RANDOM')
.setTitle('Meslek Listesi')
.addField(`Madenci`, `Meslek sahibi olmak için gerekli para: **1000TL**\nKazanç: 24 Saat'te bir 300TL\nMeslek sahibi olmak için **${prefix}meslek madenci**`)
.addField(`Çiftçi`,  `Meslek sahibi olmak için gerekli para: **2000TL**\nKazanç: 24 Saat'te bir 500TL\nMeslek sahibi olmak için **${prefix}meslek çiftçi**`)
.addField(`Tamirci`,  `Meslek sahibi olmak için gerekli para: **3000TL**\nKazanç: 24 Saat'te bir 700TL\nMeslek sahibi olmak için **${prefix}meslek tamirci**`)
.addField(`Emlakçı`,  `Meslek sahibi olmak için gerekli para: **5000TL**\nKazanç: 24 Saat'te bir 900TL\nMeslek sahibi olmak için **${prefix}meslek emlakçı**`)
.addField(`Mimar`,  `Meslek sahibi olmak için gerekli para: **10000TL** \nKazanç: 24 Saat'te bir 1200TL\nMeslek sahibi olmak için **${prefix}meslek mimar**`)
.addField(`Doktor`,  `Meslek sahibi olmak için gerekli para: **20000TL**\nKazanç: 24 Saat'te bir 1500TL\nMeslek sahibi olmak için **${prefix}meslek doktor**`)

message.channel.send(e)

const e2 = new Discord.RichEmbed()
.setColor('RANDOM')
.addField(`Mesleğin:`, `Çalıştığı meslek: ${meslekA === null  ? "Bir meslekte çalışmıyorsunuz" : `${meslekA}`}`)
.setTimestamp()
message.channel.send(e2)

      return
    }
    
    if (x === 'madenci') {

     
    if (meslek > 0) {
      message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Sen bu mesleği önceden olmuşsun zaten.`)

    } else if (meslek > 0) {
      const embed = new Discord.RichEmbed()
        .setDescription(`${client.emojis.get(client.emojiler.hayır)} Zaten madenci mesleğindesin`)
    .setColor('RED')
      .setTimestamp()
      message.channel.send({embed})
  
  } else if (para < 1000) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Madenci olmak için yeterli paran bulunuyor. \n Gerekli olan para: **1000TL**.`)
    } else if  (para > 1000) {
      const madenciE = new Discord.RichEmbed()
      .setColor('RANDOM')
      .setDescription(`${client.emojis.get(client.emojiler.evet)} Yeni mesleğiniz **madenci**\n${client.emojis.get(client.emojiler.konfeti)} Mesleğinde başarılar.`)
      .setTimestamp()
     message.channel.send(madenciE)
     db.add(`meslek_${message.author.id}`, 300)
     db.add(`paracık_${message.author.id}`, -1000)
     db.set(`meslekA_${message.author.id}`, madenciA)

    } 
      return
    }

    if (x === 'çiftçi') {
      db.add(`meslek_${message.author.id}`, 1)

      if (meslek < 1) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Lütfen meslekleri sırasıyla ol\n **${prefix}meslek** Yazarak mesleğini ve sırayı görebilirsin`)
        db.add(`meslek_${message.author.id}`, -1)

       } else if (meslek > 301) {
        db.add(`meslek_${message.author.id}`, -1)
          message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Sen bu mesleği önceden olmuşsun zaten.`)
      
      } else if (meslek > 499) {
        const embed = new Discord.RichEmbed()
        .setDescription(`${client.emojis.get(client.emojiler.hayır)} Zaten çiftçi mesleğindesin`)
        .setColor('RED')
        .setTimestamp()
        message.channel.send({embed})
        db.add(`meslek_${message.author.id}`, -1)
      
  
  
      
    } else if (para < 2000) {
      db.add(`meslek_${message.author.id}`, -1)   
      message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Çiftçi olmak için yeterli paran bulunuyor. \n Gerekli olan para: **2000TL**.`)
      } else if  (para > 2000) {
        const madenciE = new Discord.RichEmbed()
        .setColor('RANDOM')
        .setDescription(`${client.emojis.get(client.emojiler.evet)} Yeni mesleğiniz **çiftçi**\n${client.emojis.get(client.emojiler.konfeti)} Mesleğinde başarılar.`)
        .setTimestamp()
       message.channel.send(madenciE)
       db.delete(`meslekA_${message.author.id}`)
       db.add(`meslek_${message.author.id}`, 200)
       db.add(`paracık_${message.author.id}`, -2000)
       db.set(`meslekA_${message.author.id}`, çiftçiA)
       db.add(`meslek_${message.author.id}`, -1)
  
      }
    
      return
    }

    if (x === 'tamirci') {
      db.add(`meslek_${message.author.id}`, 1)

      if (meslek < 302) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Lütfen meslekleri sırasıyla ol\n **${prefix}meslek** Yazarak mesleğini ve sırayı görebilirsin`)
        db.add(`meslek_${message.author.id}`, -1)

       } else if (meslek > 501) {
        db.add(`meslek_${message.author.id}`, -1)
          message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Sen bu mesleği önceden olmuşsun zaten.`)
      
      } else if (meslek > 699) {
        const embed = new Discord.RichEmbed()
        .setDescription(`${client.emojis.get(client.emojiler.hayır)} Zaten tamirci mesleğindesin`)
        .setColor('RED')
        .setTimestamp()
        message.channel.send({embed})
        db.add(`meslek_${message.author.id}`, -1)
      
  
  
      
    } else if (para < 3000) {
      db.add(`meslek_${message.author.id}`, -1)   
      message.channel.send(`${client.emojis.get(client.emojiler.hayır)} tamirci olmak için yeterli paran bulunuyor. \n Gerekli olan para: **3000TL**.`)
      } else if  (para > 3000) {
        const madenciE = new Discord.RichEmbed()
        .setColor('RANDOM')
        .setDescription(`${client.emojis.get(client.emojiler.evet)} Yeni mesleğiniz **tamirci**\n${client.emojis.get(client.emojiler.konfeti)} Mesleğinde başarılar.`)
        .setTimestamp()
       message.channel.send(madenciE)
       db.delete(`meslekA_${message.author.id}`)
       db.add(`meslek_${message.author.id}`, 200)
       db.add(`paracık_${message.author.id}`, -3000)
       db.set(`meslekA_${message.author.id}`, tamirciA)
       db.add(`meslek_${message.author.id}`, -1)
  
      }
    
      return
    }

    if (x === 'emlakçı') {
      db.add(`meslek_${message.author.id}`, 1)

      if (meslek < 302) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Lütfen meslekleri sırasıyla ol\n **${prefix}meslek** Yazarak mesleğini ve sırayı görebilirsin`)
        db.add(`meslek_${message.author.id}`, -1)

      } else if (meslek < 502) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Lütfen meslekleri sırasıyla ol\n **${prefix}meslek** Yazarak mesleğini ve sırayı görebilirsin`)
        db.add(`meslek_${message.author.id}`, -1)

       } else if (meslek > 901) {
        db.add(`meslek_${message.author.id}`, -1)
          message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Sen bu mesleği önceden olmuşsun zaten.`)
      
      } else if (meslek > 899) {
        const embed = new Discord.RichEmbed()
        .setDescription(`${client.emojis.get(client.emojiler.hayır)} Zaten emlakçı mesleğindesin`)
        .setColor('RED')
        .setTimestamp()
        message.channel.send({embed})
        db.add(`meslek_${message.author.id}`, -1)
      
  
  
      
    } else if (para < 5000) {
      db.add(`meslek_${message.author.id}`, -1)   
      message.channel.send(`${client.emojis.get(client.emojiler.hayır)} emlakçı olmak için yeterli paran bulunuyor. \n Gerekli olan para: **5000TL**.`)
      } else if  (para > 5000) {
        const emlakçıE = new Discord.RichEmbed()
        .setColor('RANDOM')
        .setDescription(`${client.emojis.get(client.emojiler.evet)} Yeni mesleğiniz **emlakçı**\n${client.emojis.get(client.emojiler.konfeti)} Mesleğinde başarılar.`)
        .setTimestamp()
       message.channel.send(emlakçıE)
       db.delete(`meslekA_${message.author.id}`)
       db.add(`meslek_${message.author.id}`, 200)
       db.add(`paracık_${message.author.id}`, -5000)
       db.set(`meslekA_${message.author.id}`, emlakçıA)
       db.add(`meslek_${message.author.id}`, -1)
  
      }
    
      return
    }


    if (x === 'mimar') {
      db.add(`meslek_${message.author.id}`, 1)

      if (meslek < 302) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Lütfen meslekleri sırasıyla ol\n **${prefix}meslek** Yazarak mesleğini ve sırayı görebilirsin`)
        db.add(`meslek_${message.author.id}`, -1)

      } else if (meslek < 502) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Lütfen meslekleri sırasıyla ol\n **${prefix}meslek** Yazarak mesleğini ve sırayı görebilirsin`)
        db.add(`meslek_${message.author.id}`, -1)

      } else if (meslek < 702) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Lütfen meslekleri sırasıyla ol\n **${prefix}meslek** Yazarak mesleğini ve sırayı görebilirsin`)
        db.add(`meslek_${message.author.id}`, -1)

       } else if (meslek > 1201) {
        db.add(`meslek_${message.author.id}`, -1)
          message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Sen bu mesleği önceden olmuşsun zaten.`)
      
      } else if (meslek > 1199) {
        const embed = new Discord.RichEmbed()
        .setDescription(`${client.emojis.get(client.emojiler.hayır)} Zaten mimar mesleğindesin`)
        .setColor('RED')
        .setTimestamp()
        message.channel.send({embed})
        db.add(`meslek_${message.author.id}`, -1)
      
  
  
      
    } else if (para < 10000) {
      db.add(`meslek_${message.author.id}`, -1)   
      message.channel.send(`${client.emojis.get(client.emojiler.hayır)} mimar olmak için yeterli paran bulunuyor. \n Gerekli olan para: **10000TL**.`)
      } else if  (para > 10000) {
        const mimarE = new Discord.RichEmbed()
        .setColor('RANDOM')
        .setDescription(`${client.emojis.get(client.emojiler.evet)} Yeni mesleğiniz **mimar**\n${client.emojis.get(client.emojiler.konfeti)} Mesleğinde başarılar.`)
        .setTimestamp()
       message.channel.send(mimarE)
       db.delete(`meslekA_${message.author.id}`)
       db.add(`meslek_${message.author.id}`, 300)
       db.add(`paracık_${message.author.id}`, -10000)
       db.set(`meslekA_${message.author.id}`, mimarA)
       db.add(`meslek_${message.author.id}`, -1)
  
      }
    
      return
    }

    if (x === 'doktor') {
      db.add(`meslek_${message.author.id}`, 1)

      if (meslek < 302) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Lütfen meslekleri sırasıyla ol\n **${prefix}meslek** Yazarak mesleğini ve sırayı görebilirsin`)
        db.add(`meslek_${message.author.id}`, -1)

      } else if (meslek < 502) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Lütfen meslekleri sırasıyla ol\n **${prefix}meslek** Yazarak mesleğini ve sırayı görebilirsin`)
        db.add(`meslek_${message.author.id}`, -1)

      } else if (meslek < 702) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Lütfen meslekleri sırasıyla ol\n **${prefix}meslek** Yazarak mesleğini ve sırayı görebilirsin`)
        db.add(`meslek_${message.author.id}`, -1)

      } else if (meslek < 902) {
        message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Lütfen meslekleri sırasıyla ol\n **${prefix}meslek** Yazarak mesleğini ve sırayı görebilirsin`)
        db.add(`meslek_${message.author.id}`, -1)

       } else if (meslek > 1501) {
        db.add(`meslek_${message.author.id}`, -1)
          message.channel.send(`${client.emojis.get(client.emojiler.hayır)} Sen bu mesleği önceden olmuşsun zaten.`)
      
      } else if (meslek > 1499) {
        const embed = new Discord.RichEmbed()
        .setDescription(`${client.emojis.get(client.emojiler.hayır)} Zaten doktor mesleğindesin`)
        .setColor('RED')
        .setTimestamp()
        message.channel.send({embed})
        db.add(`meslek_${message.author.id}`, -1)
      
  
  
      
    } else if (para < 20000) {
      db.add(`meslek_${message.author.id}`, -1)   
      message.channel.send(`${client.emojis.get(client.emojiler.hayır)} doktor olmak için yeterli paran bulunuyor. \n Gerekli olan para: **20000TL**.`)
      } else if  (para > 20000) {
        const doktorE = new Discord.RichEmbed()
        .setColor('RANDOM')
        .setDescription(`${client.emojis.get(client.emojiler.evet)} Yeni mesleğiniz **doktor**\n${client.emojis.get(client.emojiler.konfeti)} Mesleğinde başarılar.`)
        .setTimestamp()
       message.channel.send(doktorE)
       db.delete(`meslekA_${message.author.id}`)
       db.add(`meslek_${message.author.id}`, 300)
       db.add(`paracık_${message.author.id}`, -20000)
       db.set(`meslekA_${message.author.id}`, doktorA)
       db.add(`meslek_${message.author.id}`, -1)
  
      }
    
      return
    }


      
    } catch(err) {
      
    }

    
}

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: [],
  permLevel: 0,
  kategori: "profil"
};

exports.help = {
  name: 'meslek',
  description: 'Meslek sahibi olarak daha hızlı para kazanabilirsiniz',
  usage: 'meslek'
};
const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, message, args) => {

 
  let x = /(-)/
  
  let user = message.mentions.users.first();

  if (!user) return message.reply('Kime para yollayacağını etiketlemen lazım!');
  if (user.bot === true) return message.reply('Parayı bir bota yollarsan sen zararlı çıkarsın!');
  
  let mesaj = args.slice(1).join(' ');
  if (!mesaj) return message.reply('Yollayacağın miktarı yazman gerek!');

  if (user.id === message.author.id) return message.reply(`${client.emojis.get(client.emojiler.kendineParaYollama)} Kendine paramı yollayacaksın ciddimisin?`);


if (isNaN(args[1])) return message.channel.send("Lütfen bir sayı gir.")
if (mesaj.match(x)) return message.reply('Tek zeki sensin zaten!');
    
    

  let elmas = await db.fetch(`elmascıklar_${message.author.id}`);
  let altın = await db.fetch(`altıncıklar_${message.author.id}`);
  let para = await db.fetch(`paracık_${message.author.id}`);


  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

 

  if (para < mesaj) {
    let bulunanP = await db.fetch(`paracık_${message.author.id}`)
    message.channel.send(`${client.emojis.get(client.emojiler.paraGitmedi)} Yeterince paran bulunmuyor, sende olan para:  ${bulunanP === null  ? "0" : `${bulunanP}`}`)
} else if  (para > mesaj) {

  const embed = new Discord.RichEmbed()
  .setColor('RANDOM')
  .setDescription(`${client.emojis.get(client.emojiler.paraGitti)} ${user} Adlı kullanıcıya para yollandı, yollanılan miktar: ${mesaj}`)
  message.channel.send(embed)
  db.add(`paracık_${user.id}`, mesaj)
  db.add(`paracık_${message.author.id}`, -mesaj)
  

}
}

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['para-ver', 'parayolla'],
  permLevel: 0,
  kategori: "profil"
};

exports.help = {
  name: 'para-yolla',
  description: 'İstediğiniz kişiye para yollayabilirsiniz.',
  usage: 'para-yolla <@üye> <miktar>'
};
const Discord = require('discord.js');
const Jimp = require('jimp');
const db = require('quick.db'),
      ms = require('parse-ms');

exports.run = async (bot, message, args) => {
  
   if(message.guild.id !== '627204002676736031') return message.channel.send('Bu komut sadece \`DESTEK\` sunucumda çalışmaktadır.')
 
  
    

     const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${bot.user.id}/check?userId=${message.author.id}`)
.set("Authorization", bot.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if (check == 1) {
    
    if(message.member.roles.has('658196534906716171') === true) return message.channel.send(`Zaten \`Partner\` rolün bulunuyor fazlasını ne yapacaksın`)

 
  const embed = new Discord.RichEmbed()
  .setColor('RANDOM')
  .setDescription('``Partner`` rolünüzü aldınız\nBotu oyladığınız için teşekkürler.')
.setTimestamp()
  message.channel.send(embed)
  message.member.addRole('658196534906716171')

    } else {
let embed = new Discord.RichEmbed()
      .setTitle('HATA')
      .setColor('RANDOM')
      .setDescription(`${bot.emojis.get(bot.emojiler.hayır)} **Hata**, Partner rolünü almak için \`12\` saat aralıkla **[BURADAN](https://discordbots.org/bot/${bot.user.id}/vote)**  botu oylamanız gerekmektedir. Onayladıktan sonra sisteme geçmesi **1-4** dakikayı bulabilir, lütfen bekleyin. `)
    message.channel.send(embed)
      return }});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['partner','partner-rol'],

  kategori: "kullanıcı",
    permLevel: 0,
};

exports.help = {
  name: 'partner',
  description: 'Rol almanızı sağlar',
  usage: 'partner'
};



const Discord = require('discord.js');
const client = new Discord.Client();

exports.run = async (client, message) => {
  
  const db = require('quick.db');
  
  var s = 'tr'
  var a = client.commands.get('ping').help.name
    if(db.has(`dil_${message.guild.id}`) === true) {
        var s = 'en'
        var a = client.commands.get('ping').help.enname
    }
    const dil = client[s]
    const o = a
    const msg = message
  
  var m = await message.channel.send(`${dil.wait}`)

  setTimeout(() => {
    const pingozel = new Discord.RichEmbed()
 .setColor(client.ayarlar.renk)
        .addField(`${dil.stat.pingshead}`, `${dil.stat.pings}`.replace("{ping1}", new Date().getTime() - message.createdTimestamp).replace("{ping2}", client.ping), true)
       
        .setAuthor(client.user.username, client.user.avatarURL)
    return m.edit(pingozel)
     }, 3000)
    
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['gecikme', 'gecikme-süresi'],
  permLevel: 0,
  kategori: "genel",
  category: "general"
};

exports.help = {
  name: 'ping',
  description: 'Botun gecikme süresini gösterir.',
  usage: 'ping',
  enname: 'ping',
  endescription: 'The bot indicates the delay time.',
  enusage: 'ping'
};
var Jimp = require('jimp');
const Discord = require('discord.js');
exports.run = (client, message, params) => {

      const snekfetch = require("snekfetch");
snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
.set("Authorization", client.ayarlar.dbltoken)
.then(response => {
var check = response.body.voted;
if(check == 1) {
  let user = message.mentions.users.first() || message.author
  
      Jimp.read(user.avatarURL, function (err, image){
          image.resize(295, 295)
          if(err) return message.channel.send('Bir hata oluştu: ``'+err+'``\n Lütfen yapımcıya bildirin.');
          image.pixelate(10, 10, 10).write('./x/pixel.png');
          setTimeout(() => {
            message.channel.send({file: './x/pixel.png'});
                  message.react('617413726768988160')
          }, 500);
      });
  } else {
        let embed = new Discord.RichEmbed()
              .setTitle('HATA')
              .setColor('RANDOM')
              .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
            message.channel.send(embed)
              return }})
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["invert"],
  permLevel: 0,
  kategori: "efekt"
};

exports.help = {
  name: 'pixel',
  description: 'Avatarınızı pixelleştirir.',
  usage: 'pixel ve pixel <@kullanıcı>'
};
const Discord = require('discord.js')
const Pokedex = require('pokedex-api')
const pokedex = new Pokedex()
 
exports.run = async (client, message, args) => {
  
  const db = require('quick.db');
  
 
  
        if (!args[0]) {
                const embed = new Discord.RichEmbed()
                        .setDescription('Lütfen bir pokemon adı veya id girin')
                        .setColor("RANDOM")
                message.channel.send({embed})
                return
        }
       
        try {
                const pokeponum = args.join(" ")
                const pokemon = await pokedex.getPokemonByName(encodeURIComponent(pokeponum));
                const pokepon = pokemon[0]
                const embed = new Discord.RichEmbed()
                        .setAuthor(`${pokepon.name} | Pokemon bilgileri`, `https://i.imgur.com/5NO19vd.png`)
                        .addField('Pokédex Numarası', pokepon.number)
                        .addField('Tür', pokepon.species)
                        .addField('Tip', pokepon.types.join(', '))
                        .addField('Normal Yetenekler', pokepon.abilities.normal.join(', ') || 'Bulunamadı')
                        .addField('Gizli Yetenekler', pokepon.abilities.hidden.join(', ') || 'Bulunamadı')
                        .addField('Yumurta Grubu', pokepon.eggGroups.join(', '))
                        .addField('Cinsiyet', pokepon.gender.length ? `Erkek: %${pokepon.gender[0]} | Kadın: %${pokepon.gender[1]}` : 'Bulunamadı')
                        .addField('Boy', pokepon.height)
                        .addField('Ağırlık', pokepon.weight)
                        .setThumbnail(pokepon.sprite)
                        .setColor("RANDOM")
                message.channel.send({embed})
                message.react('617413726768988160')
        } catch (err) {
                const embed = new Discord.RichEmbed()
                        .setDescription('Pokemon bulunamadı')
                        .setColor("RANDOM")
                message.channel.send({embed})
        }
}
 
exports.conf = {
        enabled: true,
        guildOnly: false,
        aliases: ['pokedex'],
        permLevel: 0,
        kategori: 'eğlence',
}
 
exports.help = {
        name: 'pokemon',
        description: 'Belirtilen Pokemon hakkında bilgi verir.',
        usage: 'pokemon <pokemon ismi/pokemon id numarası>',

}
const db = require('quick.db');

exports.run = (client, message, args, func) => {
  
  if(!message.member.hasPermission("ADMINISTRATOR")) return message.channel.send(`Bu komutu kullanabilmek için "\`Yönetici\`" yetkisine sahip olmalısın.`);
  
  let preffix = db.fetch(`prefix_${message.guild.id}`)
  
    if(args[0] === "sıfırla") {
    if(!preffix) {
      message.channel.send(`Ayarlanmayan şeyi sıfırlayamazsın.`)
      return
    }
    
    db.delete(`prefix_${message.guild.id}`)
    message.channel.send(`Başarılı. Mevcut prefix \`!!\``)
            message.react('617413726768988160')
    return
  }
  
  if (!args[0])
    return message.channel.send(`Bir prefix girmelisin.`)
  db.set(`prefix_${message.guild.id}`, args[0])
    message.channel.send(`Prefix başarıyla \`${args[0]}\` olarak ayarlandı.`)
        message.react('617413726768988160')
  
};

exports.conf = {
    enabled: true,
    guildOnly: true,
    aliases: ['prefix-ayarla'],
    kategori: 'ayarlar',
    permLevel: 3
};
  
  exports.help = {
    name: 'prefix',
    description: 'Bota eklenmesini istediğiniz şeyi tavsiye etmenizi sağlar',
    usage: 'prefix <prefix>'
};
const Discord = require('discord.js');
const client = new Discord.Client();

exports.run = async (client, message, args) => {
  
  const db = require('quick.db');
  
  var s = 'tr'
  var a = client.commands.get('premium').help.name
  var header = "Premium Nasıl Aktif Edilir? (Ücretsiz)"
  var msg = "Sunucunuzda botun kullandığınız her komutu sunucunuza puan kazandırmaktadır. Sunucunuz 50 puana ulaştığında Premium otomatik olarak aktif edilecek, sunucu sahibine özel mesaj olarak ve Sunucu seviyesini 50 puan yapan 50 puan için son komutun kullanıldığı kanala bildirilecektir."
  var n = "Sunucu puanını nereden göreceğim?"
  var g = "`!!premium puan` yazarak görebilirsiniz."
  var k = "Premium Aktif Sunucular"
  var l = "`!!premium liste` yazarak görebilirsiniz."
    if(db.has(`dil_${message.guild.id}`) === true) {
        var s = 'en'
        var a = client.commands.get('premium').help.enname
        var header = "How to Activate Premium? (Free)"
        var msg = "Every command you use on your server gives you points for your server. When your server reaches 50 points, Premium will be automatically activated, you will be notified as a private message to the server owner and to the channel where the last command is used for 50 points with 50 points."
        var n = "Where will I see the server score?"
        var g = "You can see by writing `!!premium point`."
        var k = "Premium Active Servers"
        var l = "You can see by writing `!!premium list`."
    }
    const dil = client[s]
    const o = a
  
var i = args.slice(0).join(' ');
    let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  let str = ""
 for(var a = 0; a < client.guilds.size; a++) {
  if (db.has(`premium_${client.guilds.array()[a].id}`)) {
      str += `${client.guilds.array()[a].name} \n`.replace(`${client.user.username}`, `**${client.user.username}**`)
  }
}
  
if (!i) {
  
let embed = new Discord.RichEmbed()
.setColor("RANDOM")
.setAuthor(`${client.user.username} - Premium`, client.user.avatarURL)
.addField( "Premium Nasıl Aktif Edilir? (Ücretsiz)", "Sunucunuzda botun kullandığınız her komutu sunucunuza puan kazandırmaktadır. Sunucunuz 50 puana ulaştığında Premium otomatik olarak aktif edilecek, sunucu sahibine özel mesaj olarak ve Sunucu seviyesini 50 puan yapan 50 puan için son komutun kullanıldığı kanala bildirilecektir.")
.addField('Sunucu puanını nereden göreceğim?',  `${prefix}premium puan yazarak görebilirsiniz.`)
.addField("Premium Aktif Sunucular", `${prefix}premium liste yazarak görebilirsiniz.`)
//.addField("Premium Durumu", db.has(`premium_${message.guild.id}`) ? db.fetch(`premium_${message.guild.id}`).replace("aktif", "") : "Sunucu puanı 50 puana ulaşmadığı için De-Aktif.")
message.channel.send(embed)
  return;
}
  
  if (i === "liste" || i === "list") {
    let embed = new Discord.RichEmbed()
.setColor("RANDOM")
.setAuthor(`${client.user.username} - Premium`, client.user.avatarURL)
.addField("Premium Aktif Sunucular", str)
message.channel.send(embed)
    return;
  }
  
  if (i === "puan" || i === "point") {
    let puan = await db.fetch(`sunucuxp_${message.guild.id}`)
    let embed = new Discord.RichEmbed()
.setColor("RANDOM")
.setAuthor(`${client.user.username} - Premium`, client.user.avatarURL)
.setDescription(`Premium puan: **${puan > 50 ? '50' : puan}/50**\n Premium: **${puan < 50 ? 'Aktif değil' : 'Aktif'}**`)
message.channel.send(embed)
    return;
  }
  
  if (i === "aç" || i === "aktif") {
    
    if (message.author.id !== client.ayarlar.official_sahip) return;
 
    var arr = ``
    if(!args[2]) { var arr = message.guild.id } else { var arr = args[2] }
    
    db.set(`premium_${arr}`, "aktif")
    db.set(`sunucuxp_${arr}`, 50)
    
    let embed = new Discord.RichEmbed()
.setColor("RANDOM")
.setAuthor(`${client.user.username} - Premium`, client.user.avatarURL)
.setDescription("Premium mod bu sunucu için başarıyla Aktif edildi!")
message.channel.send(embed)
    
  }
  
  if (i === "kapat" || i === "deaktif" || i === "de-aktif") {
    
    if (message.author.id !== client.ayarlar.official_sahip) return;
    
    db.delete(`premium_${message.guild.id}`)
    db.delete(`sunucuxp_${message.guild.id}`)
    
    let embed = new Discord.RichEmbed()
.setColor("RANDOM")
.setAuthor(`${client.user.username} - Premium`, client.user.avatarURL)
.setDescription("Premium mod bu sunucu için başarıyla De-Aktif edildi!")
message.channel.send(embed)
    
  }
  
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['premium-bilgi'],
  permLevel: 0,
  kategori: "genel",
};

exports.help = {
  name: 'premium',
  description: 'Premium hakkında bilgi verir. (Ücretsiz)',
  usage: 'premium',
};
const qrcode = require("qrcode");
const tempy = require("tempy");
const Discord = require('discord.js');
exports.run = async (client, message, args) => {
  const snekfetch = require("snekfetch");
  snekfetch.get(`https://discordbots.org/api/bots/${client.user.id}/check?userId=${message.author.id}`)
  .set("Authorization", client.ayarlar.dbltoken)
  .then(response => {
  var check = response.body.voted;
  if(check == 1) {
    const qrOutput = tempy.file({ extension: "png" });
    message.channel.startTyping();
    if (args.length > 0) {
        qrcode.toFile(qrOutput, args.join(" "), { margin: 1 }, (error) => {
            if (error) throw new Error(error);
            message.channel.stopTyping();
            message.channel.send({
                files: [{
                    attachment: qrOutput,
                    name: "qr.png"
                }]
            });
      
        });
    }else{
        message.channel.stopTyping();
        message.reply("Bir QR kodu oluşturmak için bir argüman girmeniz gerekir!");
            
    }
  } else {
    let embed = new Discord.RichEmbed()
          .setTitle('HATA')
          .setColor('RANDOM')
          .setDescription(`${client.emojis.get(client.emojiler.hayır)} **Hata**, bu komutu kullanmak için **12 saat aralıkla** **[BURADAN](https://discordbots.org/bot/${client.user.id}/vote)**  botu oylamanız gerekmektedir. Onaylanması **1-4** dakikayı bulabilir, lütfen bekleyin. `)
        message.channel.send(embed)
          return }});
  }
 
exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ["qrkod","qr"],
    kategori: 'eğlence',
    permLevel: 0
};

exports.help = {
    name : "qr", 
    usage: "qrkod <yazı>",
    description: "qrkod"
};
const request = require('request-promise-native');

exports.run = async (Bastion, message, args) => {
  try {
    if (args.length < 1) {

      return message.reply("<:ak:617145990742278144> Lütfen GİF'in ne hakkında olacağını belirtin; ``!!rastgelegif <atılacak gif ismi>``");
    }

    let options = {
      url: 'http://api.giphy.com/v1/gifs/search',
      qs: {
        q: encodeURI(args.join('+')),
        api_key: 'dc6zaTOxFJmzC',
        limit: 10,
        offset: 0
      },
      json: true
    };

    let response = await request(options);

    if (response.data.length) {
      message.channel.send({
        embed: {
          color: 15105570,
          image: {
            url: response.data[Math.floor(Math.random() * response.data.length)].images.original.url
          },
        }
      }).catch(e => {
        console.log(e);
      });
    }
    else {
      return Bastion.emit('hata', '', Bastion.i18n.error(message.guild.language, 'bulunamadı', 'görsel'), message.channel);
    }
  }
  catch (e) {
    if (e.response) {
      return Bastion.emit('hata', e.response.statusCode, e.response.statusMessage, message.channel);
    }
    console.log(e);
  }
};

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['rastgele-gif','rast-gele-gif'],
    kategori: 'eğlence',
  permLevel: 0
};

exports.help = {
  name: 'rastgelegif',
  description: "Mesajınızla ilgili gifleri Giphy'da aratır.",
  usage: 'rastgelegif <aranacak gif>'
};
const {RichEmbed} = require("discord.js");
//const ayarlar = require('../ayarlar.json')// [package required: discord.js]
exports.run = async (client, message, args, level) => {
  //if(message.author.id !== "486817385051979786") return message.reply(`bu komutu sadece Bot Sahibi kullanabilir!`);
  // EMBED
  let embed = new RichEmbed()
  .setColor("RANDOM")
  .setTitle("» Bot yeniden başlatılıyor...")
  await message.channel.send(embed); // send the embed
  // unload all commands before shutting down
  
  console.log("Bot yeniden başlıyor...");

  // you can always leave out this code // (cmd part)
  client.commands.forEach( async cmd => {
    await client.unloadCommand(cmd);
  }); // end of cmd function

  // shut down the bot
  process.exit(1);
}; // end of code

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["reeboot", "reset", "yenile", "yeniden-başlat"],
  permLevel: 5,
    kategori: "yapımcı",
 
};

exports.help = {
  name: "reboot",
  description: "Botu yeniden başlatır.",
  usage: "reboot",
 
};
const Discord = require('discord.js')
//const ayarlar = require('../ayarlar.json')

exports.run = (client, message, args) => {
  
  //if (!message.member.hasPermission("MANAGE_MESSAGES")) return message.reply(`Bu komutu kullanabilmek için **Mesajları Yönet** iznine sahip olmalısın!`);

  const db = require('quick.db');
  

  
	const members = message.guild.members.filter(member => member.user.presence.game && /(discord|http|.com|.net|.org|invite|İnstagram|Facebook|watch|Youtube|youtube|facebook|instagram)/g.test(member.user.presence.game.name));
	const memberss = message.guild.members.filter(member => member.user.username && /(discord|http|.com|.net|.org|invite|İnstagram|Facebook|watch|Youtube|youtube|facebook|instagram)/g.test(member.user.username));
	const embed = new Discord.RichEmbed()
		.addField("Oynuyor Mesajı Reklam İçeren Kullanıcılar", members.map(member => `${member} = ${member.user.presence.game.name}`).join("\n") || "Kimsenin Oynuyor Mesajı Reklam İçermiyor")
		.addField("Kullanıcı Adı Reklam İçeren Kullanıcılar", memberss.map(member => `${member} = ${member.user.username}`).join("\n") || "Kimsenin kullanıcı adı reklam içermiyor.")
		.setColor("RANDOM")
	message.channel.send({embed})
        message.react('617413726768988160')
}

exports.conf = {
	enabled: true,
	guildOnly: true,
	aliases: ['reklam-ara', 'reklamara', 'reklamtaraması'],
	permLevel: 2,
    kategori: "moderasyon",
}

exports.help = {
	name: 'reklam-taraması',
	description: 'Kullanıcıların oynuyor mesajlarındaki ve kullanıcı adlarındaki reklamları tarar.',
	usage: 'reklam-taraması',
 
}

const Discord = require('discord.js')
//const ayarlar = require('../ayarlar.json')

exports.run = (client, message, args) => {
  
 //if(message.author.id !== "486817385051979786") return message.reply(`bu komutu sadece Bot Sahibi kullanabilir!`);

  let command;
  if (client.commands.has(args.slice(0).join(' '))) {
    command = args.slice(0).join(' ');
  } else if (client.aliases.has(args.slice(0).join(' '))) {
    command = client.aliases.get(args.slice(0).join(' '));
  }
  if (!args[0]) return message.reply("Bir komut ismi yazmalısın!")
  if (!command) {
	return message.reply("Botta `" + args.slice(0).join(' ') + "` isminde bir komut bulunmuyor!");
  } else {
    message.channel.send("`" + command + "` ismindeki komut yeniden başlatılıyor...")
      .then(m => {
        client.reload(command)
          .then(() => {
            m.edit("`" + command + "` ismindeki komut başarıyla yeniden başlatıldı!");
          })
          .catch(e => {
            m.edit(`Komutlar klasöründe \`${command}.js\` isminde bir dosya bulunamadı!`);
          });
      });
  }
    
};

exports.conf = {
	enabled: true,
	guildOnly: true,
	aliases: [],
	permLevel: 5,
  kategori: "yapımcı",
}

exports.help = {
	name: 'reload',
  category: 'admin',
	description: 'Belirtilen bir komutu yeniden başlatır.',
	usage: 'reload <komut adı>',

}

const { Canvas } = require("canvas-constructor");
 
const zoomfactor = 10;
const reactions = ["⬅", "➡", "⬆", "⬇", "✅", "🔏", "🖋"];
let channels = [];
 
module.exports.run = (bot, message, args) => {
    if (channels.includes(message.channel.id)) {
        message.reply("Her kanalda sadece bir resim yapılabilir!");
        return;
    }
    var size;
    if (+args[0] >= 5 && +args[0] <= 50) {
        size = +args[0];
    } else {
        message.reply("Boyut 5 ile 50 arasında olmalıdır!");
        return;
    }
    message.channel.send("Yükleniyor...").then((msg) => {
        channels.push(message.channel.id);
        const drawing = new Drawing(msg, size, args[1], args[2]);
    });
};
 
 
class Drawing {
    constructor(msg, size, fg, bg) {
        this.msg = msg;
        this.canvasmsg;
        this.size = size;
        this.realsize = size * zoomfactor;
        this.penx = Math.floor(size / 2);
        this.peny = this.penx;
        this.penstate = false; // true: on, false: off
        this.fcolor = fg || "rgb(0, 0, 0)";
        this.bcolor = bg || "rgb(255, 255, 255)";
 
        this.initPixels();
        this.c = new Canvas(this.realsize, this.realsize).setColor(this.bcolor).addRect(0, 0, this.realsize, this.realsize);
        this.drawCanvas();
 
        msg.edit("Kalemi hareket ettirmek için reaksiyonları kullanın: \ n✅ Çizimi Durdur |    Kalem Açık | Off Kalem Kapalı");
        this.reactArrows(0);
        this.collector = msg.createReactionCollector((reaction, user) => {
            return user.id !== msg.client.user.id && reactions.includes(reaction.emoji.name);
        });
        let self = this;
        this.collector.on("collect", (reaction) => {
            self.handleReaction(reaction);
        });
    }
 
    stop(reason = "") {
        this.collector.stop();
        this.drawCanvas(true);
        this.msg.edit("Bizimle çizdiğiniz için teşekkürler!" + reason);
        this.msg.clearReactions();
        this.msg.client.clearTimeout(this.timeout);
        channels = channels.filter(item => item !== this.msg.channel.id);
    }
 
    renewTimeout() {
        let self = this;
        this.msg.client.clearTimeout(this.timeout);
        this.timeout = this.msg.client.setTimeout(function () {
            self.stop("\nSebep: Zaman aşımı (2 dakika)");
        }, 120000);
    }
 
    handleReaction(reaction) {
        // console.log(`${reaction.emoji.name} from ${reaction.users.last().username}`);
        const rid = reactions.indexOf(reaction.emoji.name);
        if (rid < 4) this.movePen(rid);
        else if (rid === 4) this.stop();
        else this.togglePenstate();
        reaction.remove(reaction.users.last()).catch(e => {
            if (e.code === 50013) reaction.message.channel.send("Düzgün çalışması için 'Mesajları Yönet' iznine ihtiyacım var!");
        });
        this.drawCanvas();
    }
 
    /*
     * 0: Left
     * 1: Right
     * 2: Up
     * 3: Down
     */
    movePen(dir) {
        const xactions = [-1, 1, 0, 0];
        const yactions = [0, 0, -1, 1];
        if ((this.penx > 0 || xactions[dir] === 1) && (this.penx < this.size || xactions[dir] === -1)) this.penx += xactions[dir];
        if ((this.peny > 0 || yactions[dir] === 1) && (this.peny < this.size || yactions[dir] === -1)) this.peny += yactions[dir];
    }
 
    togglePenstate() {
        this.penstate = !this.penstate;
        if (this.penstate) {
            this.msg.reactions.find(val => val.emoji.name === reactions[5]).remove();
            this.msg.react(reactions[6]);
        } else {
            this.msg.reactions.find(val => val.emoji.name === reactions[6]).remove();
            this.msg.react(reactions[5]);
        }
    }
 
    initPixels() {
        this.pixels = [];
        for (let i = 0; i < Math.pow(this.size, 2); i++) {
            this.pixels.push(false);
        }
    }
 
    setPixel(x, y) {
        this.pixels[x + (y * this.size)] = true;
    }
 
    setCanvasPixel(x, y, color) {
        this.c.setColor(color).addRect(x * zoomfactor, y * zoomfactor, zoomfactor, zoomfactor);
    }
 
    drawCanvas(end = false) {
        if (this.penstate) this.setPixel(this.penx, this.peny);
        for (let x = 0; x < this.size; x++) {
            for (let y = 0; y < this.size; y++) {
                this.setCanvasPixel(x, y, this.pixels[x + (y * this.size)] ? this.fcolor : this.bcolor);
            }
        }
        if (!end) {
            this.setCanvasPixel(this.penx, this.peny, this.pixels[this.penx + (this.peny * this.size)] ? "#5A0000" : "red");
            this.renewTimeout();
        }
        this.sendCanvas();
    }
 
    async sendCanvas() {
        if (this.canvasmsg) this.canvasmsg.delete().catch(e => console.error(e));
        this.msg.channel.send(`Canvas: ${this.size}px`, {
            files: [
                this.c.toBuffer()
            ]
        }).then(msg => {
            this.canvasmsg = msg;
        });
    }
 
    reactArrows(arrow) {
        if (arrow === 6) return;
        this.msg.react(reactions[arrow]).then(_ => {
            this.reactArrows(arrow + 1);
        }).catch(
            e => console.error(`Reaction Error: ${e}`)
        );
    }
}

module.exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["rçiz","draw","resimciz"],
  permLevel: 0,
  kategori: "eğlence"
};

module.exports.help = {
  name: "resimçiz",
  description: "Resim çizersiniz.",
  usage: "resimçiz"
};
const Discord = require('discord.js');
const client = new Discord.Client();

exports.run = async (client, message) => {
  
  const db = require('quick.db');
  
 
  
  const embed = new Discord.RichEmbed()
  .setColor("RANDOM")
  .setAuthor(message.guild.name, message.guild.iconURL)
  .setDescription(`${message.guild.roles.filter(r => r.name !== "@everyone").map(r => r).join(' **|** ') ? message.guild.roles.filter(r => r.name !== "@everyone").map(r => r).join(' **|** ') : 'Bulunamadı'}`)
  return message.channel.send(embed)
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0,
    kategori: "sunucu",

};

exports.help = {
  name: 'roller',
  description: 'Bulunduğunuz sunucudaki rolleri gösterir.',
  usage: 'roller',
};
const Discord = require('discord.js');
const db = require('quick.db')


exports.run = async(client, message, args) => {
  if(message.author.id !== message.guild.owner.user.id) return message.channel.send('Yeterli Yetkiye Sahip Görünmüyorsun! '+client.emojis.get('647760202875142154'))
  if (db.has(`premium_${message.guild.id}`) == false) {
    message.channel.send(`<@${message.author.id}> Maalesef Premium Süresi Bitmiştir. Hizmetimizden Memnun Olduysanız Tekrar Alabilirsiniz \`!premium\``)
  } else {
  
   if(!args[0] || isNaN(args[0])) return message.channel.send(`Ayarlamam İçin Bir Sayı Yazmalısın`);
  await db.set(`rlimit31_${message.guild.id}`, args[0])
  message.reply(`Rol Hassasiyeti **${args[0]}** Rakamına Ayarlanmıştır. Bu Rakamı Kimseyle Paylaşmayın
**ÖNEMLİ LÜTFEN OKUYUN**
!!koruma Yazıp Kullanımını Detaylıca Öğreniniz Yoksa bir İşe Yaramaz!
`);
  }
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'koruma-rollimit',
  description: 'Rol limiti.',
  usage: 'banlimit',
  kategori: 'yetkili'
};
const Discord = require('discord.js');
const db = require('quick.db')


exports.run = async(client, message, args) => {
  if(message.author.id !== message.guild.owner.user.id) return message.channel.send('Yeterli Yetkiye Sahip Görünmüyorsun! '+client.emojis.get('673125251961323532'))
  if (db.has(`premium_${message.guild.id}`) == false) {
    message.channel.send(`<@${message.author.id}> Maalesef Premium Süresi Bitmiştir. Hizmetimizden Memnun Olduysanız Tekrar Alabilirsiniz \`!premium\``)
  } else {
  if (!db.fetch(`klimit31_${message.guild.id}`)) return message.channel.send(`${client.emojis.get('673130398435508225')} Olmayan Birşeyi Silemem :)
Kısaca Zaten Kapalıymış Kanka :rose:`)
  db.delete(`klimit31_${message.guild.id}`)
  message.channel.send(`:ok_hand: Koruma Rol Sistemi Sunucunuz İçin Veritabanından Silinmiştir.`);
  }
  };

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'koruma-rollimit-sistemi-kapat',
  description: 'Ban limiti.',
  usage: 'banlimit',
  kategori: 'yetkili'
};
const Discord = require('discord.js')
const numerals = {
                                        "M": 1000,
                                        "CM": 900,
                                        "D": 500,
                                        "CD": 400,
                                        "C": 100,
                                        "XC": 90,
                                        "L": 50,
                                        "XL": 40,
                                        "X": 10,
                                        "IX": 9,
                                        "V": 5,
                                        "IV": 4,
                                        "I": 1
                                }
 
exports.run = (client, message, args) => {
  
  const db = require('quick.db');

  
        if(!args[0]) {
                const embed = new Discord.RichEmbed()
                        .setDescription('Lütfen sayı yazın!')
                        .setColor("RANDOM")
                message.channel.send({embed})
                return
        }
 
        if(isNaN(args[0])) {
                const embed = new Discord.RichEmbed()
                        .setDescription('Sadece sayı yazabilirsin')
                        .setColor("RANDOM")
                message.channel.send({embed})
                return
        }
       
        if(args[0] > 999999) {
                const embed = new Discord.RichEmbed()
                        .setDescription("Lütfen `999999` veya daha düşük bir sayı yazın!!")
                        .setColor("RANDOM")
                message.channel.send({embed})
                return
        }
 
        const sayi = args[0]
 
        if(sayi === "0" || sayi === 0) {
                const embed = new Discord.RichEmbed()
                        .setDescription("Karşılıksız")
                        .setColor("RANDOM")
                message.channel.send({embed})
                return
        }
 
        let result = '';
        for (const [numeral, value] of Object.entries(numerals)) {
                while (args[0] >= value) {
                        result += numeral;
                        args[0] -= value;
                }
        }
        const embed = new Discord.RichEmbed()
                .addField("Yazılan Sayı", sayi)
                .addField("Romen Karşılığı", result)
                .setColor("RANDOM")
        message.channel.send({embed})
}
 
exports.conf = {
        enabled: true,
        guildOnly: true,
        aliases: ['roman'],
        permLevel: 0,
        kategori: "eğlence",
}
 
exports.help = {
        name: 'romen',
        description: 'Yazdığınız sayının romen karşılığını yazar.',
        usage: 'romen <sayı>',
}

const Discord = require(`discord.js`); 
const db = require(`quick.db`);
module.exports.run = async (client, message, args) => {

    var user = message.mentions.users.first() || message.author;

    let onay = await db.fetch(`memberBadge_${user.id}`);
    let yetkili = await db.fetch(`memberBadge2_${user.id}`);
    let destekçi = await db.fetch(`memberBadge3_${user.id}`);
    let mod = await db.fetch(`memberBadge4_${user.id}`);
    let paraR = await db.fetch(`memberBadge6_${user.id}`);
  let gold = await db.fetch(`üyelikk_${user.id}`, 'üyelik');
let web = await db.fetch(`webp_${user.id}`, 'webp');
    let evet = await client.emojis.get(client.emojiler.evet);
    let hayır = await client.emojis.get(client.emojiler.hayır);

    let onayE = await client.emojis.get(client.emojiler.onayRozet);
    let yetkiliE = await client.emojis.get(client.emojiler.yetkiliRozet);
    let modE = await client.emojis.get(client.emojiler.modRozet);
    let destekçiE = await client.emojis.get(client.emojiler.destekçiRozet);
    let paraE = await client.emojis.get(client.emojiler.paraROZET);
  let goldE = await client.emojis.get(client.emojiler.gold);
    let webE = await client.emojis.get(client.emojiler.mutlu);
    let sayfa = [`**${user.tag} || Rozetler**

 ${yetkiliE} **Yetkili rozeti:** ${yetkili == `https://cdn.discordapp.com/attachments/474685686075621376/480845736347435009/401723658491527168.png` ? `${evet} Alınmış` : `${hayır} Alınmamış`}
   
    ${modE} **Moderatör rozeti:** ${mod == `https://cdn.discordapp.com/attachments/474685686075621376/480845735647117312/401724520806875139.png` ? `${evet} Alınmış` : `${hayır} Alınmamış`}

    ${onayE} **Onay rozeti:** ${onay == `https://cdn.discordapp.com/attachments/474685686075621376/480845736347435015/401725450470031362.png` ? `${evet} Alınmış` : `${hayır} Alınmamış`}

    ${destekçiE} **Destekçi rozeti:** ${destekçi == `https://cdn.discordapp.com/attachments/474685686075621376/480845737006202881/401725034453925889.png` ? `${evet} Alınmış` : `${hayır} Alınmamış`}
   
    ${paraE} **Yıldırım rozeti:** ${paraR == `https://cdn.discordapp.com/attachments/531535859594297364/533260601162465280/paraR.png` ? `${evet} Alınmış` : `${hayır} Alınmamış`}

  ${goldE} **Gold rozeti:** ${gold ? `${evet} Alınmış` : `${hayır} Alınmamış`}

  ${webE} **Panel rozeti:** ${web ? `${evet} Alınmış` : `${hayır} Alınmamış`}
    `];

    const profilE = new Discord.RichEmbed()
    .setColor(`RANDOM`)
   
    .setDescription(sayfa)
    .setTimestamp()
    .setFooter(`Komut ${message.author.tag} tarafından kullanıldı`)
  message.channel.send(profilE)
    
}

module.exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["rozetlerim"],
  permLevel: 0,
  kategori: "profil"
};

module.exports.help = {
  name: "rozetler",
  description: "Rozetlerinizi veya bir başkasının rozetlerini görürsünüz",
  usage: "rozetler"
};
const db = require('quick.db')
const Discord = require('discord.js')

exports.run = async (bot, message, args) => {
  
  if (!args[0]) return message.channel.send('<:ak:617145990742278144> Sa-as yazısını açmak için; `!!sa-as aç veya kapat`')
  
  if (args[0] == 'aç') {
    db.set(`ss_${message.guild.id}`, 'açık')
      message.channel.send(`Başarıyla botun \`Aleyküm selam\` yazmasını açtınız., Artık bot \`sa\` yazıldığında cevap verecek.`)
    
  }
  if (args[0] == 'kapat') {
    db.delete(`ss_${message.guild.id}`, 'kapat')
      message.channel.send(` Başarıyla \`Aleyküm selam\` yazmasını kapattınız, Artık bot \`sa\` yazıldığında cevap vermeyecek.`)
    
  }

}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['sa','as'],
  kategori: 'ayarlar',
  permLevel: 3
};

exports.help = {
  name: 'sa-as',
  description: 'Selamün aleyküm, Aleyküm selam',
  usage: '!!sa-as'
};
const Discord = require('discord.js')
const fs = require('fs')
const ayarlar = require('../ayarlar.json')

exports.run = async (client, message, args) => {
  
  const db = require('quick.db');

   let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  //if (!message.member.hasPermission("ADMINISTRATOR")) return message.reply(`Bu komutu kullanabilmek için **Yönetici** iznine sahip olmalısın!`);
  
	if(!args[0]) {
		return message.reply('Lütfen ayarlamak istediğiniz sayıyı yazınız')
	}

	//let profil = JSON.parse(fs.readFileSync("./jsonlar/sayac.json", "utf8"));

    if(args[0] === 'kapat') {
      
   if (db.has(`sayac_${message.guild.id}`) === true) {
   
     db.delete(`sayac_${message.guild.id}`)
     
       if (db.has(`sKanal_${message.guild.id}`) === true) {
       db.delete(`sKanal_${message.guild.id}`)
          message.channel.send('Sayaç kanalı ve sayaç başarıyla kaldırıldı')
         return
       }
     
     message.channel.send('Sayaç kaldırıldı.')
     return
}
  message.channel.send(`Sayaç ayarlanmamış.`)
    return
  
  }
  
	if(isNaN(args[0])) {
		return message.reply('Sadece sayı!')
	}

	if(args[0] <= message.guild.members.size) {
		const embed = new Discord.RichEmbed()
		return message.reply("Lütfen sunucu sayısından daha yüksek bir değer girin!")
	}

  

  db.set(`sayac_${message.guild.id}`, args[0])
  
	const embed = new Discord.RichEmbed()
	.setTitle(`Sayaç başarıyla ayarlandı: **${args[0]}**\nSayaç kapatmak isterseniz **${prefix}sayaç kapat** yazmanız yeterlidir. \nSayaç kanalı için !!sayaç-kanal-ayarla #kanal`)
	message.channel.send({embed})
}

exports.conf = {
	enabled: true,
	guildOnly: true,
	aliases: ['sayacayarla', 'sayac', 'sayaç'],
	permLevel: 4,
    kategori: "ayarlar",
  
}

exports.help = {
	name: 'sayaç-ayarla',
	description: 'Sayacı ayarlar.',
	usage: 'saya-çayarla <sayı>',
}
const Discord = require('discord.js')
const fs = require('fs');
//var ayarlar = require('../ayarlar.json');
//let kanal = JSON.parse(fs.readFileSync("././jsonlar/sKanal.json", "utf8"));

exports.run = async (client, message, args) => {
//if (!message.member.hasPermission("ADMINISTRATOR")) return message.reply(`Bu komutu kullanabilmek için **Yönetici** iznine sahip olmalısın!`);
  
  const db = require('quick.db');
  

    let channel = message.mentions.channels.first() || message.guild.channels.find(c=>c.name===args.slice(0).join(' '))
    let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;


  
    if (!channel) {
        return message.reply('Lütfen ayarlamak istediğiniz kanalı etiketleyin')
    }

      if(args[0] === 'kapat') {
      
   if (db.has(`sKanal_${message.guild.id}`) === true) {
   
     db.delete(`sKanal_${message.guild.id}`)
     
       if (db.has(`sayac_${message.guild.id}`) === true) {
       db.delete(`sayac_${message.guild.id}`)
          message.channel.send('Sayaç kanalı ve sayaç başarıyla kaldırıldı')
         return
       }
     
     message.channel.send('Sayaç kanalı kaldırıldı.')
     return
}
  message.channel.send(`Sayaç kanalı ayarlanmamış.`)
    return
  
  }
  
    db.set(`sKanal_${message.guild.id}`, channel.id)
  
    const embed = new Discord.RichEmbed()
    .setDescription(`${client.emojis.get(client.emojiler.evet)} Sayaç kanalı başarıyla ayarlandı: ${channel}\nSayaç kanalını kapatmak isterseniz **${prefix}sayaçkanal kapat** yazmanız yeterlidir.`)
    .setColor("RANDOM")
    message.channel.send({embed})
}
    
exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['sayaç-kanal-belirle', 'sayaçkanal'],
    permLevel: 4,
    kategori: "ayarlar",
}

exports.help = {
    name: 'sayaç-kanal-ayarla',
    description: 'Sayaç kanalını ayarlar.',
    usage: 'sayaç-kanal-ayarla <#kanal>',
}
const Discord = require('discord.js');
const request = require('node-superfetch');
const db = require('quick.db');
const { stripIndents } = require('common-tags');
const snekfetch = require("snekfetch");

const ark = ["renk", "color"]
const arm = ["resim", "image"]
const reset = ['sıfırla', 'reset']
const saydam = ['saydamlaştır', 'saydam']
const award = ['ödül', 'ödüller', 'award', 'reward', 'prize']

exports.run = async (client, msg, args) => {
    
    if (db.has(`lvl2_${msg.author.id}`) === true) {
  if (db.has(`lvll_${msg.guild.id}`) === true) {
    	
        if(ark.includes(args[0])) {
    if(reset.includes(args[1])) {
                        if(!db.has(`${msg.author.id}.renk`)) {
                                const embed = new Discord.RichEmbed()
                                        .setDescription("Renk değiştirilmemiş neyi sıfırlayacaksın!")
                                        .setColor("RANDOM")
                                msg.channel.send({embed})
                                return
                        }
                        db.delete(`${msg.author.id}.renk`)
                        const embed = new Discord.RichEmbed()
                                .setDescription("Renk başarıyla sıfırlandı!")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
                }
                if(!args[1]) {
                        const embed = new Discord.RichEmbed()
                                .setDescription("Bir renk kodu veya `sıfırla` yazmalısın!")
      .setFooter("Başına # koymayınız!")
                               .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
                }
                if(args[1].length !== 6) {
                        const embed = new Discord.RichEmbed()
                                .setDescription("Renk kodları 6 hane olur!")
      .setFooter("Başına # koymayınız!")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
                }
                        
                db.set(`${msg.author.id}.renk`, `#${args[1]}`)
    
    var Canvas = require('canvas')
                var canvas = Canvas.createCanvas(150, 150)
                var ctx = canvas.getContext('2d');
                ctx.fillStyle = `#${args[1]}`;
                ctx.fill()
                ctx.fillRect(0, 0, 150, 150)
                const embed = new Discord.RichEmbed()
                        .setAuthor("Ayarlanan Renk: #{renk}".replace("{renk}", args[1].toUpperCase()))
                        .setImage(`attachment://renk.png`)
                        .setColor("RANDOM")
                msg.channel.send({embed, files:[{attachment:canvas.toBuffer(),name:"renk.png"}]})
                return
        }
        if(arm.includes(args[0])) {
                if(reset.includes(args[1])) {
                        if(!db.has(`${msg.author.id}.resim`)) {
                                const embed = new Discord.RichEmbed()
                                        .setDescription("Ayarlı bir resim yok neyi sıfırlayacaksın!")
                                        .setColor("RANDOM")
                                msg.channel.send({embed})
                                return
                        }
                        db.delete(`${msg.author.id}.resim`)
                        const embed = new Discord.RichEmbed()
                                .setDescription("Resim başarıyla sıfırlandı!")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
                }
                if(!args[1]) {
                        const embed = new Discord.RichEmbed()
                                .setDescription("Ayarlamak istediğiniz resmin linkini veya `sıfırla` yazınız!")
      .setFooter("NOT: Resim linki http veya https ile başlamalı!")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
                }
                if(!args[1].startsWith('http')) {
                        const embed = new Discord.RichEmbed()
                                .setDescription("Resim linki http veya https ile başlamalı!")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
                }

                db.set(`${msg.author.id}.resim`, args[1])
                const embed = new Discord.RichEmbed()
                        .setAuthor("Resim başarıyla ayarlandı!")
                        .setImage(args[1])
                        .setColor("RANDOM")
                msg.channel.send({embed})
                return
        }
  
  if (award.includes(args[0])) {
    
    if (!msg.member.hasPermission("MANAGE_ROLES")) {
      const embed = new Discord.RichEmbed()
      .setColor("RANDOM")
      .setDescription("Bu komutu kullanabilmek için **Rolleri Yönet** iznine sahip olmalısın!")
      msg.channel.send({embed})
      return
    }
    
    if(reset.includes(args[1])) {
                        if(!db.has(`roll_${msg.guild.id}`)) {
        if (!db.has(`rollss_${msg.guild.id}`)) {
                                const embed = new Discord.RichEmbed()
                                        .setDescription("Rol ödülleri sistemi sıfırlanamıyor çünkü bu sistem aktif edilmemiş!")
                                        .setColor("RANDOM")
                                msg.channel.send({embed})
                                return
                        }}
                        db.delete(`roll_${msg.guild.id}`)
      db.delete(`rollss_${msg.guild.id}`)
                        const embed = new Discord.RichEmbed()
                                .setDescription("Rol ödülleri sistemi başarıyla sıfırlandı!")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
                }
    
    let r = msg.mentions.roles.first();
    
    if (!r) {
      const embed = new Discord.RichEmbed()
                                .setDescription("Bir rolü etiketleyiniz veya `sıfırla` yazınız!")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
    }
    
    if (!args[2]) {
      const embed = new Discord.RichEmbed()
                                .setDescription(`Lütfen **${r.name}** rolünü almak için kaçıncı seviyede olmak gerektiğini yazınız!`)
        .setFooter("Sayı biçiminde yazınız.")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
    }
    
    if (isNaN(args[2])) {
      const embed = new Discord.RichEmbed()
                                .setDescription(`Lütfen **${r.name}** rolünü almak için kaçıncı seviyede olmak gerektiğini sayı biçiminde yazınız!`)
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
    }
    
  db.set(`roll_${msg.guild.id}`, r.id)
  db.set(`rollss_${msg.guild.id}`, args[2])
  
    const embed = new Discord.RichEmbed()
                                .setDescription("Rol ödülleri sistemi başarıyla aktif edildi!")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
  }
  
  let u = msg.mentions.users.first() || msg.author;

        if(u.bot === true) {
                const embed = new Discord.RichEmbed()
                        .setDescription("Botların seviyesi bulunmamaktadır!")
                        .setColor("RANDOM")
                msg.channel.send(embed)
                return
        }
  
  var g = "95"
  
  var Canvas = require('canvas')
        var canvas = Canvas.createCanvas(750, 300)
        var ctx = canvas.getContext('2d');
        const avatarURL = u.displayAvatarURL
        const { body } = await request.get(avatarURL);
        const avatar = await Canvas.loadImage(body);
        if(db.has(`${u.id}.resim`)) {
                const rs = await request.get(db.fetch(`${u.id}.resim`));
                const resim = await Canvas.loadImage(rs.body);
                ctx.drawImage(resim, 0, 0, 750, 300);
    
    var g = "55"
    
        }
  
  if(saydam.includes(args[0])) {
                if(reset.includes(args[1])) {
                        if(!db.has(`${msg.author.id}.saydam`)) {
                                const embed = new Discord.RichEmbed()
                                        .setDescription("Saydamlık zaten standart halinde!")
                                        .setColor("RANDOM")
                                msg.channel.send({embed})
                                return
                        }
                        db.delete(`${msg.author.id}.saydam`)
                        const embed = new Discord.RichEmbed()
                                .setDescription("Saydamlık başarıyla sıfırlandı!")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
                }
                if(!args[1]) {
                        const embed = new Discord.RichEmbed()
                                .setDescription("Ayarlamak istediğiniz dereceyi veya `sıfırla` yazınız! \n**Dereceler:** `1`, `2`, `3`, `4`, `5`")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
                }
    if(isNaN(args[1])) {
                        const embed = new Discord.RichEmbed()
                                .setDescription("Ayarlamak istediğiniz dereceyi veya `sıfırla` yazınız! \n**Dereceler:** `1`, `2`, `3`, `4`, `5`")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
                }

    if (args[1] > 5 || args[1] < 1) {
        const embed = new Discord.RichEmbed()
                                .setDescription("Saydamlık derecesi için `5`ten fazla bir seçenek yok! \n**Dereceler:** `1`, `2`, `3`, `4`, `5`")
                                .setColor("RANDOM")
                        msg.channel.send({embed})
                        return
    };
    
                db.set(`${msg.author.id}.saydam`, args[1])
                const embed = new Discord.RichEmbed()
                        .setDescription("Siyah katmanın saydamlığı başarıyla değiştirildi!")
                        .setColor("RANDOM")
                msg.channel.send({embed})
                return
    
  };
  
  if (db.has(`${msg.author.id}.saydam`) === true) {
    
    if (db.fetch(`${msg.author.id}.saydam`) === "1") {
      
      var g = "40"
      
    };
    
    if (db.fetch(`${msg.author.id}.saydam`) === "2") {
      
      var g = "30"
      
    };
    
    if (db.fetch(`${msg.author.id}.saydam`) === "3") {
      
      var g = "20"
      
    };
    
    if (db.fetch(`${msg.author.id}.saydam`) === "4") {
      
      var g = "10"
      
    };
    
    if (db.fetch(`${msg.author.id}.saydam`) === "5") {
      
      var g = "0"
      
    };
    
  };
  
  ctx.fillStyle = "rgba(0, 0, 0, 0."+g+")";
  ctx.fill()
        ctx.fillRect(25, 20, 700, 260)  
  
  
  
        ctx.fillStyle = "rgba(0, 0, 0, 0.30)";
        ctx.fill()
        ctx.fillRect(0, 0, 750, 300)
  
        var re = db.has(`${u.id}.renk`) ? db.fetch(`${u.id}.renk`) : "#84a0ed";
  //	ctx.fillStyle = db.varMı(`${u.id}.renk`) ? db.veri(`${u.id}.renk`) : "#84a0ed";
  
  var xp = db.fetch(`puancik_${u.id + msg.guild.id}`);
  var lvl = db.fetch(`seviye_${u.id + msg.guild.id}`);  
  
        let sira = ''
        const sorted = msg.guild.members.filter(u => !u.user.bot).array().sort((a, b) => { return db.fetch(`seviye_${b.user.id + msg.guild.id}`) - db.fetch(`seviye_${a.user.id + msg.guild.id}`) });
        const top10 = sorted.splice(0, msg.guild.members.size)
        const mappedID = top10.map(s => s.user.id);
        for(var i = 0; i < msg.guild.members.size; i++) {
                if(mappedID[i] === u.id) {
                        sira += `${i + 1}`
                }
        }

        const Durum = u.presence.status;
        var Durmm = ''

                if (Durum === 'online') { var Durmm = 'green' }
                if (Durum === 'offline') { var Durmm = 'grey' }
                if (Durum === 'dnd') { var Durmm = 'red' }
                if (Durum === 'idle') { var Durmm = 'yellow' }

             

        var de = 1.6
        ctx.beginPath()
        ctx.fillStyle = "#999999";
        ctx.arc(257 + 18.5, 147.5 + 18.5 + 36.25, 18.5, 1.5 * Math.PI, 0.5 * Math.PI, true);
        ctx.fill();
        ctx.fillRect(257 + 18.5, 147.5 + 36.15, 250 * de, 37.5);
        ctx.arc(257 + 18.5 + 250 * de, 147.5 + 18.5 + 36.25, 18.75, 1.5 * Math.PI, 0.5 * Math.PI, false);
        ctx.fill();
        ctx.beginPath();
        ctx.fillStyle = `${re}`;
        ctx.arc(257 + 18.5, 147.5 + 18.5 + 36.25, 18.5, 1.5 * Math.PI, 0.5 * Math.PI, true);
        ctx.fill();
        ctx.fillRect(257 + 18.5, 147.5 + 36.25, xp * de, 37.5);
        ctx.arc(257 + 18.5 + xp * de, 147.5 + 18.5 + 36.25, 18.75, 1.5 * Math.PI, 0.5 * Math.PI, false);
        ctx.fill();
        ctx.fillStyle = `${re}`;
        ctx.font = '28px Impact';
        ctx.textAlign = "right";
        ctx.fillText(`Sıralama #${sira} | Seviye ${lvl || 0}`, 670, 70);
        ctx.font = '20px Impact';
        ctx.textAlign = "right";
        ctx.fillText(`${xp || 0} / 250 XP`, 670, 100);
  ctx.fillStyle = `#bfbfbf`;
  ctx.font = '28px Impact';
        ctx.textAlign = "left";
        ctx.fillText(`${u.tag}`, 270, 150)
        ctx.beginPath();
        ctx.lineWidth = 8;
        ctx.beginPath();
                ctx.lineWidth = 8;
                ctx.arc(55 + 75, 77 + 75, 70, 0, 2 * Math.PI, false);
                ctx.strokeStyle = Durmm;
                ctx.stroke();
                ctx.clip();
  ctx.fill()
        ctx.lineWidth = 8;
        ctx.arc(55 + 80, 80 + 80, 80, 0, 2 * Math.PI, false);
        ctx.clip();
        
        ctx.drawImage(avatar, 55, 77, 145, 145);
    
        msg.channel.send({files:[{attachment:canvas.toBuffer(),name:"seviye.png"}]})
    //ctx.drawImage(avatar, 85, 66, 150, 150);
    } else 
       if (msg.channel.send(`Hey <@${msg.author.id}>, Seviye sistemi açık değil. Yetkililerden açmasını iste. `).then(message => message.delete(5000))) {
        msg.delete()
      } else return;

      
  
  
    } else  if (msg.channel.send(`Hey <@${msg.author.id}>, Siteden kendi seviye sistemini açman gerek.`).then(message => message.delete(5000))){
	 msg.delete()
	} else return;

   
 
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["level", "rank", "xp", "puan"],
  permLevel: 0,
    kategori: "seviye"
};

exports.help = {
  name: 'seviye',
  description: 'Seviyenizi ve XP\'nizi gösterir.',
  usage: 'seviye [@kullanıcı/renk/resim] [renk kodu/resim URLsi/sıfırla]'
};
const Discord = require('discord.js');
const db = require('quick.db')


exports.run = async (bot, message, args) => {
	
	

  
    if (!message.member.hasPermission("ADMINISTRATOR")) return message.reply(`Bu komutu kullanabilmek için "\`Yönetici\`" yetkisine sahip olmalısın.`);

let sk = message.mentions.channels.first();
let kanal = await db.fetch(`sk_${message.guild.id}`)
  
  if (args[0] === "sıfırla" || args[0] === "kapat") {
    if(!kanal) return message.channel.send(`Seviye kanal sistemini kapatmak için \`seviye kanalının\` seçili olması lazım örnek kullanım: \`!!seviye-kanal #kanal\``);
    
   db.delete(`sk_${message.guild.id}`)
  
   message.channel.send(`Seviye kanalı başarıyla kapatıldı.`);
 
  
    return
  }
  
if (!sk) return message.channel.send('Seviye kanalını bulamadım. Kullanım !!seviye-kanal #kanal');
 

   db.set(`sk_${message.guild.id}`, sk.id)

 message.channel.send(`Seviye kanalı ${sk} olarak ayarlandı\nSıfırlamak için !!seviye-kanal sıfırla`);





}


  
module.exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['seviye-kanal'],
    kategori: "seviye",
  permLevel: 3
};

module.exports.help = {
  name: 'seviye-kanal',
  description: 'Seviye kanalını ayarlar',
  usage: 'seviye-kanal'
};
const Discord = require('discord.js');
const fs = require('fs');

//var ayarlar = require('../ayarlar.json');

exports.run = async (client, message) => {
  
  //if (!message.member.hasPermission("ADMINISTRATOR")) return message.reply(`Bu komutu kullanabilmek için **Yönetici** iznine sahip olmalısın!`);

  const db = require('quick.db');
  

  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  let args = message.content.split(' ').slice(1);
  const secenekler = args.slice(0).join(' ');

  if(secenekler.length < 1) return message.reply(`**${prefix}seviye-sistem aç** veya **${prefix}seviye-sistem kapat** yazınz `);
  //if(secenekler === "aç" || "kapat") return message.channel.send(errembed);

  if (secenekler !== "aç" && secenekler !== "kapat" && secenekler !== "on" && secenekler !== "off") return message.reply(`**${prefix}seviye-sistem aç** veya **${prefix}seviye-sistem kapat** yazınz `)
  
  if (secenekler === "aç" || secenekler === "on") {
    
    var i = db.set(`lvll_${message.guild.id}`, "acik")
    
      const embed = new Discord.RichEmbed()
    .setColor('RED')
    .setDescription(`Seviye Sistem Başarıyla açıldı\nSeviye sistemini kapatmak isterseniz **${prefix}seviye-sistem kapat** yazmanız yeterlidir.`)
    message.channel.send(embed)
    /*let kufurEngel = JSON.parse(fs.readFileSync("././jsonlar/kufurEngelle.json", "utf8"));
 if(!kufurEngel[message.guild.id]){
    kufurEngel[message.guild.id] = {
      kufurEngel: "acik"
      };
  };

      fs.writeFile("././jsonlar/kufurEngelle.json", JSON.stringify(kufurEngel), (x) => {
        if (x) console.error(x)
      })*/

  };

  if (secenekler === "kapat" || secenekler === "off") {
    
    //var i = db.set(`küfürE_${message.guild.id}`, "kapali")
    
    db.delete(`lvll_${message.guild.id}`)
    
    message.channel.send('Seviye sistemi kapatıldı.')
  /*let kufurEngel = JSON.parse(fs.readFileSync("././jsonlar/kufurEngelle.json", "utf8"));
  if(!kufurEngel[message.guild.id]){
    kufurEngel[message.guild.id] = {
      kufurEngel: "kapali"
      };
  };

    fs.writeFile("././jsonlar/kufurEngelle.json", JSON.stringify(kufurEngel), (x) => {
        if (x) console.error(x)
      })
    
    if (kufurEngel[message.guild.id]) {
    delete kufurEngel[message.guild.id]
    delete kufurEngel[message.guild.id].kufurEngel
    }*/
    
  };
}

exports.conf = {
		enabled: true,
		guildOnly: false,
		aliases: [],
		permLevel: 4,
    kategori: "seviye",
	};

module.exports.help = {
  name: 'seviye-sistem',
  description: 'seviye-sistem aç kapat.',
  usage: 'seviye-sistem'
};
const Discord = require('discord.js');

exports.run = async(client, msg, args) => {
if (msg.channel.type !== "text") return;
  
const limit = args[0];
  
  if(!limit) {
              var embed = new Discord.RichEmbed()
                .setDescription(`Yazma sınırını (süresini) kaç saniye olarak ayarlamak istediğinizi yazınız!`)
              .setColor("RANDOM")
            msg.channel.send({embed: embed})
            return
          }
  
if (isNaN(limit)) {
  var s = new Discord.RichEmbed()
  .setDescription("Yazma sınırını (süresini) kaç saniye olarak ayarlamak istediğinizi yazınız!")
  .setColor("RANDOM")
  msg.channel.send({embed: s});
    return
}
  
if (limit > 10) {
  var x = new Discord.RichEmbed()
  .setDescription("Yazma sınırı (süresi) limiti maksimum **10** saniye olabilir!")
  .setColor("RANDOM")
  msg.channel.send({embed: x});
    return
}
    var e = new Discord.RichEmbed()
    .setDescription(`Yazma sınırı (süresi) başarıyla **${limit}** saniye olarak ayarlanmıştır!`)
    .setColor("RANDOM")
    msg.channel.send({embed: e})
  
var request = require('request');
request({
    url: `https://discordapp.com/api/v7/channels/${msg.channel.id}`,
    method: "PATCH",
    json: {
        rate_limit_per_user: limit
    },
    headers: {
        "Authorization": `Bot ${client.token}`
    },
})};
  exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["slow-mode", "slowmode", "yavas-mod", 'yavasmod', 'yavaşmod'],
  permLevel: 4,
    kategori: "moderasyon"
};

exports.help = {
  name: 'yavaş-mod',
  description: 'Bulunduğunuz kanala yazma sınırı (süresi) ekler.',
  usage: 'yavaş-mod <1/10>',
};
 const Discord = require('discord.js');
 const db = require('quick.db');

  exports.run = async (client, message, params) => {
  // if (message.author.bot) return;


  let atan = await db.fetch(`atan_${message.channel.id}`);
  let mesaj = await db.fetch(`mesaj_${message.channel.id}`);
  
 // let link = /(www|WWW|.com|.COM|com|http|HTTP|https|HTTPS|.net|.NET|net|NET|.me|.ME||dicord.gg|.tk|.pw|https:|http:|.info|.cf|gg|.NET|.TK|DİSCORD.GG|.PW)/
 // let küfür = /(m a l|ma l|m al|amk|sg|oç|sik|amına|amın|orospu|orospo|çocuğu|orosbu|orosbo|cocugu|mal|salak|kapçuk|amcık|amcuk|sikik|amk malı|amına kodum|amınakoduğum|amına koduğum|M A L|MA L|M AL|AMK|SG|OÇ|SİK|AMINA|AMIN|OROSPU|OROSPO|ÇOCUĞU|OROSBU|OROSBO|COCUGU|ÇOCUGU|MAL|SALAK|KAPÇUK|AMCIK|AMCUK|SİKİK|AMK MALI|AMINA GODUM|AMINAKODUGUĞUM|AMINA KODUĞUM|www|WWW|.com|.COM|com|http|HTTP|https|HTTPS|.net|.NET|net|NET|.me|.ME||dicord.gg|.tk|.pw|https:|http:|.info|.cf|gg|.NET|.TK|DİSCORD.GG|.PW)/
 // if (mesaj.match(küfür)) return message.channel.send(`Son silinen mesaj küfür/reklam içeriyor bu mesajı sana gösteremem!`)
  //if (mesaj.match(link)) return message.channel.send(`Son silinen mesaj reklam içeriyor bu mesajı sana gösteremem!`)
  
if(mesaj == null) {
const embed = new Discord.RichEmbed()
.setColor('RANDOM')
.setDescription('Son silinen mesajı bulamadım sanırım mesaj çok eski veya bu kanalda hiç mesaj silinmemiş')
.setTimestamp()
.setFooter(`Komutu kullanan: ${message.author.tag}`)
return message.channel.send(embed)
} 
    
   
     const embed = new Discord.RichEmbed()
     .setColor('RANDOM')
     .addField(`Son silinen mesaj sahibi: ${atan}`, `Son silinen mesaj: ${mesaj}`)
     .setFooter(`Komutu kullanan: ${message.author.tag}`)
     .setTimestamp()
     message.channel.send(embed)
    

    
    
    
};
  
exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ["snipe"],
  permLevel: 3,
  kategori: "moderasyon"
 
};

exports.help = {
  name: 'snipe',
  description: 'Kanalda son silinen mesajı gösterir',
  usage: 'snipe',
 
};

const Discord = require('discord.js');
exports.run = (client, message, args) => {

  let every = message.guild.roles.find(r => r.name === '@everyone')
message.channel.overwritePermissions(every, {
  'SEND_MESSAGES': null,
 
})
 

   message.channel.send('Sohbet kanalı ``Yazılabilir`` durumuna getirildi.\nSohbet kanalını kapatmak için ``!!kapat`` yazmanız gerekmektedir.');
}
 
exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['aç','a','saç'],
kategori: 'sohbet',
  permLevel: 3
};

exports.help = {
  name: 'sohbet-aç',
  description: 'Sohbetinizi açmaya yarar. Kapatmak için !!k.',
  usage: 'aç'
};
const Discord = require('discord.js');
exports.run = (client, message, args) => {

  let every = message.guild.roles.find(r => r.name === '@everyone')
message.channel.overwritePermissions(every, {
  VIEW_CHANNEL: false,
 
})

  message.channel.send('Sohbet kanalı ``Görünmez`` durumuna getirildi.\nSohbet kanalını görülebilir yapmak için ``!!sohbet-gizle-kapat`` yazmanız gerekmektedir.');
}
 
exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['sohbet-gizle-aç','s-aç','sohbet-aç','sss'],
kategori: 'sohbet',
  permLevel: 3
};

exports.help = {
  name: 'sohbet-gizle-aç',
  description: 'Sohbetinizi görünmez yapar. Açmak için !!s-kapat.',
  usage: 'kapat'
};
const Discord = require('discord.js');
exports.run = (client, message, args) => {

  let every = message.guild.roles.find(r => r.name === '@everyone')
message.channel.overwritePermissions(every, {
  VIEW_CHANNEL: null,
 
})

  message.channel.send('Sohbet kanalı ``Görülebilir`` durumuna getirildi.\nSohbet kanalını görünmez yapmak için ``!!sohbet-gizle-aç`` yazmanız gerekmektedir.');
}
 
exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['sohbet-gizle','s-gizle','sohbet-gizle-kapat'],
kategori: 'sohbet',
  permLevel: 3
};

exports.help = {
  name: 'sohbet-gizle-kapat',
  description: 'Sohbetinizi görülebilir yapar. Kapamak için !!s-aç.',
  usage: 'kapat'
};
const Discord = require('discord.js');
const client = new Discord.Client();

exports.run = async (client, message, args) => {
  
  var s = [
      'Herkes kendi kaderinin demircisidir',
      'Belki hiç bir şey yolunda gitmedi ama hiçbir şey de beni yolumdan etmedi!',
      'Gül biraz; bunca keder, bunca gözyaşı dinsin, gül biraz; şu gök kubbe kahkahanı işitsin. Her gidenin ardından koşmaya değmez hayat, gelecekleri bekle, gidecek varsın gitsin.',
      'Aşk davaya benzer, cefa çekmek de şahide. Şahidin yoksa davayı kazanamazsın ki!',
      'İnsan geride bıraktıklarını özler, sahip olduğundan sıkılır, ulaşamadığına tutulur. Genelde ulaşılmaz olan hep aşk olur.',
      'Salatalığın kabuğunu soymak, onun hıyar olduğu gerçeğini değiştirmez.',
      'Bu kadar yürekten çağırma beni. Bir gece ansızın gelebilirim. Beni bekliyorsan, uyumamışsan, sevinçten kapında ölebilirim.',
      'Nankör insan her şeyin fiyatını bilen hiçbir şeyin değerini bilmeyen kimsedir.',
      'Biz birbirimize dönmüş iki ayna gibiyiz. İçimizde binlerce olsa da görüntümüz bir biz sadece birbirimizi görürüz…',
      'Gittiğin yerde boşluk dolduran değil, gittiğin zaman boşluğu doldurulamayan ol.',
      'Eğer aç ve kimsesiz bir köpeği alıp bakar ve rahata kavuşturursanız sizi ısırmaz. İnsan ve köpek arasındaki temel fark budur.',
      'Bir ilişkiyi kadın başlatır, kadın bitirir. Ama başlatan ve bitiren aynı kadın olmayabilir.',
      'Bir tohum verdin çiçeğini al. Bir çekirdek verdin ağacını al. Bir dal verdin ormanını al. Dünyamı verdim sana bende kal.',
      'Yalnızca kültürlü insanlar öğrenmeyi sever cahiller ders vermeyi tercih eder.',
      'Birisinin havaya attığı aşk oku kalbinize öylece saplanıp kalsa çok uzun bir zaman sevip hala kavuşamasanız ve aşk oku kalbinize saplanan kişi şuanda sizi dostunuz olarak görmekte oysaki bir zamanlar sizin aşk okunuzda onun kalbine saplanmış o da sizi sevmiş ama olamamışsınız sonrada o kişi sizi unutup gitmiş tam olarak dost olarak bile görmüyormuş artık düşünsenize ? Hayat ne kadar da acı diymi.'
    ];
    var su = s[Math.floor((Math.random() * s.length))];
  
    if (su === 'Birisinin havaya attığı aşk oku kalbinize öylece saplanıp kalsa çok uzun bir zaman sevip hala kavuşamasanız ve aşk oku kalbinize saplanan kişi şuanda sizi dostunuz olarak görmekte oysaki bir zamanlar sizin aşk okunuzda onun kalbine saplanmış o da sizi sevmiş ama olamamışsınız sonrada o kişi sizi unutup gitmiş tam olarak dost olarak bile görmüyormuş artık düşünsenize ? Hayat ne kadar da acı diymi.') {
    
      s = 'Birisinin havaya attığı aşk oku kalbinize öylece saplanıp kalsa çok uzun bir zaman sevip hala kavuşamasanız ve aşk oku kalbinize saplanan kişi şuanda sizi dostunuz olarak görmekte oysaki bir zamanlar sizin aşk okunuzda onun kalbine saplanmış o da sizi sevmiş ama olamamışsınız sonrada o kişi sizi unutup gitmiş tam olarak dost olarak bile görmüyormuş artık düşünsenize ? Hayat ne kadar da acı diymi. \n\nBu sözdeki gibi sevip kavuşamayan var onlara yakalım bugün de 🚬 \n\nBu söze göre seven kişinin kalp durumu: \n❤️💘💕💗💔🖤 \nKalp yavaş yavaş ölmüş...'
    
    }
  
    const minnossudem = new Discord.RichEmbed()
    .setDescription(`${su}`)
    .setColor("RANDOM")
    return message.channel.send(minnossudem)
  
  
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0,
    kategori: 'eğlence',

};

exports.help = {
  name: 'söz',
  category: "kullanıcı",
  description: 'Rastgele güzel sözler atar.',
  usage: 'söz'
};
const Discord = require('discord.js');
const db = require('quick.db')
exports.run = (client, message, args) => { 
  


message.channel.send(`Vortex Botun Sunucunuzu Böyle Koruması İçin YÖNETİCİ Yetkisi Olmalı Ve Sonrasında Kendiliğinden Saldırıları Önler.
`) 
  };
exports.conf = {
  enabled: true,  
  guildOnly: false, 
  aliases: [], 
  permLevel: 0
};

exports.help = {
  name: 'spambotkorumasi',
  description: 'sayaç', 
  usage: 'sayaç'
};

const Discord = require('discord.js')
const os = require('os')
var speedTest = require('speedtest-net');

exports.run = async (client, message, args) => {
  
  var m = await message.channel.send(`${client.emojis.get(client.emojiler.yukleniyor)} Gerekli veriler hesaplanıyor...`)
  
  var osType = os.type();

  if (osType === 'Darwin') osType = 'macOS'
  else if (osType === 'Windows') osType = 'Windows'
  else if (osType === 'Linux') osType = 'Linux'
  else if (osType === 'Ubuntu') osType = 'Ubuntu'
  else osType = os.type();
    var test = speedTest({maxTime: 1000});
    test.on('data', data => {
const embed = new Discord.RichEmbed()
 .setColor("RANDOM")
.setAuthor('Speed Test | Sonuçlar')
.addField('Anlık İstatistikler', `İndirme: **${data.speeds.download}**
Yükleme: **${data.speeds.upload}**`)
.addField('Normal Olarak Ölçülen İstatistikler', `İndirme: **${data.speeds.originalDownload}**
Yükleme: **${data.speeds.originalUpload}**`)
.addField('Pingler', `Discord API Pingi: **${client.ping}**
Speedtestde Ölçülen Ping: **${data.server.ping}**`)
.addField('Diğer Bilgiler', `İnternet Portunun IP'sı: **Güvenlik Sebebiyle Gizli!**
İşletim Sistemi: **${osType}**
İnternet Sağlayıcısı: **${data.client.isp}**
Host: **${data.server.host}**
Lokasyon: **${data.server.country}**,**${data.client.country}**
Sağlayıcı Lokasyonu: **${data.server.location}**
Sağlayıcı Sponsoru: **${data.server.sponsor}**`)
  return m.edit(embed)
});
 
    test.on('error', err => {
  console.log(err);
});
}


exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0,
  kategori: "kullanıcı"
};

exports.help = {
  name: 'speedtest',
  description: 'speedtest',
  usage: 'speedtest'
};
const Discord = require('discord.js')
const moment = require('moment')
const db = require('quick.db')
exports.run = async (client, message, args) => {



    

    let prefix = db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;

       var verti = message.guild.verificationLevel;
   const vertific = ['Yok', 'Düşuk', 'Orta', 'Yüksek', 'En Yüksek'];
	let region = {
			"us-central": "Amerika :flag_us:",
			"us-east": "Doğu Amerika :flag_us:",
			"us-south": "Güney Amerika :flag_us:",
			"us-west": "Batı Amerika :flag_us:",
			"eu-west": "Batı Avrupa :flag_eu:",
			"eu-central": "Avrupa :flag_eu:",
			"singapore": "Singapur :flag_sg:",
			"london": "Londra :flag_gb:",
			"japan": "Japonya :flag_jp:",
			"russia": "Rusya :flag_ru:",
			"hongkong": "Hong Kong :flag_hk:",
			"brazil": "Brezilya :flag_br:",
			"singapore": "Singapur :flag_sg:",
			"sydney": "Sidney :flag_au:",
			"southafrica": "Güney Afrika :flag_za:"
	}
let kur = {
			"01": "Ocak",
			"02": "Şubat",
			"03": "Mart",
			"04": "Nisan",
			"05": "Mayıs",
			"06": "Haziran",
			"07": "Temmuz",
			"08": "Ağustos",
			"09": "Eylül",
			"10": "Ekim",
			"11": "Kasım",
			"12": "Aralık"
    }
    
    const exp2 = await db.fetch(`sunucuxp_${message.guild.id}`) || "0";
	const exp = await db.fetch(`sunucuxp_${message.guild.id}`);
	
    

	const embed = new Discord.RichEmbed()
		.setAuthor(`${message.guild.name} | Sunucunun Bilgileri`)
		.addField('Sunucu Kurucusu', `${message.guild.owner}`)
		.addField('Sunucu ID', message.guild.id)
		.addField('Oluşturulma Tarihi', `${moment(message.guild.createdAt).format('DD')} ${kur[moment(message.guild.createdAt).format('MM')]} ${moment(message.guild.createdAt).format('YYYY h:mm:ss')}`)
		.addField('Sunucu Kurulum Konumu', region[message.guild.region])
		.addField(`Kanallar [${message.guild.channels.size}]`, `${message.guild.channels.filter(c => c.type === "text").size} Yazı  \n${message.guild.channels.filter(c => c.type === "voice").size} Ses \n${message.guild.channels.filter(c => c.type === 'category').size} Kategori`)
		.addField(`Kullanıcılar [${message.guild.members.size}]`, `${client.emojis.get(client.emojiler.çevrimiçi)} ${message.guild.members.filter(m => m.user.presence.status === "online").size} Çevrimiçi \n${client.emojis.get(client.emojiler.boşta)} ${message.guild.members.filter(m => m.user.presence.status === "idle").size} Boşta \n${client.emojis.get(client.emojiler.yayıncı)} ${message.guild.members.filter(m => m.user.presence.status === "streaming").size} Yayında \n${client.emojis.get(client.emojiler.rahatsızetme)} ${message.guild.members.filter(m => m.user.presence.status === "dnd").size} Rahatsız Etmeyin \n${client.emojis.get(client.emojiler.çevrimdışı)} ${message.guild.members.filter(m => m.user.presence.status === "offline").size} Görünmez \n${client.emojis.get(client.emojiler.bot)} ${message.guild.members.filter(m => m.user.bot).size} Bot`)
		.addField('AFK Kanalı', message.guild.afkChannel || 'Bulunmuyor')
		.addField('AFK Zaman Aşımı', `${message.guild.afkTimeout} saniye`)
        .addField(`Emoji [${message.guild.emojis.size}]`, `${prefix}emojiler yazarak sunucudaki bütün emojileri görüntüleyebilirsiniz.`)
		.addField(`Rol [${message.guild.roles.size - 1}]`, `${prefix}roller yazarak sunucudaki bütün rolleri görüntüleyebilirsiniz.`)
        .addField('Doğrulama seviyesi', `${vertific[message.guild.verificationLevel]}`)
        .addField('Premium', `Puan: **${exp > 50 ? '50' : exp}/50**\nPremium: **${exp < 50  ? "Aktif değil" : `Aktif`}**`)
  
  
		.setThumbnail(message.guild.iconURL)
		.setColor('RANDOM')
		.setTimestamp()
	message.channel.send({embed})







          
 };
          
 



exports.conf = {
	enabled: true,
	guildOnly: true,
	aliases: ['sunucu-bilgi', 'sunucubilgi','server-info', 'server', 'serverinfo', 'serverinformation', 'server-information'],
	permLevel: 0,
 
	kategori: 'kullanıcı'
}

exports.help = {
	name: 'sunucu',
	description: 'Bulunduğun sunucu hakkında bilgi verir.',
	usage: 'sunucu'
}

const Discord = require('discord.js');
const db = require('quick.db');
const {stripIndents} = require('common-tags');

exports.run = async (client, message, args) => {
  var p24 = client.ping
  try {
	const embed = new Discord.RichEmbed()
	.setColor('RANDOM')
	.setDescription('Sunucunuzdaki kanalların, kategorilerin ve rollerin hepsinin silinip botun yeni bir sunucu kurmasını onaylıyor musunuz?')
	.setFooter('10 saniye içinde "evet" yazarsanız onaylamış olursunuz. 10 saniye içinde yazmazsanız işlem iptal edilir')
	message.channel.send({embed: embed})
	 message.channel.awaitMessages(response => response.content === 'evet', {
        max: 1,
        time: 10000,
        errors: ['time'],
      })
      .then((collected) => {
          message.guild.channels.forEach((kanal) => {
          	kanal.delete()
          })
           setTimeout(() => {
          message.guild.roles.forEach((rol) => {
          	rol.delete()
          })
      }, 5000)
     
     const embedd = new Discord.RichEmbed()
	.setColor('RANDOM')
	.setDescription('Sunucunuzdaki kanalların, kategorilerin ve rollerin hepsinin silinip botun yeni bir sunucu kurmasını onayladınız! Sunucu kuruluyor bu işlem biraz zaman alabilir.')
	message.author.send({embed: embedd})

    let every = message.guild.roles.find(r => r.name === '@everyone')

    //Kategoriler
    message.guild.createChannel('Bilgilendirme', 'category').then(bilgi => {
    message.guild.createChannel('Toplum', 'category').then(toplum => {
    message.guild.createChannel('Kayıtlar', 'category').then(kayitlar => {
    message.guild.createChannel('Sesli Kanallar', 'category').then(sesli => {

    //Kanallar
    setTimeout(() => {
    	message.guild.createChannel('kurallar', 'text').then(kurallar => {
    	kurallar.overwritePermissions(every, {
    		SEND_MESSAGES: false
    	})
    	kurallar.setParent(bilgi.id)
    	kurallar.send(stripIndents`
    	\`\`\`md
> Kurallar
1. Küfür etmek, hakaretlerde bulunmak yasaktır!
2. Reklam yapmak, link atmak sunucu içersin de de, sunucudaki bir üyeye özelden mesaj olarak ta kesinlikle yasaktır!
3. #komutlar kanalı dışında bir kanalda komut kullanmak yasaktır!
4. Sesli kanallarda bas açmak vb. hareketler yapmak yasaktır!
5. Din, dil, ırk ayrımı yapmak yasaktır!
6. Siyaset hakkında tartışmak, konuşmak yasaktır!
7. Spam ve flood yapmak yasaktır!
8. Uygunsuz davranışlarda bulunmak, uygunsuz paylaşımlar yapmak yasaktır!
9. Yetkilileri sebesiz, saçma sebepler yüzünden rahatsız etmek yasaktır!
- Kuralları okumamak kesinlikle yasaktır!

> Üyelerin bu kanalda konuşmaları yasaklanmıştır.
\`\`\`
    	`)
    	kurallar.send(stripIndents`
    		\`\`\`md
[NOT]: Sunucudaki her üye *yetkili dahil* kuralları okumuş olarak kabul edilir. Buradaki maddelere herhangi bir karşı gelme olayı olduğu an "bilmiyordum, okumamıştım" gibi bahanelerin *hiç biri* umursanmaz ve gerekli işlem yapılır!
\`\`\`
    	`)
    })
    	message.guild.createChannel('duyurular', 'text').then(duyurular => {
         duyurular.send(stripIndents`
    		\`\`\`md
# Merhaba! 
> Burası duyurular. Burda önemli bilgiler verilir.
> Üyelerin bu kanalda konuşmaları yasaklanmıştır.


- ${client.user.username} -
\`\`\`
    	`)
    
    	duyurular.overwritePermissions(every, {
    		SEND_MESSAGES: false
    	})
    	duyurular.setParent(bilgi.id)
    })
    	message.guild.createChannel('sohbet', 'text').then(sohbet => {
    	sohbet.setParent(toplum.id)
         sohbet.send(stripIndents`
    		\`\`\`md
# Merhaba! 
> Burası sohbet. Burdan arkadaşlarınla vb sohbet etmek için kuruldu. Uygunsuz konuşmalara izinli değildir.



- ${client.user.username} -
\`\`\`
    	`)
    })
     message.guild.createChannel('destek', 'text').then(destek => {
    	destek.setParent(toplum.id)
    	destek.send(stripIndents`
    		\`\`\`md
# Merhaba! 
> Bu kanal destek sistemi kanalıdır! Buraya bir mesaj yazıldığında otomatik olarak bir Destek Talebi açılır ve yetkililerimiz açılan talep kanalında size yardımcı olurlar. 

[Uyarı!]: Gereksiz yere kullanmak yasaktır!

- ${client.user.username} Gelişmiş Destek Sistemi -
\`\`\`
    	`)
    	db.set(`destekK_${message.guild.id}`, destek.id)
    })
    }, 5000)

    setTimeout(() => {
    	message.guild.createChannel('komut-kullanım', 'text').then(komutlar => {
           komutlar.send(stripIndents`
    		\`\`\`md
# Merhaba! 
> Burası komutlar odası. !!yardım yazarak Vortex'in komutlarını görebilirsiniz.



- ${client.user.username} -
\`\`\`
    	`)
           	db.set(`ktr_${message.guild.id}`, komutlar.id)
    	komutlar.setParent(toplum.id)
    })
      
    }, 5000)

    setTimeout(() => {
    	message.guild.createChannel('gelen-giden', 'text').then(gc => {
    	gc.setParent(kayitlar.id)
    	gc.overwritePermissions(every, {
    		SEND_MESSAGES: false
    	})
         gc.send(stripIndents`
    		\`\`\`md
# Merhaba! 
> Bu kanal yeni gelen üyeleri yazılı bir şekilde karşılar. 
> Üyelerin bu kanalda konuşmaları yasaklanmıştır.


- ${client.user.username} Gelişmiş Gelen-Giden Sistemi -
\`\`\`
    	`)
        
    	db.set(`gc_${message.guild.id}`, gc.id)
    })
      
    	message.guild.createChannel('sayaç', 'text').then(sayac => {
    	sayac.setParent(kayitlar.id)
        sayac.send(stripIndents`
    		\`\`\`md
# Merhaba! 
> Bu kanal yeni gelen üyelerle birlikte belirtilen sayıya ne kadar kaldığını söyler.
> Üyelerin bu kanalda konuşmaları yasaklanmıştır.


- ${client.user.username} Gelişmiş Sayaç Sistemi -
\`\`\`
    	`)
          sayac.overwritePermissions(every, {
    		SEND_MESSAGES: false
    	})
    	db.set(`sKanal_${message.guild.id}`, sayac.id)
    	db.set(`sayac_${message.guild.id}`, message.guild.members.size+100)
    })
      message.guild.createChannel('oto-rol', 'text').then(otor => {
    	otor.setParent(kayitlar.id)
        otor.send(stripIndents`
    		\`\`\`md
# Merhaba! 
> Bu kanal yeni gelen üyelere belirtilen rolü verir.
> Üyelerin bu kanalda konuşmaları yasaklanmıştır.


- ${client.user.username} Gelişmiş Oto-Rol Sistemi -
\`\`\`
    	`)
          otor.overwritePermissions(every, {
    		SEND_MESSAGES: false
    	})
    	db.set(`otoRK_${message.guild.id}`, otor.id)
    	db.set(`otoR_${message.guild.id}`, otor.id)
      
    })
   	message.guild.createChannel('resimli-hoşgeldin', 'text').then(gcc => {
    	gcc.setParent(kayitlar.id)
      gcc.send(stripIndents`
    		\`\`\`md
# Merhaba! 
> Bu kanal yeni gelen üyeleri resimli bir şekilde karşılar. 
> Üyelerin bu kanalda konuşmaları yasaklanmıştır.


- ${client.user.username} Gelişmiş Resim-Kanal Sistemi -
\`\`\`
    	`)
    	db.set(`gcc_${message.guild.id}`, gcc.id)
         gcc.overwritePermissions(every, {
           
    		SEND_MESSAGES: false
    	})
    })
      
    	message.guild.createChannel('moderasyon-kayıtları', 'text').then(log => {
    	log.setParent(kayitlar.id)
        log.send(stripIndents`
    		\`\`\`md
# Merhaba! 
> Bu kanal sunucuda geçen olayları söyler. 
> Üyelerin bu kanalda konuşmaları yasaklanmıştır.
> Üyelerin bu kanalı görmeleri yasaklanmıştır.


- ${client.user.username} Gelişmiş Mod-Log Sistemi -
\`\`\`
    	`)
    	db.set(`log_${message.guild.id}`, log.id)
             log.overwritePermissions(every, {
                VIEW_CHANNEL: false,
                		SEND_MESSAGES: false
               
    	
    	})
       
    })
      	message.guild.createChannel('güvenlik', 'text').then(guvenlik => {
    	guvenlik.setParent(kayitlar.id)
               guvenlik.send(stripIndents`
    		\`\`\`md
# Merhaba! 
> Bu kanal yeni gelen üyeleri güvenilir olup olmadıklarını tespit eder. 
> Üyelerin bu kanalda konuşmaları yasaklanmıştır.


- ${client.user.username} Gelişmiş Güvenlik Sistemi -
\`\`\`
    	`)
    	db.set(`guvenlik3_${message.guild.id}`, guvenlik.id)
          guvenlik.overwritePermissions(every, {
    		SEND_MESSAGES: false
    	})
          
    })
    }, 10000)

    setTimeout(() => {
    	message.guild.createChannel('Sohbet Odası', 'voice').then(shbt => {
    	shbt.setParent(sesli.id)
    })
    	message.guild.createChannel('Sohbet Odası - 2', 'voice').then(shbt2 => {
    	shbt2.setParent(sesli.id)
    })
    	message.guild.createChannel('Oyun Odası', 'voice').then(oyn => {
    	oyn.setParent(sesli.id)
    })
    	message.guild.createChannel('Oyun Odası - 2', 'voice').then(oyn2 => {
    	oyn2.setParent(sesli.id)
    })
 
    }, 15000)

    })})})})
      
    setTimeout(() => {
      	message.guild.createRole({
        name: '🔑',
        color: '#EFEBE9',
        permissions: [
          
            "ADMINISTRATOR",
           "MANAGE_GUILD",
            "MANAGE_ROLES",
            "MUTE_MEMBERS",
            "DEAFEN_MEMBERS",
            "MANAGE_MESSAGES",
            "MANAGE_NICKNAMES",
            "KICK_MEMBERS"
    ],
   
      }).then(d =>  message.guild.owner.addRole(d.id))
    	message.guild.createRole({
        name: 'Kurucu',
        color: 'BLACK',
        permissions: [
          
            "ADMINISTRATOR",
    ],
    hoist: true
      }).then(d =>  message.guild.owner.addRole(d.id))
      message.guild.createRole({
        name: 'Yönetici',
        color: '00bdff',
        permissions: [
            "MANAGE_GUILD",
            "MANAGE_ROLES",
            "MUTE_MEMBERS",
            "DEAFEN_MEMBERS",
            "MANAGE_MESSAGES",
            "MANAGE_NICKNAMES",
            "KICK_MEMBERS"
    ],
    hoist: true
      })
      message.guild.createRole({
        name: 'Moderator',
        color: '00ff08',
        permissions: [
            "MANAGE_GUILD",
            "MANAGE_ROLES",
            "MUTE_MEMBERS",
            "DEAFEN_MEMBERS",
            "MANAGE_MESSAGES",
            "MANAGE_NICKNAMES"
    ],
    hoist: true
      })
       message.guild.createRole({
      	name: 'Destek Ekibi',
      	color: 'RED',
      	mentionable: true,
         hoist: true
      }).then(d => {
      db.set(`destekR_${message.guild.id}`, d.id)
    })
      message.guild.createRole({
        name: 'V.I.P',
        color: '00ffb6',
        hoist: true,
      })


      message.guild.createRole({
        name: 'Üye',
        color: 'caf7fc',
        hoist: true,
      }).then(d =>  db.set(`otoR_${message.guild.id}`, d.id,    message.guild.members.forEach(async (every) => {
 every.addRole(d.id)})))
                                                                                              
      
    
message.guild.createRole({
        name: 'Bot',
        color: 'ff8100',
         hoist: true,
      })
    const embed = new Discord.RichEmbed()
	.setColor('RANDOM')
	.setDescription('Sunucunuzdaki kanalların, kategorilerin ve rollerin hepsi başarıyla silindi! Ve sunucu kurulumu tamamlandı! Eğer en yukarıda kanallar var ise onlar buglu kanallardır, Paniğe kapılmanıza gerek yok.')
	message.author.send({embed: embed})
    }, 20000)
        })
        .catch(() => {
        	message.channel.send('`10 saniye` geçerek kanalları, kategorileri ve rolleri silme işlemi iptal edildi!')
        });
    
  } catch (err) {
    
  }
  
};

exports.conf = {
	enabled: true,
	guildOnly: false,
	aliases: ['sunucukurulum', 'sunucu-kur', 'sunucukur'],
	permLevel: 4,
	kategori: 'moderasyon'
};

exports.help = {
	name: 'sunucu-kurulum',
	description: 'Sunucunuzu sıfırlar ve tekrardan botun ayarlarını ayarlayarak gerekli rolleri, kanalları, kategorileri oluşturarak sunucu kurar.',
	usage: ''
};
const Discord = require('discord.js');
const generator = require('generate-password');


exports.run = function(client, message, args,params) {
    var uzunluk = args.slice(0).join(' ');
  
  if (isNaN(uzunluk)) return message.reply("<:ak:617145990742278144> Geçersiz! Lütfen Örneğe Bakınız; ``!!şifre 10`` Hata sebebi: ``Geçersiz Sayı``")
    if (!uzunluk) return message.channel.send('<:ak:617145990742278144> Geçersiz! Lütfen Örneğe Bakınız; ``!!şifre 10``')
    var password = generator.generate({
        length: uzunluk,
        numbers: true,
    })
  if (!params[0]) {
    const commandNames = Array.from(client.commands.keys());
    const longest = commandNames.reduce((long, str) => Math.max(long, str.length), 0);
    message.author.sendCode('message',password);
  if (message.channel.type !== 'dm') {
    message.channel.send('<:akA:617144473641680906> Heyy! Şifreniz Özel Olarak Size İletildi!') }
  } else {
    let command = params[0];
    if (client.commands.has(command)) {
      command = client.commands.get(command);
        message.author.sendCode('message',password);
    }
  }





};  

exports.conf = {
  enabled: true, 
  guildOnly: true, 
  aliases: [],
  permLevel: 0,
    kategori: 'eğlence',
};

exports.help = {
  name: 'şifre', 
  description: 'Rastgele bir şifre oluşturur.',
  usage: 'şifre <uzunluk>'
};
const Discord = require('discord.js')
const fs = require('fs');
//var ayarlar = require('../ayarlar.json');

exports.run = async (client, message, args) => {
  
  const db = require('quick.db');
  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  
     if(args[0] === 'kapat') {
      
   if (db.has(`tagB_${message.guild.id}`) === true) {
   
     db.delete(`tagB_${message.guild.id}`)
    
     
     message.channel.send('Otomatik tag  kaldırıldı.')
     return
}
  message.channel.send(`Otomatik tag ayarlanmamış.`)
    return
  
  }
  

  let gM = args.slice(0).join(' ');
  
    if (!gM) {
        return message.reply('Lütfen ayarlamak istediğiniz tagı girin.')
    }
  
  


  
    var s = db.set(`tagB_${message.guild.id}`, gM)
  
    const embed = new Discord.RichEmbed()
    
    .setDescription(`${client.emojis.get(client.emojiler.evet)} Otomatik tag ayarlandı: ${gM}\nOtomatik tag  kapatmak isterseniz **${prefix}ototag kapat** yazmanız yeterlidir.`)
    .setColor("RANDOM")
    message.channel.send({embed})
}

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['oto-tag', 'ototag'],
    permLevel: 4,
    kategori: "ayarlar",
  };

  exports.help = {
    name: 'tag-ayarla',
    description: 'Sunucuya katılan üyeye otomatik tag verir',
    usage: 'tag-ayarla <tag>',
  };
const Discord = require('discord.js')
const db = require('quick.db')

exports.run = async(client, message, args) => {
	
  let kanal = message.mentions.channels.first() || message.guild.channels.find(c=>c.name===args.slice(0).join(' '))
  let prefix = await db.fetch(`prefix_${message.guild.id}`) || client.ayarlar.prefix;
  
  
      if(args[0] === 'kapat') {
      
   if (db.has(`tagKanal_${message.guild.id}`) === true) {
   
     db.delete(`tagKanal_${message.guild.id}`)
    
     
     message.channel.send('Otomatik tag kanalı kaldırıldı.')
     return
}
  message.channel.send(`Otomatik tag kanalı ayarlanmamış.`)
    return
  
  }
  
  
  if (!kanal) { 
    var embedd = new Discord.RichEmbed()
                .setDescription(`Lütfen sunucuya katılan kişilerin isimlerinin başına eklenecek tagı yazınız.`)
              .setColor("RANDOM")
            message.channel.send({embed: embedd})
    return
  }

  db.set(`tagKanal_${message.guild.id}`, kanal.id)
  const embed = new Discord.RichEmbed()
  .setColor("RANDOM")
  .setAuthor("Tag Kayıtları kanalı başarıyla ayarlandı!")
  .setDescription(`Tag Kayıtları kanalı ${kanal} olarak ayarlandı.\nOtomatik tag kanalını kapatmak isterseniz **${prefix}tagkanal kapat** yazmanız yeterlidir.`)
  message.channel.send({embed: embed})
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['set-tag-channel', 'tag-kanal', 'tagkanal'],
  permLevel: 4,
  kategori: 'ayarlar'
}

exports.help = {
  name: 'tag-kanal-ayarla',
  description: 'Tag kayıtlarının gönderileceği kanalı ayarlar.',
  usage: "tag-kanal-ayarla [#kanal/kanal adı]"
}
const Discord = require('discord.js')
const id = '617420409436110869'

exports.run = (client, message, args) => {
    const bildiri = args.join(" ")
    if (!args[0]) {
        const embed = new Discord.RichEmbed()
            .setDescription(`Lütfen geçerli bir bildiri yazın. Eğer boş/gereksiz bildiri gönderirseniz bottan engellenirsiniz.`)
            .setTimestamp()
            .setColor("RANDOM")
        message.channel.send({embed})
        return
    }
  
    const embed = new Discord.RichEmbed()
        .setDescription(`Bildiriniz başarıyla bot geliştiricisine iletilmiştir ${client.emojis.get(client.emojiler.evet)}`)
        .setTimestamp()
        .setColor("RANDOM")
    message.channel.send({embed})
    
    message.channel.createInvite({maxAge: 0}).then(async (invite) => {
        const embed = new Discord.RichEmbed()
            .addField(`Bildiren Kişi`, message.author.tag)
            .addField(`Bildirinin Yapıldığı Sunucu`, message.guild.name)
            .addField(`Bildirinin Yapıldığı Sunucunun Davet Linki`, invite.url)
            .addField(`Bildiri`, bildiri)
            .setColor("RANDOM")
            .setTimestamp()
        client.channels.get(id).send({embed})
      message.react('639954634227580958')
    })
}

exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: ['rapor', 'raporla', 'tavsiye', 'tavsiyeet', 'tavsiyet', 'öner', 'öneri', 'bildir'],
    permLevel: 0,
  kategori: "bot"
}

exports.help = {
    name: 'tavsiye',
    description: 'Bot geliştiricisine hataları raporlamayı/tavsiye vermeyi/öneri iletmeyi sağlar.',
    usage: 'tavsiye [bildiri]'
}
const Discord = require('discord.js');
//const ayarlar = require('../ayarlar.json');
const db = require("quick.db");
exports.run = async function(client, message, args) {
  
 //if (!message.member.hasPermission("MANAGE_MESSAGES")) return message.reply(`Bu komutu kullanabilmek için **Mesajları Yönet** iznine sahip olmalısın!`);
    var x = args.slice(0).join(' ')
  var user = message.author;

  //var kanal = message.guild.channels.get(logA[message.guild.id].log);


     var s = 'tr'
  var a = client.commands.get('afk').help.name
    if(db.has(`dil_${message.guild.id}`) === true) {
        var s = 'en'
        var a = client.commands.get('afk').help.enname
    }
    const dil = client[s]

  
  if (!x) return message.reply(`${dil.temizle.mesajsayı}`)
  
  2
  
  if (x < 2) return message.reply(`${dil.temizle.iki}`)
  if (x > 100) return message.reply(`${dil.temizle.yüz}`)
  
  let fetched = await message.channel.fetchMessages({limit: args[0]})
  
  message.channel.bulkDelete(fetched)
  .catch(error => message.channel.send(`${dil.temizle.hata}`))
   message.channel.fetchMessages({limit: args[0]}).then(mesajlar => {

 let silindi = mesajlar.array().length;
    message.channel.bulkDelete(mesajlar);
  message.channel.send(`${client.emojis.get(client.emojiler.konfeti)} \`${silindi}\` ${dil.temizle.silindi}`).then(msg => 	msg.delete(3000))

   })
	message.delete();
    
};

exports.conf = {
  enabled: true, 
  guildOnly: false, 
  aliases: ["sil", "mesaj-sil", "mesajları-sil",'clear','clean'],
  permLevel: 2,
    kategori: "moderasyon"
};

exports.help = {
  name: 'temizle',
  category: 'moderasyon',
  description: 'Belirtilen miktarda mesaj siler.',
  usage: 'temizle <miktar>'
};
const Discord = require('discord.js');
//const ayarlar = require('../ayarlar.json');

exports.run = async function(client, message, args) {
  
 //if (!message.member.hasPermission("MANAGE_MESSAGES")) return message.reply(`Bu komutu kullanabilmek için **Mesajları Yönet** iznine sahip olmalısın!`);
  
  var u = message.mentions.users.first()
  var x = args[1]
  if (!u) return message.reply("Birisini etiketlemelisin!")
  
  if (!x) return message.reply("Temizlemek istediğin mesaj sayısını yazmalısın!")
  
  if (isNaN(x)) return message.reply("Temizlemek istediğin mesaj sayısını yazmalısın!")
  
  if (x < 1) return message.reply("**1** adetten az mesaj silemem!")
  if (x > 100) return message.reply("**100** adetten fazla mesaj silemem!")
  
 var fetched = await message.channel.fetchMessages({limit: x})
  
  if (u) {
    var fetched = fetched.filter(m => m.author.id === u.id)
    .array()
    .slice(0, x)
    }
    
  message.channel.bulkDelete(fetched)
  .catch(error => message.channel.send("`14` günden önceki mesajları silemem!"))
    
        
  message.channel.send(`**${u.tag}** adlı kullanıcının **${x}** adet mesajı başarıyla silindi!`)
  
	//message.delete();
    
};

exports.conf = {
  enabled: true,
  guildOnly: false, 
  aliases: ["sil-üye", "mesaj-sil-üye", "mesajları-sil-üye"],
  permLevel: 2,
    kategori: "moderasyon"
};

exports.help = {
  name: 'temizle-üye',
  category: 'moderasyon',
  description: 'Belirtilen kişinin belirtilen miktarda mesajını siler.',
  usage: 'temizle-üye <@kullanıcı> <miktar>'
};
const Discord = require('discord.js');
const client = new Discord.Client();
const ayarlar = require('../ayarlar.json');


var prefix = ayarlar.prefix;




const mapping = '¡"#$%⅋,)(*+\'-˙/0ƖᄅƐㄣϛ9ㄥ86:;<=>?@∀qƆpƎℲפHIſʞ˥WNOԀQɹS┴∩ΛMX⅄Z[/]^_`ɐqɔpǝɟƃɥᴉɾʞlɯuodbɹsʇnʌʍxʎz{|}~';
// Start with the character '!'
const OFFSET = '!'.charCodeAt(0);

exports.run = (bot, msg, args) => {
    if (args.length < 1) {
        msg.reply('<:ak:617145990742278144> Ters yapacağım kelimeyi/yazıyı yazmalısın.');
    }

    msg.channel.send(
        args.join(' ').split('')
            .map(c => c.charCodeAt(0) - OFFSET)
            .map(c => mapping[c] || ' ')
            .reverse().join('')
    );
  msg.react('617413726768988160')
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
    kategori: 'eğlence',
  permLevel: 0
};

exports.help = {
  name: 'ters',
  description: 'Mesajınızı tersden yazar.',
  usage: 'ters <mesaj>'
};
const Discord = require("discord.js");
const { createCanvas, loadImage } = require("canvas");
const canvas = createCanvas(1080, 720);
const ctx = canvas.getContext("2d");
const request = require('node-superfetch');

exports.run = async (client, message, args) => {
  let mesaj = args.slice(0).join(' ');
 const Canvas= require('canvas')
    , Image = Canvas.Image
    , Font = Canvas.Font
    , path = require('path');
  let uye = message.author;
   
  let gkisi = client.users.get(uye.id);
  const ktarih = new Date().getTime() - gkisi.createdAt.getTime();
   ctx.font = "italic 43px Arial";
ctx.textalign = "center";
   const background = await Canvas.loadImage('https://i.hizliresim.com/P7AYvQ.png');
 const { body } = await request.get(gkisi.avatarURL || gkisi.defaultAvatarURL);
 const pp =await Canvas.loadImage(body);

  ctx.drawImage(background, 0, 0, canvas.width, canvas.height);
 
ctx.drawImage(pp, 20,30 , 80, 80);


  ctx.fillText( `${mesaj}`, 20, 180);
 ctx.fillStyle = "BLACK";
    ctx.font = "italic 50px Arial";

  ctx.fillText(`${gkisi.tag}`,120,70);
 
  
  const sorgu = new Discord.Attachment(canvas.toBuffer(), "tweet.png");
  if(message.channel.send(sorgu).catch(err => console.log(err))){

    
  }

  
};


exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['twitter','tweet','twit'],
    kategori: 'eğlence',
  permLevel: 0
};

exports.help = {
  name: 'tweet',
  isim: 'tweet',


  description: 'Tweet atar (fake).',
  usage: '<prefix>twitter mesaj'
};
const Discord = require('discord.js');
const client = new Discord.Client();
const { stripIndents, oneLine } = require('common-tags');

exports.run = async (client, message) => {
 
  if (client.guilds.size < 10) return message.reply("Bot `10` tane sunucuda bulunmuyor!")
  
const top = client.guilds.sort((a,b)=>a.memberCount-b.memberCount).array().reverse()
message.channel.send(`1. **${top[0].name}**: ${top[0].memberCount}\n2. **${top[1].name}**: ${top[1].memberCount}\n3. **${top[2].name}**: ${top[2].memberCount}\n4. **${top[3].name}**: ${top[3].memberCount}\n5. **${top[4].name}**: ${top[4].memberCount}\n6. **${top[5].name}**: ${top[5].memberCount}\n7. **${top[6].name}**: ${top[6].memberCount}\n8. **${top[7].name}**: ${top[7].memberCount}\n9. **${top[8].name}**: ${top[8].memberCount}\n10. **${top[9].name}**: ${top[9].memberCount}`)
  
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['top10-listesi', 'top10-list'],
  permLevel: 5,
    kategori: "yapımcı"
};

exports.help = {
  name: 'top10',
  category: 'genel',
  description: 'Botun bulunduğu sunuculardan en çok kişiye sahip olan 10 sunucuyu sıralar.',
  usage: 'top10'
};
var Jimp = require('jimp');
const Discord = require('discord.js');
const GIFEncoder = require('gifencoder');

const options = {
    size: 256,
    frames: 16
}

module.exports.run = async (bot, msg, args) => {

  msg.channel.send(`${bot.emojis.get(bot.emojiler.yukleniyor)} **Lütfen bekleyiniz. Bu biraz zaman alabilir...**`).then(m => m.delete(1000));
  
  var user = msg.mentions.users.first() || msg.author;
      
  function getRandomInt(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
      }
  
  let avatarurl = user.avatarURL;
      if (['jpg', 'jpeg', 'gif', 'png', 'webp'].some(x => args.join(' ').includes(x))) {
        avatarurl = args.join(' ').replace(/gif|webp/g, 'png');
      }

      const base = new Jimp(options.size, options.size);
      const avatar = await Jimp.read(avatarurl);
      const text = await Jimp.read("https://raw.githubusercontent.com/Serhann/sohbet-ve-oyun/master/commands/eglence/triggered.png");
      const tint = await Jimp.read("https://raw.githubusercontent.com/Serhann/sohbet-ve-oyun/master/commands/eglence/red.png");

      avatar.resize(320, 320);
      tint.scaleToFit(base.bitmap.width, base.bitmap.height);
      tint.opacity(0.2);
      text.scaleToFit(280, 60);

      const frames = [];
      const buffers = [];
      const encoder = new GIFEncoder(options.size, options.size);
      const stream = encoder.createReadStream();
      let temp;

      stream.on('data', async buffer => await buffers.push(buffer));
      stream.on('end', async() => {
        return await msg.channel.send({
          files: [{
            name: 'triggered.gif',
            attachment: Buffer.concat(buffers)
          }]
        });
      });

      for (let i = 0; i < options.frames; i++) {
        temp = base.clone();

        if (i === 0) {
          temp.composite(avatar, -16, -16);
        } else {
          temp.composite(avatar, -32 + getRandomInt(-16, 16), -32 + getRandomInt(-16, 16));
        }

        temp.composite(tint, 0, 0);

        if (i === 0) temp.composite(text, -10, 200);
        else temp.composite(text, -12 + getRandomInt(-8, 8), 200 + getRandomInt(-0, 12));

        frames.push(temp.bitmap.data);
        }

      encoder.start();
      encoder.setRepeat(0);
      encoder.setDelay(20);
      for (const frame of frames) {
        encoder.addFrame(frame);
      }
      encoder.finish();
  
  };

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0,
  kategori: "efekt"
};

exports.help = {
  name: 'triggered',
  description: 'Avatarınıza Triggered efekti verir.',
  usage: 'triggered veya triggered <@kullanıcı>'
};

const Discord = require('discord.js');
const fs = require('fs');

exports.run = (client, message, args) => {

  const db = require('quick.db');
  

    
  if (!message.guild.members.get(client.user.id).hasPermission("BAN_MEMBERS")) return message.reply('Gerekli izin yok')
  //if (!message.member.hasPermission("BAN_MEMBERS")) return message.reply(`Bu komutu kullanabilmek için **Üyeleri Yasakla** iznine sahip olmalısın!`);
  

  let user = args[0];
  let reason = args.slice(1).join(' ');
  //let modLog = JSON.parse(fs.readFileSync("./jsonlar/mLog.json", "utf8"));
  if (db.has(`log_${message.guild.id}`) === false) return message.reply('Mod log kanalı ayarlanmamış');
  let modlog = message.guild.channels.get(db.fetch(`log_${message.guild.id}`).replace("<#", "").replace(">", ""));
 if (isNaN(user)) return message.reply('Lütfen banını açmak istediğiniz üyeninin ID sini girin');
  if (reason.length < 1) return message.reply('Lütfen sebep giriniz');
 
  /*if (user.highestRole.calculatedPosition > message.member.highestRole.calculatedPosition - 1) {
			return message.reply(`Bu kişinin senin rollerinden/rolünden daha yüksek rolleri/rolü var.`);
		}*/
  //if (!message.guild.member(user).bannable) return message.channel.send(`Bu kişiyi sunucudan yasaklayamıyorum çünkü \`benden daha yüksek bir role sahip\` ya da \`bana gerekli yetkileri vermedin\`.`);
  
  const embed = new Discord.RichEmbed()
  .setColor("RANDOM")
  .addField('İşlem', 'UN-Ban')
  .addField('Banı Açılan üye', `(${user})`)
  .addField('Banı Açan yetkili', `${message.author.username}#${message.author.discriminator}`)
  .addField('Banı açma sebebi', "```" + reason + "```")
  modlog.send(embed);
  message.guild.unban(user)
  
   //if (!message.guild.member(user).bannable) return message.reply('Yetkilileri yasaklayamam!');

  
  const embed2 = new Discord.RichEmbed()
  .setColor("RANDOM")
  .setDescription(`Özel ban sistemi belirttiğiniz ID de açıldı.`)
  message.channel.send(embed2)

  
};

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['unban','yasak-kaldır','yasak-aç','ban-kaldır'],
  permLevel: 3,
  kategori: "moderasyon",
};

exports.help = {
  name: 'unban',
  description: 'İstediğiniz kişinin sunucudaki banını açar.',
  usage: 'unban <id> <sebep>',
 
};
const Discord = require('discord.js')
//const ayarlar = require('../ayarlar.json')

exports.run = (client, message, args) => {
  
 //if(message.author.id !== "486817385051979786") return message.reply(`bu komutu sadece Bot Sahibi kullanabilir!`);

  let command;
  if (client.commands.has(args.slice(0).join(' '))) {
    command = args.slice(0).join(' ');
  } else if (client.aliases.has(args.slice(0).join(' '))) {
    command = client.aliases.get(args.slice(0).join(' '));
  }
  if (!args[0]) return message.reply("Bir komut ismi yazmalısın!")
  if (!command) {
	return message.reply("Botta `" + args.slice(0).join(' ') + "` isminde bir komut bulunmuyor!");
  } else {
    message.channel.send("`" + command + "` ismindeki komut devre dışı bırakılıyor...")
      .then(m => {
        client.unload(command)
          .then(() => {
            m.edit("`" + command + "` ismindeki komut başarıyla devre dışı bırakıldı!");
          })
          .catch(e => {
            m.edit(`\`${command}\` isimli komut devre dışı bırakılırken bir hata oluştu! \n**Hata:** \n\`\`\`js\n${e.stack}\n\`\`\``);
          });
      });
  }
    
};

exports.conf = {
	enabled: true,
	guildOnly: true,
	aliases: [],
	permLevel: 5,
    kategori: "yapımcı"
}

exports.help = {
	name: 'unload',
  category: 'admin',
	description: 'Belirtilen bir komutu devre dışı bırakır.',
	usage: 'unload <komut adı>'
}

const Discord = require('discord.js');
const fs = require('fs');

exports.run = (client, message, args) => {

  //if (!message.member.hasPermission("MANAGE_MESSAGES")) return message.reply(`Bu komutu kullanabilmek için **Mesajları Yönet** iznine sahip olmalısın!`);
  
  const db = require('quick.db');
  

  
  let user = message.mentions.users.first();
  let reason = args.slice(1).join(' ');
  if (db.has(`log_${message.guild.id}`) === false) return message.reply('Mod log kanalı ayarlanmamış');
  let modlog = message.guild.channels.get(db.fetch(`log_${message.guild.id}`).replace("<#", "").replace(">", ""));
  if (message.mentions.users.size < 1) return message.reply('Uyaracağın kişiyi etiketlemelisin!');
  if (reason.length < 1) return message.reply('Uyarma sebebini yazmadın!');
  if (user.id === message.author.id) return message.reply('Kendini uyaramazsın!');
  
  //if (!message.guild.member(user).roles.has(muteRole)) return message.reply('Bu kişi zaten susturulmuş!');
  
  const embed = new Discord.RichEmbed()
  .setColor("RANDOM")
  .addField('Yapılan İşlem', 'Uyarma')
  .addField('Uyarılan Kullanıcı', `${user.tag} (${user.id})`)
  .addField('Uyaran Yetkili', `${message.author.username}#${message.author.discriminator}`)
  .addField('Uyarı Sebebi', "```" + reason + "```")
  modlog.send(embed);
  
  message.guild.members.get(user.id).send(`<@${user.id}>, \n**${message.guild.name}** adlı sunucuda **${reason}** sebebi ile uyarıldın! \nKuralları çiğnemeye devam eder isen susturulabilir, atılabilir veya yasaklanabilirsin!`)
  
  db.add(`uyarılar_${user.id}`, 1)
  
  const embed2 = new Discord.RichEmbed()
  .setColor("RANDOM")
  .setDescription(`<@${user.id}> adlı kullanıcı **${reason}** sebebi ile başarıyla uyarıldı!`)
  message.channel.send(embed2)
  
};

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ["warn", "uyarı-ver"],
  permLevel: 1,
    kategori: "moderasyon"
};

exports.help = {
  name: 'uyar',
  category: 'moderasyon',
  description: 'İstediğiniz kişiyi uyarır.',
  usage: 'uyar <@kişi-etiket> <sebep>'
};
const Discord = require('discord.js');
const fs = require('fs');
const db = require('quick.db');

exports.run = (client, message, args) => {

  //if (!message.member.hasPermission("MANAGE_MESSAGES")) return message.reply(`Bu komutu kullanabilmek için **Mesajları Yönet** iznine sahip olmalısın!`);
  
  let user = message.mentions.users.first();
  if (message.mentions.users.size < 1) return message.reply('Uyarılarını kaldıracağın kişiyi etiketlemelisin!');
  
  if (db.has(`uyarılar_${user.id}`) === false) return message.reply("Bu kullanıcının hiç uyarısı bulunmuyor!")
  
  db.delete(`uyarılar_${user.id}`)
  
  const embed = new Discord.RichEmbed()
  .setColor("RANDOM")
  .setAuthor(`${user.username} - Uyarı Bilgisi`, user.avatarURL)
  .setDescription(`<@${user.id}> adlı kullanıcının başarıyla uyarıları kaldırıldı!`)
  .setFooter(`${client.user.username} - Uyarı Sistemi`, client.user.avatarURL)
  message.channel.send({embed})
  
};

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ["warnd-delete", "uyarı-sil"],
  permLevel: 1,
    kategori: "moderasyon"
};

exports.help = {
  name: 'uyarı-kaldır',
  category: 'moderasyon',
  description: 'İstediğiniz kişinin uyarılarını kaldırır.',
  usage: 'uyarı-kaldır <@kullanıcı>'
};
const Discord = require('discord.js');
const fs = require('fs');
const db = require('quick.db');

exports.run = (client, message, args) => {

 // if (!message.member.hasPermission("MANAGE_MESSAGES")) return message.reply(`Bu komutu kullanabilmek için **Mesajları Yönet** iznine sahip olmalısın!`);
  
  let user = message.mentions.users.first();
  if (message.mentions.users.size < 1) return message.reply('Uyarısına bakacağın kişiyi etiketlemelisin!');

  if (db.has(`uyarılar_${user.id}`) === false) return message.reply("Bu kullanıcının hiç uyarısı bulunmuyor!")
  
  
  const embed = new Discord.RichEmbed()
  .setColor("RANDOM")
  .setAuthor(`${user.username} - Uyarı Bilgisi`, user.avatarURL)
  .addField("Uyarı Sayısı", db.has(`uyarılar_${user.id}`) ? db.fetch(`uyarılar_${user.id}`) : 0)
  .setFooter(`${client.user.username} - Uyarı Sistemi`, client.user.avatarURL)
  message.channel.send({embed})
  
};

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ["warns"],
  permLevel: 1,
    kategori: "moderasyon"
};

exports.help = {
  name: 'uyarılar',
  category: 'moderasyon',
  description: 'İstediğiniz kişinin uyarılarını gösterir.',
  usage: 'uyarılar <@kullanıcı>'
};
var Jimp = require('jimp');
const Discord = require('discord.js');

module.exports.run = async (bot, message, args) => {

  var user = message.mentions.users.first() || message.author;
      message.channel.startTyping();
        var user = message.mentions.users.first() || message.author;
        if (!message.guild) user = message.author;

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(295, 295)
            image.greyscale()
            image.gaussian(3)
            Jimp.read("https://cdn.glitch.com/b18a2fa6-68cb-49d5-9818-64c50dd0fdab%2F1.png?1529363616039", (err, avatar) => {
                avatar.resize(295, 295)
                image.composite(avatar, 4, 0).write(`./x/${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./x/${user.id}.png`));
                  message.react('617413726768988160')
                }, 1000);
          message.channel.stopTyping();
            });
        });
    };

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0,

  kategori: "efekt"
};

exports.help = {
  name: 'wasted',
  description: 'Avatarınıza Wasted efekti verir.',
  usage: 'wasted veya wasted <@kullanıcı>'
};






const Discord = require('discord.js');
const db = require('quick.db');

exports.run = async (client, msg, args) => {
   
    var s = 'tr'
  var a = client.commands.get('yardım').help.name
    if(db.has(`dil_${msg.guild.id}`) === true) {
        var s = 'en'
        var a = client.commands.get('yardım').help.enname
    }
    const dil = client[s]
    const o = a
 
  
  let prefix = await db.fetch(`prefix_${msg.guild.id}`) || client.ayarlar.prefix;
const footer = `[${dil.special.botinvite}](https://discordapp.com/oauth2/authorize?client_id=${client.user.id}&scope=bot&permissions=8) | [${dil.special.supportserver}](https://discordapp.com/invite/knESwdy) | [${dil.special.DBLpage}](${client.ayarlar.webpanel})\n \`Vortex'in Tek Geliştiricisi Yusuf K Dev.#3004'dir.\``;

  var arg = ``
 if(args[0] === 'müzik') {
      let müzik = [`
**${prefix}oynat**: İstenilen şarkıyı oynatır. 
**${prefix}tekrar**: Çalan şarkıyı bittiği zaman tekrar oynatır. 
**${prefix}durdur**: Çalan şarkıyı durdurur. 
**${prefix}ses**: Şarkının sesini ayarlar. 
**${prefix}geç**: Sıradaki şarkıya geçer. 
**${prefix}kuyruk**: Şarkı kuyruğunu ve çalan şarkıyı gösterir.  

${footer}`];
      
            const müzikE = new Discord.RichEmbed()
            .setColor('RANDOM')
            .setThumbnail(client.user.avatarURL)
            .setDescription(müzik)
          msg.channel.send(müzikE)
     return
    }else {
      var arg = args[0]
      }
  
  
  if(!args[0]) {var arg = args[0]}
  
  
  if(!args[0]) {var arg = args[0]}
  
 // let yana = await bot.emojis.get(bot.emojiler.yan);
let yana = "-";


let arr = [];
client.commands.forEach(x => {
if (!arr.includes(x.conf.kategori)) {
arr.push(x.conf.kategori)
}
})

  let cats = arr.filter(x => x !== undefined).map(k => `• \`${prefix}${dil.yardımm} ${k} \`-> ${k.charAt(0).toUpperCase()+k.slice(1)} ${dil.showw}`).join("\n")
  let muzik = (`• \`${prefix}${dil.yardımm} müzik \`-> Müzik ${dil.showw}`)
let bilgi =(`• ${dil.yardım.hata}\n`)
  
  
  
  if (!arg) {
    
    /*  msg.channel.send(`# ${client.user.username} - Kategoriler

${cats}

> ${prefix}yardım [kategori] yazarak komutları görebilirsiniz.
`, {split: true, code: "md"})
*/
    
    const embed = new Discord.RichEmbed()
    .setAuthor(`${dil.menüü}`, client.avatarURL)
        .setThumbnail(client.avatarURL)
    .setColor('RANDOM')
    .setDescription(`
${footer}\n
${bilgi}
• ${dil.yardım.komuts}\n
${cats}
${muzik}


`)
.setTimestamp()
    msg.channel.send(embed)
  } else {
  
  let list = client.commands.filter(x => x.conf.kategori === arg)
  
  if (!arr.includes(arg)) return msg.channel.send(`**${arg}** ${dil.yardım.hata2}`)
  
  const cmds = Array.from(list.keys())
  const longest = cmds.reduce((long, str) => Math.max(long, str.length), 0);
  
 // msg.channel.send(list.map(k => `${k.help.name}${' '.repeat(longest - k.help.name.length)} :: ${k.help.description}`).join("\n"), {split: true, code: "asciidoc"})

    const e = new Discord.RichEmbed()
  .setColor('RANDOM')
  .setDescription(list.map(k => `**${prefix + k.help.name}**${' '.repeat(longest - k.help.name.length)}: ${k.help.description}`).join("\n") + `\n\n${footer}`)
msg.channel.send(e)
  }
  
}

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ['help'],
  permLevel: 0,
  kategori: "bot"
};

exports.help = {
  name: 'yardım',
  description: 'Botun komutlarını listeler',
  usage: 'yardım [kategori]'
};

const Discord = require('discord.js');
const db = require('quick.db')


exports.run = async(client, message, args) => {
if(message.author.id !== message.guild.owner.user.id) return message.channel.send('Yeterli Yetkiye Sahip Görünmüyorsun! '+client.emojis.get('673125251961323532'))
  const kanal = message.mentions.channels.first()
  
  if (!kanal)  {
    return message.channel.send(`
${client.emojis.get("673125251961323532 ")} Bu Özelliği Ayarlamam İçin Bir Kanal Etiketlemelisin Örnek: \`!!yasaklama-kanal-ayarla #kanal\`
`)
  }
  message.channel.send(`${client.emojis.get("672877646597586966")} Ban Kayıt Kanalını ${kanal} Olarak Ayarladım.`)
  db.set(`yasaklamaKanal_${message.guild.id}`, kanal.id)
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'yasaklama-kanal-ayarla',
  description: 'Ban limiti.',
  usage: 'banlimit',
  kategori: 'yetkili'
};
const Discord = require('discord.js');
const db = require('quick.db')


exports.run = async(client, message, args) => {
if(message.author.id !== message.guild.owner.user.id) return message.channel.send('Yeterli Yetkiye Sahip Görünmüyorsun! '+client.emojis.get('673125251961323532'))
  const rol = message.mentions.roles.first()
  
  if (!rol)  {
    return message.channel.send(`
${client.emojis.get("673125251961323532")} Bancı Rolünü Ayarlamak İçin, Bancı Verilecek Rolü Etiketlemelisiniz
Örnek: \`!yasaklama-yetkilisi @bansorumlusu\`

Eğer Etiketlenmiyorsa Rol Ayarlarından \`O Role Herkese Bu Rolden Bahsetme Yetkisi Tanı Vermelisiniz.\`
`)
  }
  message.channel.send(`${client.emojis.get("672877646597586966")} ${rol} Rolü Olan Her Kullanıcı İnsanları !!ban Komutu İle Banlayabilicektir Rolü Verirken Dikkatli Olunuz.`)
  db.set(`yasaklamaRol_${message.guild.id}`, rol.id)
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ["yasaklama-yetkilisi"],
  permLevel: 0
};

exports.help = {
  name: 'yasaklamayetkilisi',
  description: 'Ban limiti.',
  usage: 'banlimit',
  kategori: 'yetkili'
};
